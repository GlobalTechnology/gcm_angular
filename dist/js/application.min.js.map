{"version":3,"sources":["_app.js","controllers/_controllers.js","directives/_directives.js","filters/_filters.js","services/_services.js","controllers/admin/_admin.js","controllers/map/_map.js","controllers/error/_error.js","controllers/measurements/_measurements.js","controllers/reports/_reports.js","services/measurements/_measurements.js","services/settings/_settings.js","app.js","controllers/gma-ctrl.js","application.min.js","controllers/join-ministry-ctrl.js","directives/gma-trend-directive.js","directives/select-on-focus.js","filters/role-filter.js","controllers/admin/admin-ctrl.js","controllers/map/map-ctrl.js","controllers/error/error-ctrl.js","controllers/measurements/measurement-details-ctrl.js","controllers/measurements/measurements-ctrl.js","controllers/reports/reports-ctrl.js","services/measurements/assignments-service.js","services/measurements/churches-service.js","services/measurements/measurement-types-service.js","services/measurements/measurements-service.js","services/measurements/ministries-service.js","services/measurements/session-service.js","services/measurements/trainings-service.js","services/settings/settings-service.js"],"names":["angular","module","run","$rootScope","$route","$location","Session","Settings","current","isLoaded","window","parent","parentHash","location","hash","path","slice","$on","reload","startSession","ticket","config","$routeProvider","$httpProvider","$compileProvider","SettingsProvider","$provide","setConfig","gma","aHrefSanitizationWhitelist","interceptors","push","forEach","routes","route","i","otherwise","redirectTo","when","templateUrl","controller","decorator","$delegate","ngModel","scope","element","attrs","$injector","$interpolate","get","$set","name","invoke","this","$scope","$element","$attrs","form","ngForm","GMACtrl","$filter","$modal","Ministries","Assignments","$log","flattenMinistries","arr","ministries","ministry","hasOwnProperty","sub_ministries","concat","_","sortBy","m","team_role","uniq","ministry_id","tabs","appEnvironment","event","session","assignments","joinMinistry","$watch","oldVal","debug","isUndefined","assignment","contains","pluck","id","mccs","length","mcc","indexOf","mccSort","hasRole","role","mccLabels","ds","gcm","llm","slm","value","periods","now","moment","date","clone","subtract","period","prevPeriod","index","nextPeriod","logout","then","api","invalidateSession","allowClose","instance","open","keyboard","backdrop","resolve","getMinistries","$promise","result","addTeamMember","username","user","cas_username","onError","mobileApps","$inject","JoinMinistryCtrl","$modalInstance","join","close","cancel","dismiss","directive","restrict","require","link","chart","google","visualization","LineChart","$render","draw","$viewValue","width","height","chartArea","focusedElement","on","select","filter","items","filtered","item","AdminCtrl","MeasurementTypes","roles","text","getMinistry","measurementTypes","getMeasurementTypes","data","type","visible","is_custom","lmi_show","perm_link_stub","lmi_hide","saveRole","saveAssignment","assignment_id","ableToChangeParentMinistry","parentToFind","availableMinIds","add","newMember","addSubMinistry","newMinistry","parent_id","createMinistry","isDefined","addMeasurement","newMeasurement","addMeasurementType","saveDetails","min_code","has_ds","has_gcm","has_llm","has_slm","private","where","saveDetailsResource","updateMinistry","saveDetailsAlert","msg","response","Message","$","MapCtrl","$document","$compile","Trainings","Churches","initialize","map","maps","Map","document","getElementById","mapOptions","setOptions","draggableCursor","addListener","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","lat","lng","trigger","loadChurches","markers","church","churchWindow","InfoWindow","churchWindowContent","maxWidth","trainingWindow","trainingWindowContent","newChurchWindow","cancelAddChurch","newChurchWindowContent","newTrainingWindow","newTrainingContent","church_lines","icons","MarkerImage","versionUrl","Size","Point","cluster","multiplying","group","targetpoint","training","side","style","display","search","controls","ControlPosition","TOP_RIGHT","TOP_LEFT","autocomplete","places","Autocomplete","bindTo","place","getPlace","geometry","viewport","fitBounds","setCenter","setZoom","load_training_markers","a","LatLng","latitude","longitude","parseInt","location_zoom","show_target_point","show_group","show_church","show_mult_church","show_lines","show_jf","map_filter","icon_add_mode","show_all","show_tree","new_church","edit_church","SetParentMode","churches","trainings","training_types","show","zoom","center","panControl","zoomControl","mapTypeControl","streetViewControl","overviewMapControl","supportsGeoLocation","navigator","geolocation","setTimeout","loadTrainings","debounce","getTrainings","sessionToken","console","log","params","lat_min","lat_max","long_min","long_max","format","getZoom","getChurches","onGetChurches","removeLines","l","setMap","removeJF","remove","line","setVisible","hide","onAddChurch","addChurch","getPosition","removedObject","splice","addTraining","new_training","onAddTraining","c","marker","MarkerWithLabel","position","getCenter","title","cluster_count","zIndex","icon","labelContent","labelAnchor","labelClass","labelInBackground","draggable","new_training_marker","setAnimation","Animation","BOUNCE","getContent","setContent","nextSibling","onSaveChurch","onAddIcon","security","new_marker","SetParent","new_parentLine","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","SymbolPath","FORWARD_OPEN_ARROW","offset","repeat","move_event","e","setPath","latLng","MoveChurch","setDraggable","MoveTraining","edit_training","Id","SaveChurch","saveChurch","DeleteChurch","end_date","endOf","SaveTraining","updateTraining","toDelete","t","editable","$apply","churchIconToUse","development","jf_contrib","jf","jesusFilmSign","toString","removeListener","parents","p","par","parentLine","coordinates","n","div_","onAdd","div","createElement","className","innerHTML","panes","getPanes","overlayMouseTarget","appendChild","x","y","overlayProjection","getProjection","fromLatLngToDivPixel","left","top","onRemove","parentNode","removeChild","prototype","OverlayView","setDefaultView","trim","addTrainingStage","newPhase","phase","current_stage","insert","number_completed","training_id","addTrainingCompletion","onAddTrainingCompletion","editMode","gcm_training_completions","saveTrainingCompletion","updateTrainingCompletion","onSaveTrainingCompletion","myLocation","getCurrentPosition","coords","jQuery","ErrorCtrl","$routeParams","loginUrl","login","MeasurementDetailsCtrl","Measurements","measurement","details","spinner","ns","gmaNamespace","da","total","local","my_measurements","trend","arrayToDataTable","filterSource","key","save","measurements","editForm","$dirty","source","measurement_type_id","measurement_type_ids","related_entity_id","$modelValue","saveMeasurement","approveSelfAssigned","state","blocked","success","MeasurementsCtrl","getMeasurements","lmiForm","$setPristine","hasOther","section","column","type_id","input","$valid","editMeasurementDetails","getMeasurement","measurement_id","ReportsCtrl","walterMeanAvg","values","val","sort","b","shift","pop","Math","round","table","Table","dataTable","historical","chartData","DataTable","tableData","rows","addColumn","dates","addRows","row","addRow","tableDataTable","reverse","legend","alignment","orientation","$resource","getAssignment","method","getAssignments","isArray","factory","getChurch","church_id","getMeasurementType","saveMeasurementType","$q","token","st","session_ticket","$broadcast","request","url","withCredentials","headers","attempts","responseError","status","deferred","defer","refresh","loginResponse","service_ticket","reject","promise","$http","getHighest","array","max","getHighestCount","leaders_trained","put","post","deleteTraining","training_completion","deleteTrainingCompletion","SettingsService","apiUrl","base","version","appUrl","measurementsApi","tab","requiredRoles","$get","environment","mobileapps","namespace","provider"],"mappings":"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","file":"application.min.js","sourcesContent":["(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma', [\n\t\t'ngRoute',\n\t\t'ui.bootstrap',\n\t\t'ngResource',\n\t\t'gma.controllers',\n\t\t'gma.directives',\n\t\t'gma.filters',\n\t\t'gma.services'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers', [\n\t\t'gma.controllers.admin',\n\t\t'gma.controllers.error',\n\t\t'gma.controllers.map',\n\t\t'gma.controllers.measurements',\n\t\t'gma.controllers.reports'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.directives', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.filters', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services', [\n\t\t'gma.services.measurements',\n\t\t'gma.services.settings'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.admin', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.map', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.error', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.measurements', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.reports', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services.measurements', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services.settings', [] );\n})( angular );\n","(function () {\n\t'use strict';\n\tangular.module( 'gma' )\n\t\t.run( function ( $rootScope, $route, $location, Session, Settings ) {\n\t\t\t// Object to hold current values: assignments, assignment, user ...\n\t\t\t$rootScope.current = {\n\t\t\t\tisLoaded: false\n\t\t\t};\n\n\t\t\t// Support application inside an iframe, sync parent hash.\n\t\t\tif ( typeof window.parent !== 'undefined' ) {\n\t\t\t\tvar parentHash = window.parent.location.hash;\n\t\t\t\tif ( parentHash ) {\n\t\t\t\t\t$location.path( parentHash.slice( 1 ) );\n\t\t\t\t}\n\n\t\t\t\t$rootScope.$on( '$locationChangeSuccess', function () {\n\t\t\t\t\twindow.parent.location.hash = '#' + $location.path();\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Reload the route since ng-view directive is inside a template.\n\t\t\t$route.reload();\n\n\t\t\t// Start the session with the API\n\t\t\t//TODO fetch a ticket from refresh to start session\n\t\t\tSession.startSession( Settings.ticket );\n\t\t} )\n\t\t.config( function ( $routeProvider, $httpProvider, $compileProvider, SettingsProvider, $provide ) {\n\t\t\t// Initialize Settings from wrapper provided config\n\t\t\tSettingsProvider.setConfig( window.gma.config );\n\n\t\t\t// Add itms-services scheme to safe aHref protocols\n\t\t\t$compileProvider.aHrefSanitizationWhitelist( /^\\s*(https?|ftp|mailto|tel|file|itms-services):/ );\n\n\t\t\t// Register Session as an http interceptor\n\t\t\t$httpProvider.interceptors.push( 'Session' );\n\n\t\t\t// Setup application routes\n\t\t\tangular.forEach( SettingsProvider.routes(), function ( route, i ) {\n\t\t\t\tif ( i === 0 ) {\n\t\t\t\t\t$routeProvider.otherwise( {redirectTo: route.path} );\n\t\t\t\t}\n\t\t\t\t$routeProvider\n\t\t\t\t\t.when( route.path, {\n\t\t\t\t\t\ttemplateUrl: route.templateUrl,\n\t\t\t\t\t\tcontroller:  route.controller\n\t\t\t\t\t} );\n\t\t\t} );\n\t\t\t$routeProvider.when( '/error/:reason', {\n\t\t\t\ttemplateUrl: 'partials/error/error.html',\n\t\t\t\tcontroller: 'ErrorCtrl'\n\t\t\t} );\n\n\t\t\t// https://github.com/angular/angular.js/issues/1404\n\t\t\t// Source: http://plnkr.co/edit/hSMzWC?p=preview\n\t\t\t$provide.decorator( 'ngModelDirective', function ( $delegate ) {\n\t\t\t\tvar ngModel = $delegate[0], controller = ngModel.controller;\n\t\t\t\tngModel.controller = ['$scope', '$element', '$attrs', '$injector', function ( scope, element, attrs, $injector ) {\n\t\t\t\t\tvar $interpolate = $injector.get( '$interpolate' );\n\t\t\t\t\tattrs.$set( 'name', $interpolate( attrs.name || '' )( scope ) );\n\t\t\t\t\t$injector.invoke( controller, this, {\n\t\t\t\t\t\t'$scope':   scope,\n\t\t\t\t\t\t'$element': element,\n\t\t\t\t\t\t'$attrs':   attrs\n\t\t\t\t\t} );\n\t\t\t\t}];\n\t\t\t\treturn $delegate;\n\t\t\t} );\n\n\t\t\t$provide.decorator( 'formDirective', function ( $delegate ) {\n\t\t\t\tvar form = $delegate[0], controller = form.controller;\n\t\t\t\tform.controller = ['$scope', '$element', '$attrs', '$injector', function ( scope, element, attrs, $injector ) {\n\t\t\t\t\tvar $interpolate = $injector.get( '$interpolate' );\n\t\t\t\t\tattrs.$set( 'name', $interpolate( attrs.name || attrs.ngForm || '' )( scope ) );\n\t\t\t\t\t$injector.invoke( controller, this, {\n\t\t\t\t\t\t'$scope':   scope,\n\t\t\t\t\t\t'$element': element,\n\t\t\t\t\t\t'$attrs':   attrs\n\t\t\t\t\t} );\n\t\t\t\t}];\n\t\t\t\treturn $delegate;\n\t\t\t} );\n\t\t} );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction GMACtrl( $scope, $filter, $location, $modal, Session, Ministries, Assignments, Settings, $log ) {\n\t\t// Attach $location provider to scope, this is used to set active tabs\n\t\t$scope.$location = $location;\n\n\t\t$scope.tabs = Settings.tabs;\n\n\t\t$scope.appEnvironment = Settings.appEnvironment;\n\n\t\t//---------------------------------------\n\t\t// Assignments\n\t\t//---------------------------------------\n\n\t\t$scope.$on( 'sessionStart', function ( event, session ) {\n\t\t\tif ( typeof session.assignments === 'undefined' ) {\n\t\t\t\t//Open Modal if user has no assignment\n\t\t\t\t$scope.joinMinistry( false );\n\t\t\t}\n\t\t} );\n\n\t\t// Update current assignment when assignments is set - this occurs after a session is established\n\t\t$scope.$watch( 'current.assignments', function ( assignments, oldVal ) {\n\t\t\tif ( assignments === oldVal ) return;\n\n\t\t\t$log.debug( 'Assignments Changed' );\n\n\t\t\tif ( typeof assignments === 'object' ) {\n\t\t\t\tif ( angular.isUndefined( $scope.current.assignment ) || !_.contains( _.pluck( assignments, 'id' ), $scope.current.assignment.id ) ) {\n\t\t\t\t\t$scope.current.assignment = $filter( 'orderBy' )( assignments, 'name' )[0];\n\t\t\t\t}\n\t\t\t\t$scope.current.ministries = flattenMinistries( assignments );\n\t\t\t} else {\n\t\t\t\tdelete $scope.current.assignment;\n\t\t\t\t$scope.current.ministries = [];\n\t\t\t}\n\t\t} );\n\n\t\t// Update assignment and mcc when assignment changes\n\t\t$scope.$watch( 'current.assignment', function ( assignment, oldVal ) {\n\t\t\tif ( assignment === oldVal ) return;\n\n\t\t\t$log.debug( 'Assignment Changed: ' + assignment.name );\n\n\t\t\tif ( typeof assignment === 'object' ) {\n\n\t\t\t\tif ( assignment.mccs.length > 0 ) {\n\t\t\t\t\t// Set mcc if none is currently set or new assignment does not include current mcc\n\t\t\t\t\tif ( typeof $scope.current.mcc === 'undefined' || assignment.mccs.indexOf( $scope.current.mcc ) < 0 ) {\n\t\t\t\t\t\t$scope.current.mcc = $filter( 'orderBy' )( assignment.mccs, $scope.mccSort )[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Delete current mcc if assignment has no mccs\n\t\t\t\t\tdelete $scope.current.mcc;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t$scope.current.hasRole = function ( role ) {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' || typeof $scope.current.assignment.team_role === 'undefined' ) return false;\n\t\t\treturn (typeof role === 'string') ? role == $scope.current.assignment.team_role : _.contains( role, $scope.current.assignment.team_role );\n\t\t};\n\n\t\tfunction flattenMinistries( arr ) {\n\t\t\tvar ministries = [];\n\t\t\tangular.forEach( arr, function ( ministry ) {\n\t\t\t\tministries.push( ministry );\n\t\t\t\tif ( ministry.hasOwnProperty( 'sub_ministries' ) && typeof ministry.sub_ministries === 'object' ) {\n\t\t\t\t\tministries = ministries.concat( flattenMinistries( ministry.sub_ministries ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t//sort by team role\n\t\t\tministries = _.sortBy( ministries, function ( m ) {\n\t\t\t\treturn (m.team_role === 'leader' ? 0 : 1);\n\t\t\t} );\n\t\t\t//remove duplicates\n\t\t\treturn _.uniq( ministries, false, function ( m ) {\n\t\t\t\treturn m.ministry_id;\n\t\t\t} );\n\t\t}\n\n\t\t//---------------------------------------\n\t\t// Mission Critical Components (MCC)\n\t\t//---------------------------------------\n\n\t\t// MCC labels, this should be done in localization in the future.\n\t\t$scope.mccLabels = {\n\t\t\tds:  'Digital Strategies',\n\t\t\tgcm: 'Global Church Movements',\n\t\t\tllm: 'Leader Led',\n\t\t\tslm: 'Student Led'\n\t\t};\n\n\t\t$scope.mccSort = function ( value ) {\n\t\t\treturn $scope.mccLabels[value];\n\t\t};\n\n\t\t//---------------------------------------\n\t\t// Periods\n\t\t//---------------------------------------\n\t\tvar periods = [], now = moment().date( 1 );\n\t\tfor ( var i = 0; i < 12; i++ ) {\n\t\t\tperiods.push( now.clone() );\n\t\t\tnow.subtract( 1, 'M' );\n\t\t}\n\t\t$scope.periods = periods;\n\t\t$scope.current.period = periods[0];\n\n\t\t$scope.prevPeriod = function () {\n\t\t\tvar index = $scope.periods.indexOf( $scope.current.period );\n\t\t\tindex = ( ( index + 1 ) >= $scope.periods.length ) ? 0 : index + 1;\n\t\t\t$scope.current.period = $scope.periods[index];\n\t\t};\n\n\t\t$scope.nextPeriod = function () {\n\t\t\tvar index = $scope.periods.indexOf( $scope.current.period );\n\t\t\tindex = ( ( index - 1 ) < 0 ) ? $scope.periods.length - 1 : index - 1;\n\t\t\t$scope.current.period = $scope.periods[index];\n\t\t};\n\n\t\t//---------------------------------------\n\t\t// Session\n\t\t//---------------------------------------\n\n\t\t$scope.logout = function () {\n\t\t\tSession.logout().then( function () {\n\t\t\t\twindow.location = Settings.api.logout;\n\t\t\t} );\n\t\t};\n\n\t\t$scope.invalidateSession = function () {\n\t\t\tSession.logout();\n\t\t};\n\n\t\t$scope.joinMinistry = function ( allowClose ) {\n\t\t\tallowClose = typeof allowClose !== 'undefined' ? allowClose : true;\n\t\t\tvar instance = $modal.open( {\n\t\t\t\ttemplateUrl: 'partials/join-ministry.html',\n\t\t\t\tcontroller:  'JoinMinistryCtrl',\n\t\t\t\tkeyboard:    allowClose,\n\t\t\t\tbackdrop:    allowClose ? true : 'static',\n\t\t\t\tresolve:     {\n\t\t\t\t\t'ministries': function () {\n\t\t\t\t\t\treturn Ministries.getMinistries().$promise;\n\t\t\t\t\t},\n\t\t\t\t\t'allowClose': function () {\n\t\t\t\t\t\treturn allowClose;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tinstance.result.then( function ( ministry ) {\n\t\t\t\tAssignments.addTeamMember( {\n\t\t\t\t\tusername:    $scope.current.user.cas_username,\n\t\t\t\t\tministry_id: ministry.ministry_id,\n\t\t\t\t\tteam_role:   'self_assigned'\n\t\t\t\t}, function ( assignment ) {\n\t\t\t\t\tif ( typeof $scope.current.assignments === 'undefined' ) {\n\t\t\t\t\t\t// If assignments is empty, setting the array will also set the current assignment\n\t\t\t\t\t\t$scope.current.assignments = [assignment];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Add new assignment\n\t\t\t\t\t\t$scope.current.assignments.push( assignment );\n\n\t\t\t\t\t\t// Set new assignment as current\n\t\t\t\t\t\t$scope.current.assignment = assignment;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t};\n\n\t\t$scope.onError = function ( response, code ) {\n\t\t\t$location.path( '/error' );\n\t\t};\n\n\t\t$scope.mobileApps = Settings.mobileApps;\n\t}\n\n\tangular.module( 'gma.controllers' ).controller( 'GMACtrl', GMACtrl );\n})();\n",null,"(function () {\n\t'use strict';\n\n\tfunction JoinMinistryCtrl( $scope, $modalInstance, ministries, allowClose ) {\n\t\t$scope.ministries = ministries;\n\t\t$scope.allowClose = allowClose;\n\n\t\t$scope.join = function () {\n\t\t\t$modalInstance.close( $scope.ministry );\n\t\t};\n\n\t\t$scope.cancel = function () {\n\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers' ).controller( 'JoinMinistryCtrl', JoinMinistryCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma.directives' )\n\t\t.directive( 'gmaTrend', [function () {\n\t\t\treturn {\n\t\t\t\trestrict: 'A',\n\t\t\t\trequire:  'ngModel',\n\t\t\t\tlink:     function ( $scope, $element, $attrs, ngModel ) {\n\t\t\t\t\tif ( !ngModel ) return;\n\t\t\t\t\tvar chart = new google.visualization.LineChart( $element.get( 0 ) );\n\n\t\t\t\t\tngModel.$render = function () {\n\t\t\t\t\t\tchart.draw( ngModel.$viewValue, {width: 550, height: 200, chartArea: {width: '65%'}} );\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.$on( '$destroy', function () {\n\t\t\t\t\t\tchart = null;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}] )\n})();\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma.directives' )\n\t\t.directive( 'selectOnFocus', [function () {\n\t\t\treturn {\n\t\t\t\trestrict: 'A',\n\t\t\t\tlink:     function ( $scope, $element ) {\n\t\t\t\t\tvar focusedElement;\n\t\t\t\t\t$element.on( 'focus', function () {\n\t\t\t\t\t\tif ( focusedElement != this ) {\n\t\t\t\t\t\t\tthis.select();\n\t\t\t\t\t\t\tfocusedElement = this;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\t$element.on( 'blur', function () {\n\t\t\t\t\t\tfocusedElement = null;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t};\n\t\t}] )\n})();\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma.filters' )\n\t\t.filter( 'roleFilter', [function () {\n\t\t\treturn function ( items, role ) {\n\t\t\t\tvar filtered = [];\n\t\t\t\tangular.forEach( items, function ( item ) {\n\t\t\t\t\tif ( typeof role === 'string' && role == item.team_role ) {\n\t\t\t\t\t\tfiltered.push( item );\n\t\t\t\t\t} else if ( typeof role === 'object' && _.contains( role, item.team_role ) ) {\n\t\t\t\t\t\tfiltered.push( item );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn filtered;\n\t\t\t};\n\t\t}] );\n})();\n","(function () {\n\t'use strict';\n\t\n\tfunction AdminCtrl( $scope, $modal, $filter, Assignments, Ministries, MeasurementTypes ) {\n\t\t$scope.current.isLoaded = false;\n\n\t\t$scope.roles = [\n\t\t\t{value: \"leader\", text: 'Leader'},\n\t\t\t{value: \"inherited_leader\", text: \"Leader (inherited)\"},\n\t\t\t{value: \"member\", text: 'Member'},\n\t\t\t{value: \"blocked\", text: 'Blocked'},\n\t\t\t{value: \"self_assigned\", text: 'Self Assigned'}\n\t\t];\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function ( ministry_id ) {\n\t\t\tif ( typeof ministry_id === 'undefined' ) return;\n\t\t\t$scope.ministry = Ministries.getMinistry( {ministry_id: ministry_id}, function () {\n\t\t\t\t$scope.current.isLoaded = true;\n\n\t\t\t\t$scope.measurementTypes = [];\n\t\t\t\tMeasurementTypes.getMeasurementTypes().$promise.then( function ( data ) {\n\t\t\t\t\tangular.forEach( data, function ( type ) {\n\t\t\t\t\t\tif ( type.is_custom && _.contains( $scope.ministry.lmi_show, type.perm_link_stub ) ) {\n\t\t\t\t\t\t\ttype.visible = true;\n\t\t\t\t\t\t} else if ( !type.is_custom && !_.contains( $scope.ministry.lmi_hide, type.perm_link_stub ) ) {\n\t\t\t\t\t\t\ttype.visible = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype.visible = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.measurementTypes.push( type );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\n\t\t$scope.saveRole = function ( assignment ) {\n\t\t\tAssignments.saveAssignment( {\n\t\t\t\tassignment_id: assignment.assignment_id\n\t\t\t}, {team_role: assignment.team_role} );\n\t\t};\n\n\t\t$scope.ableToChangeParentMinistry = function ( parentToFind ) {\n\t\t\tvar availableMinIds = _.pluck( $filter( 'roleFilter' )( $scope.current.ministries, ['leader', 'inherited_leader'] ), 'ministry_id' )\n\t\t\treturn _.contains( availableMinIds, parentToFind );\n\t\t};\n\n\t\t$scope.addTeamMember = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-team-member.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance, roles ) {\n\t\t\t\t\t$scope.roles = roles;\n\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMember );\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tresolve:     {\n\t\t\t\t\t'roles': function () {\n\t\t\t\t\t\treturn $scope.roles;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMember ) {\n\t\t\t\t\tnewMember.ministry_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\tAssignments.addTeamMember( newMember, function () {\n\t\t\t\t\t\t$scope.ministry = Ministries.getMinistry( {ministry_id: $scope.current.assignment.ministry_id} );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.addSubMinistry = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-sub-ministry.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance ) {\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMinistry );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMinistry ) {\n\t\t\t\t\tnewMinistry.parent_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\tMinistries.createMinistry( newMinistry, function () {\n\t\t\t\t\t\tif ( angular.isDefined( $scope.current.assignment.sub_ministries ) ) {\n\t\t\t\t\t\t\t$scope.current.assignment.sub_ministries.push( newMinistry );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.current.assignment.sub_ministries = [newMinistry];\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.addMeasurement = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-measurement-type.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance ) {\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMeasurement );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMeasurement ) {\n\t\t\t\t\tnewMeasurement.perm_link_stub = 'custom_' + newMeasurement.perm_link_stub;\n\t\t\t\t\tMeasurementTypes.addMeasurementType( newMeasurement, function () {\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.saveDetails = function () {\n\t\t\tvar ministry = {\n\t\t\t\tministry_id: $scope.ministry.ministry_id,\n\t\t\t\tmin_code:    $scope.ministry.min_code,\n\t\t\t\tname:        $scope.ministry.name,\n\t\t\t\thas_ds:      $scope.ministry.has_ds,\n\t\t\t\thas_gcm:     $scope.ministry.has_gcm,\n\t\t\t\thas_llm:     $scope.ministry.has_llm,\n\t\t\t\thas_slm:     $scope.ministry.has_slm,\n\t\t\t\tprivate:     $scope.ministry.private,\n\t\t\t\tlmi_hide:    _.pluck( _.where( $scope.measurementTypes, {\n\t\t\t\t\tis_custom: false,\n\t\t\t\t\tvisible:   false\n\t\t\t\t} ), 'perm_link_stub' ),\n\t\t\t\tlmi_show:    _.pluck( _.where( $scope.measurementTypes, {\n\t\t\t\t\tis_custom: true,\n\t\t\t\t\tvisible:   true\n\t\t\t\t} ), 'perm_link_stub' )\n\t\t\t};\n\t\t\tif ( $scope.ministry.hasOwnProperty( 'parent_id' ) && typeof $scope.ministry.parent_id === \"string\" ) {\n\t\t\t\tministry.parent_id = $scope.ministry.parent_id;\n\t\t\t}\n\t\t\t$scope.saveDetailsResource = Ministries.updateMinistry( ministry,\n\t\t\t\tfunction () {\n\t\t\t\t\t$scope.saveDetailsAlert = {\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmsg:  'Your changes have been saved.'\n\t\t\t\t\t};\n\t\t\t\t}, function ( response ) {\n\t\t\t\t\t$scope.saveDetailsAlert = {\n\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\tmsg:  response.Message || 'An error occurred while saving.'\n\t\t\t\t\t};\n\t\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.admin' ).controller( 'AdminCtrl', AdminCtrl );\n}());\n","(function ( $ ) {\n\t'use strict';\n\n\tfunction MapCtrl( $scope, $document, $compile, Trainings, Churches, Ministries, Settings ) {\n\t\t$scope.current.isLoaded = false;\n\t\t$scope.versionUrl = Settings.versionUrl;\n\t\t$scope.show_target_point = true;\n\t\t$scope.show_group = true;\n\t\t$scope.show_church = true;\n\t\t$scope.show_mult_church = true;\n\t\t$scope.show_lines = true;\n\t\t$scope.show_lines = true;\n\t\t$scope.show_jf = true;\n\t\t$scope.map_filter = 'min_only';\n\t\t$scope.icon_add_mode = false;\n\t\t$scope.show_all = \"year\";\n\t\t$scope.show_tree = false;\n\t\t$scope.new_church = {};\n\t\t$scope.edit_church = {};\n\t\t$scope.SetParentMode = false;\n\t\t$scope.church_lines = [];\n\t\t$scope.churches = [];\n\t\t$scope.trainings = [];\n\t\t$scope.training_types = [\n\t\t\t{value: \"MC2\", text: 'MC2'},\n\t\t\t{value: \"T4T\", text: 'T4T'},\n\t\t\t{value: \"CPMI\", text: 'CPMI'},\n\t\t\t{value: \"\", text: 'Other'}\n\t\t];\n\t\t$scope.show = {\n\t\t\ttraining: true\n\t\t};\n\t\t$scope.mapOptions = {\n\t\t\tzoom:               3,\n\t\t\tcenter:             new google.maps.LatLng( 0, 0 ),\n\t\t\tpanControl:         true,\n\t\t\tzoomControl:        true,\n\t\t\tmapTypeControl:     true,\n\t\t\tstreetViewControl:  false,\n\t\t\toverviewMapControl: false\n\t\t};\n\t\t$scope.supportsGeoLocation = typeof navigator.geolocation !== 'undefined';\n\t\tsetTimeout( initialize, 0 );\n\n\t\tfunction initialize() {\n\t\t\t$scope.map = new google.maps.Map( document.getElementById( 'map_canvas' ), $scope.mapOptions );\n\t\t\t$scope.map.setOptions( {draggableCursor: ''} );\n\n\t\t\tgoogle.maps.event.addListener( $scope.map, \"idle\", function () {\n\t\t\t\t$scope.current.isLoaded = true;\n\t\t\t\tvar bounds = $scope.map.getBounds(),\n\t\t\t\t\tne = bounds.getNorthEast(),\n\t\t\t\t\tsw = bounds.getSouthWest();\n\n\t\t\t\tif ( ne.lat() == sw.lat() && ne.lng() == sw.lng() ) {\n\t\t\t\t\t// Trigger a resize if bounds have 0 area\n\t\t\t\t\tgoogle.maps.event.trigger( $scope.map, 'resize' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$scope.loadChurches();\n\t\t\t\t}\n\t\t\t} );\n\t\t\t$scope.map.markers = [];\n\t\t\t$scope.church = {name: \"\"};\n\n\t\t\t$scope.churchWindow = new google.maps.InfoWindow();\n\t\t\t$scope.churchWindowContent = $compile( '<div id=\"church_window_content\" ng-include=\"\\'partials/map/edit-church.html\\'\"></div>' )( $scope )\n\t\t\t$scope.churchWindow.setOptions( {maxWidth: 300} );\n\t\t\t$scope.trainingWindow = new google.maps.InfoWindow();\n\t\t\t$scope.trainingWindowContent = $compile( '<div id=\"training_window_content\" ng-include=\"\\'partials/map/edit-training.html\\'\"></div>' )( $scope )\n\t\t\t$scope.trainingWindow.setOptions( {maxWidth: 400} );\n\n\t\t\t$scope.newChurchWindow = new google.maps.InfoWindow();\n\t\t\tgoogle.maps.event.addListener( $scope.newChurchWindow, 'closeclick', function () {\n\t\t\t\t$scope.cancelAddChurch();\n\t\t\t} );\n\t\t\t$scope.newChurchWindowContent = $compile( '<div id=\"new_church_window_content\" ng-include=\"\\'partials/map/new-church.html\\'\"></div>' )( $scope );\n\n\n\t\t\t$scope.newTrainingWindow = new google.maps.InfoWindow();\n\t\t\tgoogle.maps.event.addListener( $scope.newTrainingWindow, 'closeclick', function () {\n\t\t\t\t$scope.cancelAddChurch();\n\t\t\t} );\n\t\t\t$scope.newTrainingContent = $compile( '<div id=\"new_training_window_content\" ng-include=\"\\'partials/map/new-training.html\\'\"></div>' )( $scope );\n\n\t\t\t$scope.map.church_lines = [];\n\t\t\t$scope.map.icons = {};\n\t\t\t$scope.map.icons.church = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/church.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 58 )\n\t\t\t);\n\t\t\t$scope.map.icons.cluster = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/cluster.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 31 )\n\t\t\t);\n\t\t\t$scope.map.icons.multiplying = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/multiplying.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 53 )\n\t\t\t);\n\t\t\t$scope.map.icons.group = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/group.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 55 )\n\t\t\t);\n\t\t\t$scope.map.icons.targetpoint = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/target.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 32, 56 )\n\t\t\t);\n\t\t\t$scope.map.icons.training = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/training.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 43 )\n\t\t\t);\n\n\t\t\t$scope.map.side = document.getElementById( 'side' );\n\t\t\t$scope.map.side.index = -1;\n\t\t\t$scope.map.side.style.display = 'block';\n\t\t\t$scope.map.search = document.getElementById( 'map_controls' );\n\t\t\t$scope.map.search.index = 3;\n\t\t\t$scope.map.search.style.display = 'block';\n\n\t\t\t$scope.map.controls[google.maps.ControlPosition.TOP_RIGHT].push( $scope.map.side );\n\t\t\t$scope.map.controls[google.maps.ControlPosition.TOP_LEFT].push( $scope.map.search );\n\n\t\t\t$scope.autocomplete = new google.maps.places.Autocomplete( document.getElementById( 'searchBox' ) );\n\t\t\t$scope.autocomplete.bindTo( 'bounds', $scope.map );\n\n\t\t\tgoogle.maps.event.addListener( $scope.autocomplete, 'place_changed', function () {\n\t\t\t\tvar place = $scope.autocomplete.getPlace();\n\t\t\t\tif ( !place.geometry ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( place.geometry.viewport ) {\n\t\t\t\t\t$scope.map.fitBounds( place.geometry.viewport );\n\t\t\t\t} else {\n\t\t\t\t\t$scope.map.setCenter( place.geometry.location );\n\t\t\t\t\t$scope.map.setZoom( 15 );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( $scope.current.assignment )$scope.load_training_markers();\n\n\t\t\t$scope.$watch( 'current.assignment', function ( a, oldVal ) {\n\t\t\t\tif ( typeof a !== 'undefined' ) {\n\n\t\t\t\t\tif ( a && a.hasOwnProperty( 'location' ) ) {\n\t\t\t\t\t\t$scope.map.setCenter( new google.maps.LatLng( a.location.latitude, a.location.longitude ) );\n\t\t\t\t\t}\n\t\t\t\t\tif ( a && a.hasOwnProperty( 'location_zoom' ) ) {\n\t\t\t\t\t\t$scope.map.setZoom( parseInt( a.location_zoom ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, true );\n\t\t}\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function ( ministry_id ) {\n\t\t\tif ( typeof ministry_id === 'undefined' ) {\n\t\t\t\t$scope.trainings = [];\n\t\t\t} else {\n\t\t\t\t$scope.loadTrainings();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.$watch( 'map_filter', function ( filter ) {\n\t\t\t$scope.loadTrainings();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function ( mcc ) {\n\t\t\tif ( typeof mcc === 'undefined' ) {\n\t\t\t\t$scope.trainings = [];\n\t\t\t} else {\n\t\t\t\t$scope.loadChurches();\n\t\t\t\t$scope.loadTrainings();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.loadTrainings = _.debounce( function () {\n\t\t\t// Member, Leader and Inherited can view trainings\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && $scope.current.hasRole( ['leader', 'inherited_leader'] ) ) {\n\t\t\t\tTrainings.getTrainings( $scope.current.sessionToken, $scope.current.assignment.ministry_id, $scope.current.mcc, $scope.show_all == \"all\", $scope.show_tree ).then( function ( trainings ) {\n\t\t\t\t\t$scope.trainings = trainings;\n\t\t\t\t}, $scope.onError );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$scope.trainings = [];\n\t\t\t}\n\t\t}, 500 );\n\n\t\t$scope.loadChurches = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' ) return;\n\n\t\t\tconsole.log( 'loading churches' );\n\t\t\tvar bounds = $scope.map.getBounds(),\n\t\t\t\tne = bounds.getNorthEast(),\n\t\t\t\tsw = bounds.getSouthWest(),\n\t\t\t\tparams = {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tlat_min:     sw.lat(),\n\t\t\t\t\tlat_max:     ne.lat(),\n\t\t\t\t\tlong_min:    sw.lng(),\n\t\t\t\t\tlong_max:    ne.lng(),\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t};\n\t\t\tif ( !$scope.show_target_point ) params['hide_target_point'] = 'true';\n\t\t\tif ( !$scope.show_group ) params['hide_group'] = 'true';\n\t\t\tif ( !$scope.show_church ) params['hide_church'] = 'true';\n\t\t\tif ( !$scope.show_mult_church ) params['hide_mult_church'] = 'true';\n\t\t\tif ( $scope.map_filter === 'everything' ) {\n\t\t\t\tparams['show_all'] = 'true';\n\t\t\t} else if ( $scope.map_filter === 'tree' ) params['show_tree'] = 'true';\n\n\t\t\t// Disable clustering at Zoom 14 and higher\n\t\t\tif ( $scope.map.getZoom() >= 14 ) params['should_cluster'] = 'false';\n\n\t\t\tChurches.getChurches( params ).$promise.then( $scope.onGetChurches, $scope.onError );\n\t\t}, 500 );\n\n\t\t$scope.removeLines = function () {\n\t\t\tangular.forEach( $scope.map.church_lines, function ( l ) {\n\t\t\t\tl.setMap( null );\n\t\t\t} );\n\t\t};\n\n\t\t$scope.removeJF = function () {\n\t\t\t$( '.jf_label' ).remove();\n\t\t};\n\n\t\t$scope.$watch( 'show_lines', function () {\n\t\t\tif ( typeof $scope.map !== 'undefined' ) {\n\t\t\t\tangular.forEach( $scope.map.church_lines, function ( line ) {\n\t\t\t\t\tline.setVisible( $scope.show_lines );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t$scope.$watch( 'show_jf', function () {\n\t\t\tif ( $scope.show_jf ) {\n\t\t\t\t$( '.jf_label' ).show();\n\t\t\t} else {\n\t\t\t\t$( '.jf_label' ).hide();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.onAddChurch = function () {\n\t\t\t$scope.loadChurches();\n\t\t};\n\n\t\t$scope.addChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\n\t\t\t\tif ( m.id == -1 ) {\n\t\t\t\t\t$scope.new_church.ministry_id = $scope.current.assignment.ministry_id;\n\n\t\t\t\t\t$scope.new_church.latitude = m.getPosition().lat();\n\t\t\t\t\t$scope.new_church.longitude = m.getPosition().lng();\n\t\t\t\t\tconsole.log( $scope.new_church );\n\t\t\t\t\tChurches.addChurch( $scope.new_church ).$promise.then( $scope.onAddChurch, $scope.onError );\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.addTraining = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\n\t\t\t\tif ( m.id == -2 ) {\n\t\t\t\t\t$scope.new_training.ministry_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\t$scope.new_training.latitude = m.getPosition().lat();\n\t\t\t\t\t$scope.new_training.longitude = m.getPosition().lng();\n\t\t\t\t\t$scope.new_training.mcc = $scope.current.mcc;\n\t\t\t\t\tTrainings.addTraining( $scope.current.sessionToken, $scope.new_training ).then(\n\t\t\t\t\t\t$scope.loadTrainings,\n\t\t\t\t\t\t$scope.onError\n\t\t\t\t\t);\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.cancelAddChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id < 0 ) {\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t\t$scope.new_church = {};\n\t\t\t$scope.new_training = {};\n\t\t};\n\n\t\t$scope.onAddTraining = function () {\n\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\treturn c.id < 0\n\t\t\t\t} ).length == 0 ) {\n\t\t\t\t$scope.new_training = {};\n\n\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\tposition:          $scope.map.getCenter(),\n\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\ttitle:             \"new_training\",\n\t\t\t\t\tid:                -2,\n\t\t\t\t\tcluster_count:     1,\n\t\t\t\t\tzIndex:            9999,\n\t\t\t\t\ticon:              $scope.map.icons.training,\n\t\t\t\t\tlabelContent:      'MOVE ME!',\n\t\t\t\t\tlabelAnchor:       new google.maps.Point( 50, -5 ),\n\t\t\t\t\tlabelClass:        \"labelMoveMarker\", // the CSS class for the label\n\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\tdraggable:         true\n\t\t\t\t} );\n\t\t\t\t$scope.map.new_training_marker = marker;\n\t\t\t\tmarker.setAnimation( google.maps.Animation.BOUNCE );\n\n\t\t\t\tif ( !$scope.newTrainingWindow.getContent() ) {\n\t\t\t\t\t$scope.newTrainingWindow.setContent( $scope.newTrainingContent[0].nextSibling );\n\t\t\t\t}\n\t\t\t\t$scope.newTrainingWindow.open( $scope.map, marker );\n\n\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t}\n\t\t};\n\n\t\t$scope.onSaveChurch = function ( response ) {\n\t\t\t$scope.loadChurches();\n\t\t};\n\n\t\t$scope.onAddIcon = function () {\n\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\treturn c.id < 0\n\t\t\t\t} ).length == 0 ) {\n\t\t\t\t$scope.new_church = {security: 2};\n\n\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\tposition:          $scope.map.getCenter(),\n\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\ttitle:             \"new church\",\n\t\t\t\t\tid:                -1,\n\t\t\t\t\tcluster_count:     1,\n\t\t\t\t\tzIndex:            9999,\n\t\t\t\t\ticon:              $scope.map.icons.targetpoint,\n\t\t\t\t\tlabelContent:      'Move me!',\n\t\t\t\t\tlabelAnchor:       new google.maps.Point( 50, -20 ),\n\t\t\t\t\tlabelClass:        \"labelMoveMarker\", // the CSS class for the label\n\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\tdraggable:         true\n\t\t\t\t} );\n\t\t\t\t$scope.map.new_marker = marker;\n\t\t\t\tmarker.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t//$scope.$apply();\n\t\t\t\tif ( !$scope.newChurchWindow.getContent() ) {\n\t\t\t\t\t$scope.newChurchWindow.setContent( $scope.newChurchWindowContent[0].nextSibling );\n\t\t\t\t}\n\t\t\t\t$scope.newChurchWindow.open( $scope.map, marker );\n\n\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t}\n\t\t};\n\n\t\t$scope.SetParent = function () {\n\t\t\t$scope.SetParentMode = true;\n\t\t\t$scope.churchWindow.close();\n\t\t\t$scope.new_parentLine = new google.maps.Polyline( {\n\t\t\t\tpath:          [new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude ), new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )],\n\t\t\t\tgeodesic:      true,\n\t\t\t\tstrokeColor:   '#777',\n\t\t\t\tstrokeOpacity: 1.0,\n\t\t\t\tstrokeWeight:  2,\n\t\t\t\ticons:         [{\n\t\t\t\t\t\t\t\t\ticon:   {\n\t\t\t\t\t\t\t\t\t\tpath:         google.maps.SymbolPath.FORWARD_OPEN_ARROW,\n\t\t\t\t\t\t\t\t\t\tstrokeWeight: 1.5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\toffset: '12px',\n\t\t\t\t\t\t\t\t\trepeat: '25px'\n\t\t\t\t\t\t\t\t}]\n\t\t\t} );\n\n\t\t\t$scope.move_event = google.maps.event.addListener( $scope.map, 'mousemove', function ( e ) {\n\t\t\t\t$scope.new_parentLine.setPath( [e.latLng, new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )] );\n\t\t\t} );\n\n\t\t\t$scope.new_parentLine.setMap( $scope.map );\n\t\t\t//   $scope.map.church_lines.push(parentLine);\n\t\t};\n\n\t\t$scope.MoveChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id === $scope.edit_church.id ) {\n\t\t\t\t\tm.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t\tm.setDraggable( true );\n\t\t\t\t\t$scope.churchWindow.close();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.MoveTraining = function () {\n\t\t\tvar id = $scope.edit_training.hasOwnProperty( 'Id' ) ? $scope.edit_training.Id : $scope.edit_training.id;\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id === 't' + id ) {\n\t\t\t\t\tm.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t\tm.setDraggable( true );\n\t\t\t\t\t$scope.trainingWindow.close();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.SaveChurch = function () {\n\t\t\tChurches.saveChurch( $scope.edit_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.DeleteChurch = function () {\n\t\t\t// Set end_date to the last day of the previous month\n\t\t\t$scope.edit_church.end_date = moment().subtract( 1, 'months' ).endOf( 'month' ).format( 'YYYY-MM-DD' );\n\t\t\tChurches.saveChurch( $scope.edit_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.SaveTraining = function () {\n\t\t\tTrainings.updateTraining( $scope.current.sessionToken, $scope.edit_training ).then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.$watch( 'trainings', function () {\n\t\t\tif ( $scope.map ) {\n\t\t\t\t$scope.load_training_markers();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.load_training_markers = function () {\n\t\t\tif ( typeof $scope.map === 'undefined' ) return;\n\t\t\tvar toDelete = [];\n\t\t\tangular.forEach( $scope.map.markers, function ( training ) {\n\t\t\t\tif ( training.id[0] == 't' && $scope.trainings.filter( function ( t ) {\n\t\t\t\t\t\treturn t.id == training.id\n\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\ttoDelete.push( training );\n\t\t\t\t}\n\t\t\t\telse if ( training.id[0] == 't' && !$scope.show.training ) toDelete.push( training );\n\t\t\t} );\n\n\t\t\tangular.forEach( toDelete, function ( training ) {\n\t\t\t\ttraining.setMap( null );\n\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( training ), 1 );\n\t\t\t\tremovedObject = null;\n\t\t\t} );\n\n\t\t\tif ( $scope.show.training ) {\n\t\t\t\tangular.forEach( $scope.trainings, function ( training ) {\n\t\t\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\t\t\treturn c.id === 't' + training.id\n\t\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\t\tif ( training.longitude ) {\n\t\t\t\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\t\t\t\tposition:          new google.maps.LatLng( training.latitude, training.longitude ),\n\t\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\t\tid:                't' + ( training.hasOwnProperty( 'Id' ) ? training.Id : training.id ),\n\t\t\t\t\t\t\t\ttitle:             training.type,\n\t\t\t\t\t\t\t\ticon:              $scope.map.icons.training,\n\t\t\t\t\t\t\t\tlabelContent:      '', //training.type + '<span class=\"map-trained-count\">' + training.leaders_trained + '</span>',\n\t\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 0 ),\n\t\t\t\t\t\t\t\tlabelClass:        \"labelMarker\", // the CSS class for the label\n\t\t\t\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\t\t\t\tdraggable:         false\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tif ( !$scope.trainingWindow.getContent() ) {\n\t\t\t\t\t\t\t\t$scope.trainingWindow.setContent( $scope.trainingWindowContent[0].nextSibling );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgoogle.maps.event.addListener( marker, 'click', (function ( training, marker ) {\n\t\t\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\t\t\t//$scope.church = marker;\n\t\t\t\t\t\t\t\t\t$scope.edit_training = training;\n\t\t\t\t\t\t\t\t\t$scope.edit_training.editable = (($scope.current.assignment.team_role === 'leader' || $scope.current.assignment.team_role === 'inherited_leader') && training.ministry_id === $scope.current.assignment.ministry_id);\n\n\t\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.close();\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.setOptions( {maxWidth: 400} );\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.open( $scope.map, marker );\n\t\t\t\t\t\t\t\t\t// $scope.churchWindow.open($scope.map, marker);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}( training, marker, $scope )) );\n\n\t\t\t\t\t\t\tgoogle.maps.event.addListener( marker, 'dragend', (function () {\n\t\t\t\t\t\t\t\tconsole.log( marker );\n\t\t\t\t\t\t\t\ttraining.latitude = marker.getPosition().lat();\n\t\t\t\t\t\t\t\ttraining.longitude = marker.getPosition().lng();\n\t\t\t\t\t\t\t\tTrainings.updateTraining( $scope.current.sessionToken, training ).then( $scope.onSaveChurch, $scope.onError );\n\t\t\t\t\t\t\t\tmarker.setAnimation( null );\n\t\t\t\t\t\t\t\tmarker.setDraggable( false );\n\t\t\t\t\t\t\t}) );\n\n\t\t\t\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch( 'show.training', $scope.load_training_markers, true );\n\n\t\t$scope.onGetChurches = function ( response ) {\n\t\t\tif ( $scope.current.mcc === 'gcm' ) {\n\t\t\t\t$scope.churches = response;\n\t\t\t} else {\n\t\t\t\tresponse = [];\n\t\t\t\t$scope.churches = [];\n\t\t\t}\n\n\t\t\tconsole.log( 'got churches' );\n\t\t\t$scope.removeLines();\n\t\t\t$scope.removeJF();\n\t\t\t// $scope.map.markers = [];\n\n\t\t\t// do more intelligent replace\n\t\t\t//remove elements that are not in the new one.\n\t\t\tvar toDelete = [];\n\n\t\t\tangular.forEach( $scope.map.markers, function ( church ) {\n\t\t\t\tif ( church.id > 0 ) {\n\t\t\t\t\tif ( response.filter( function ( c ) {\n\t\t\t\t\t\t\treturn c.id == church.id && c.cluster_count == 1\n\t\t\t\t\t\t} ).length == 0 || church.cluster_count > 1 ) {\n\t\t\t\t\t\ttoDelete.push( church );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tangular.forEach( toDelete, function ( church ) {\n\t\t\t\t//console.log(toDelete)\n\t\t\t\t//var church = $scope.map.markers.filter(function (c) { return c.id == toDelete[i] });\n\t\t\t\t//console.log(church.length);\n\t\t\t\tchurch.setMap( null );\n\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( church ), 1 );\n\n\t\t\t\tremovedObject = null;\n\t\t\t} );\n\n\n\t\t\tangular.forEach( $scope.churches, function ( church ) {\n\t\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\t\treturn c.id == church.id\n\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\tvar marker = {};\n\n\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\tvar churchIconToUse = {}\n\t\t\t\t\t\tif ( church.development == 5 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.multiplying;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 4 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 3 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 2 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.group;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 1 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.targetpoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmarker = new MarkerWithLabel( {\n\t\t\t\t\t\t\tposition:          new google.maps.LatLng( church.latitude, church.longitude ),\n\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\ttitle:             church.name,\n\t\t\t\t\t\t\tid:                church.id,\n\t\t\t\t\t\t\tcluster_count:     church.cluster_count,\n\t\t\t\t\t\t\ticon:              churchIconToUse,\n\t\t\t\t\t\t\tlabelContent:      church.name,\n\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 0 ),\n\t\t\t\t\t\t\tlabelClass:        \"labelMarker\", // the CSS class for the label\n\t\t\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\t\t\tdraggable:         false\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( church.jf_contrib > 0 ) church.jf = new $scope.jesusFilmSign( new google.maps.LatLng( church.latitude, church.longitude ), church.jf_contrib, church.development );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmarker = new MarkerWithLabel( {\n\t\t\t\t\t\t\tposition:          new google.maps.LatLng( church.latitude, church.longitude ),\n\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\tid:                church.id,\n\t\t\t\t\t\t\tcluster_count:     church.cluster_count,\n\t\t\t\t\t\t\ticon:              $scope.map.icons.cluster,\n\t\t\t\t\t\t\tlabelContent:      church.cluster_count.toString(),\n\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 15 ),\n\t\t\t\t\t\t\tlabelClass:        \"clusterMarker\", // the CSS class for the label\n\t\t\t\t\t\t\tlabelInBackground: false\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( church.jf_contrib > 0 ) church.jf = new $scope.jesusFilmSign( new google.maps.LatLng( church.latitude, church.longitude ), church.jf_contrib, 'cluster' );\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( !$scope.churchWindow.getContent() ) {\n\t\t\t\t\t\t$scope.churchWindow.setContent( $scope.churchWindowContent[0].nextSibling );\n\t\t\t\t\t}\n\n\t\t\t\t\tgoogle.maps.event.addListener( marker, 'click', (function ( church, marker ) {\n\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\tif ( $scope.SetParentMode ) {\n\t\t\t\t\t\t\t\tif ( church.cluster_count == 1 && church.id !== $scope.edit_church.id ) {\n\t\t\t\t\t\t\t\t\tgoogle.maps.event.removeListener( $scope.move_event );\n\t\t\t\t\t\t\t\t\t$scope.SetParentMode = false;\n\t\t\t\t\t\t\t\t\t$scope.new_parentLine.setPath( [new google.maps.LatLng( church.latitude, church.longitude ), new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )] );\n\t\t\t\t\t\t\t\t\t//update church's parent\n\t\t\t\t\t\t\t\t\tvar new_church = {};\n\t\t\t\t\t\t\t\t\tnew_church.id = $scope.edit_church.id;\n\t\t\t\t\t\t\t\t\tnew_church.parent_id = church.id;\n\t\t\t\t\t\t\t\t\t$scope.edit_church.parent_id = church.id;\n\t\t\t\t\t\t\t\t\tconsole.log( new_church );\n\t\t\t\t\t\t\t\t\tChurches.saveChurch( new_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//google.maps.event.addListener(marker, 'click', function () {\n\t\t\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\t\t\t//$scope.church = marker;\n\n\t\t\t\t\t\t\t\t$scope.edit_church = church;\n\t\t\t\t\t\t\t\t$scope.edit_church.editable = (($scope.current.assignment.team_role === 'leader' || $scope.current.assignment.team_role === 'inherited_leader') && church.ministry_id === $scope.current.assignment.ministry_id);\n\n\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t$scope.churchWindow.close();\n\t\t\t\t\t\t\t\t$scope.churchWindow.setOptions( {maxWidth: 300} );\n\t\t\t\t\t\t\t\t$scope.churchWindow.open( $scope.map, marker );\n\n\t\t\t\t\t\t\t\t// $scope.churchWindow.open($scope.map, marker);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t$scope.map.setCenter( marker.position );\n\t\t\t\t\t\t\t\t$scope.map.setZoom( $scope.map.getZoom() + 2 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}( church, marker, $scope )) );\n\n\t\t\t\t\tgoogle.maps.event.addListener( marker, 'dragend', (function ( church, marker ) {\n\t\t\t\t\t\treturn function () {\n\n\t\t\t\t\t\t\t//google.maps.event.addListener(marker, 'click', function () {\n\t\t\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\t\t\tvar new_church = {};\n\t\t\t\t\t\t\t\tnew_church.id = church.id;\n\t\t\t\t\t\t\t\tnew_church.latitude = marker.getPosition().lat();\n\t\t\t\t\t\t\t\tnew_church.longitude = marker.getPosition().lng();\n\t\t\t\t\t\t\t\tchurch.latitude = new_church.latitude;\n\t\t\t\t\t\t\t\tchurch.longitude = new_church.longitude;\n\t\t\t\t\t\t\t\tChurches.saveChurch( new_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\n\t\t\t\t\t\t\t\tmarker.setAnimation( null );\n\t\t\t\t\t\t\t\tmarker.setDraggable( false );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}( church, marker )) );\n\t\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t\t}\n\n\n\t\t\t\t//now create the parent lines\n\t\t\t\tangular.forEach( church.parents, function ( p ) {\n\t\t\t\t\tvar par = $scope.churches.filter( function ( c ) {\n\t\t\t\t\t\treturn c.id == p\n\t\t\t\t\t} );\n\t\t\t\t\tif ( par.length > 0 ) {\n\t\t\t\t\t\tvar parentLine = new google.maps.Polyline( {\n\t\t\t\t\t\t\tpath:          [new google.maps.LatLng( par[0].latitude, par[0].longitude ), new google.maps.LatLng( church.latitude, church.longitude )],\n\t\t\t\t\t\t\tgeodesic:      true,\n\t\t\t\t\t\t\tstrokeColor:   '#777',\n\t\t\t\t\t\t\tstrokeOpacity: 1.0,\n\t\t\t\t\t\t\tstrokeWeight:  2,\n\t\t\t\t\t\t\ticons:         [{\n\t\t\t\t\t\t\t\t\t\t\t\ticon:   {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpath:         google.maps.SymbolPath.FORWARD_OPEN_ARROW,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWeight: 1.5\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\toffset: '12px',\n\t\t\t\t\t\t\t\t\t\t\t\trepeat: '25px'\n\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tparentLine.setMap( $scope.map );\n\t\t\t\t\t\t$scope.map.church_lines.push( parentLine );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\n\t\t\t} );\n\n\n\t\t};\n\n\n\t\t$scope.jesusFilmSign = function ( coordinates, n, type ) {\n\t\t\tthis.div_ = null;\n\t\t\tthis.setMap( $scope.map );\n\t\t\tif ( n == 1 ) n = \"JF\";\n\n\t\t\t// onADD\n\t\t\tthis.onAdd = function () {\n\t\t\t\tvar div = document.createElement( 'div' );\n\t\t\t\tdiv.className = 'jf_label';\n\t\t\t\tdiv.innerHTML = n;\n\t\t\t\tthis.div_ = div;\n\t\t\t\tvar panes = this.getPanes();\n\t\t\t\tpanes.overlayMouseTarget.appendChild( div );\n\t\t\t};\n\n\t\t\t// draw\n\t\t\tthis.draw = function () {\n\t\t\t\tvar div = this.div_;\n\t\t\t\tvar overlayProjection = this.getProjection();\n\t\t\t\tvar position = overlayProjection.fromLatLngToDivPixel( coordinates );\n\n\t\t\t\t// displacement of sign\n\t\t\t\tvar x;\n\t\t\t\tvar y;\n\n\t\t\t\tif ( type == 'cluster' ) {\n\t\t\t\t\tx = -20;\n\t\t\t\t\ty = 8;\n\t\t\t\t}\n\n\t\t\t\telse if ( type >= 0 && type <= 1 ) {\n\t\t\t\t\tx = -23;\n\t\t\t\t\ty = -12;\n\t\t\t\t}\n\n\t\t\t\telse if ( type == 2 ) {\n\t\t\t\t\tx = -22;\n\t\t\t\t\ty = -13;\n\t\t\t\t}\n\n\t\t\t\telse if ( type >= 3 ) {\n\t\t\t\t\tx = -20;\n\t\t\t\t\ty = -13;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\n\t\t\t\tdiv.style.left = position.x + x + \"px\";\n\t\t\t\tdiv.style.top = position.y + y + \"px\";\n\t\t\t};\n\n\t\t\tthis.onRemove = function () {\n\t\t\t\tthis.div_.parentNode.removeChild( $scope.div_ );\n\t\t\t\tthis.div_ = null;\n\t\t\t}\n\t\t};\n\t\t$scope.jesusFilmSign.prototype = new google.maps.OverlayView();\n\n\t\t$scope.setDefaultView = function () {\n\t\t\tvar center = $scope.map.getCenter(),\n\t\t\t\tzoom = $scope.map.getZoom();\n\n\t\t\t// Update current assignment location/zoom\n\t\t\t$scope.current.assignment.location = {\n\t\t\t\tlatitude:  center.lat(),\n\t\t\t\tlongitude: center.lng()\n\t\t\t};\n\t\t\t$scope.current.assignment.location_zoom = zoom;\n\n\t\t\t// Save changes to API\n\t\t\tMinistries.updateMinistry( {\n\t\t\t\tministry_id:   $scope.current.assignment.ministry_id,\n\t\t\t\tmin_code:      $scope.current.assignment.min_code.trim(),\n\t\t\t\tlocation:      $scope.current.assignment.location,\n\t\t\t\tlocation_zoom: $scope.current.assignment.location_zoom\n\t\t\t} );\n\t\t};\n\n\t\t$scope.addTrainingStage = function ( training ) {\n\t\t\tvar newPhase = {\n\t\t\t\tphase:            training.current_stage,\n\t\t\t\tdate:             training.insert.date,\n\t\t\t\tnumber_completed: training.insert.number_completed,\n\t\t\t\ttraining_id:      training.hasOwnProperty( 'Id' ) ? training.Id : training.id\n\n\t\t\t};\n\t\t\tTrainings.addTrainingCompletion( $scope.current.sessionToken, newPhase ).then( $scope.onAddTrainingCompletion, $scope.onError );\n\n\t\t\ttraining.insert.date = \"\";\n\t\t\ttraining.insert.number_completed = 0;\n\n\t\t};\n\n\t\t$scope.onAddTrainingCompletion = function ( response ) {\n\t\t\tresponse.editMode = false;\n\n\t\t\tangular.forEach( $scope.trainings, function ( training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\tif ( id == response.training_id ) {\n\t\t\t\t\ttraining.gcm_training_completions.push( response );\n\t\t\t\t\ttraining.current_stage = response.phase + 1;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.saveTrainingCompletion = function ( data ) {\n\t\t\tTrainings.updateTrainingCompletion( $scope.current.sessionToken, data ).then( $scope.onSaveTrainingCompletion, $scope.onError );\n\t\t};\n\n\t\t$scope.myLocation = function () {\n\t\t\tif ( navigator.geolocation ) {\n\t\t\t\tnavigator.geolocation.getCurrentPosition( function ( position ) {\n\t\t\t\t\tvar center = new google.maps.LatLng( position.coords.latitude, position.coords.longitude );\n\t\t\t\t\t$scope.map.setCenter( center );\n\t\t\t\t\t$scope.map.setZoom( 15 );\n\t\t\t\t}, function () {\n\t\t\t\t\t// Failed\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Failed\n\t\t\t}\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.map' ).controller( 'MapCtrl', MapCtrl );\n})( jQuery );\n","(function () {\n\t'use strict';\n\n\tfunction ErrorCtrl( $scope, $routeParams, Settings ) {\n\t\t$scope.current.isLoaded = true;\n\n\t\t$scope.loginUrl = Settings.api.login;\n\t};\n\n\tangular.module( 'gma.controllers.error' ).controller( 'ErrorCtrl', ErrorCtrl );\n}());\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementDetailsCtrl( $scope, $modalInstance, Measurements, Assignments, measurement, details, Settings ) {\n\t\t$scope.spinner = true;\n\t\t$scope.measurement = measurement;\n\t\t$scope.details = details;\n\t\t$scope.ns = Settings.gmaNamespace;\n\n\t\t$scope.details.$promise.then( function () {\n\t\t\t$scope.spinner = false;\n\n\t\t\tvar da = [['Period', 'Personal', 'Local Team', 'Total']];\n\t\t\tangular.forEach( details.total, function ( t, period ) {\n\t\t\t\tangular.forEach( details.local, function ( l, p ) {\n\t\t\t\t\tif ( p === period ) {\n\t\t\t\t\t\tangular.forEach( details.my_measurements, function ( m, p ) {\n\t\t\t\t\t\t\tif ( p === period ) da.push( [p, m, l, t] )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t$scope.trend = google.visualization.arrayToDataTable( da );\n\t\t} );\n\n\t\t$scope.filterSource = function ( items ) {\n\t\t\tvar result = {};\n\t\t\tangular.forEach( items, function ( value, key ) {\n\t\t\t\tif ( key != Settings.gmaNamespace && key != 'total' ) {\n\t\t\t\t\tresult[key] = value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn result;\n\t\t};\n\n\t\t$scope.save = function () {\n\t\t\t$scope.spinner = true;\n\t\t\tvar measurements = [];\n\t\t\tangular.forEach( ['local', 'person'], function ( type ) {\n\t\t\t\tif ( $scope.editForm.hasOwnProperty( type ) && $scope.editForm[type].$dirty && typeof $scope.editForm[type] !== 'undefined' ) {\n\t\t\t\t\tmeasurements.push( {\n\t\t\t\t\t\tperiod:              $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\t\tmcc:                 $scope.current.mcc,\n\t\t\t\t\t\tsource:              Settings.gmaNamespace,\n\t\t\t\t\t\tmeasurement_type_id: $scope.details.measurement_type_ids[type],\n\t\t\t\t\t\trelated_entity_id:   type == 'local'\n\t\t\t\t\t\t\t? $scope.current.assignment.ministry_id\n\t\t\t\t\t\t\t: $scope.current.assignment.id,\n\t\t\t\t\t\tvalue:               $scope.editForm[type].$modelValue\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( measurements.length > 0 ) {\n\t\t\t\tMeasurements.saveMeasurement( {}, measurements, function () {\n\t\t\t\t\t$modalInstance.close();\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t\t}\n\t\t};\n\n\t\t$scope.close = function () {\n\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t};\n\n\t\t$scope.approveSelfAssigned = function ( user, role ) {\n\t\t\tvar user = user;\n\t\t\tuser.state = 'pending';\n\t\t\tAssignments.saveAssignment( {\n\t\t\t\tassignment_id: user.assignment_id\n\t\t\t}, {team_role: role}, function () {\n\t\t\t\tif ( role == 'blocked' ) {\n\t\t\t\t\tuser.state = 'blocked';\n\t\t\t\t\tuser.blocked = true;\n\t\t\t\t} else {\n\t\t\t\t\tuser.success = true;\n\t\t\t\t\tuser.state = 'member';\n\t\t\t\t}\n\t\t\t}, function () {\n\t\t\t\tdelete user.state;\n\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.measurements' ).controller( 'MeasurementDetailsCtrl', MeasurementDetailsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementsCtrl( $scope, $document, $filter, $modal, Measurements, Settings ) {\n\t\t$scope.current.isLoaded = false;\n\t\t$scope.ns = Settings.gmaNamespace;\n\n\t\t// Debounced method to fetch Measurements at most once every 100 milliseconds\n\t\tvar getMeasurements = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && typeof $scope.current.period !== 'undefined' && typeof $scope.current.mcc !== 'undefined' ) {\n\t\t\t\t$scope.current.isLoaded = false;\n\t\t\t\t$scope.lmiForm.$setPristine();\n\t\t\t\t$scope.measurements = Measurements.getMeasurements( {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tmcc:         $scope.current.mcc,\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t}, function () {\n\t\t\t\t\t$scope.current.isLoaded = true;\n\t\t\t\t} );\n\t\t\t}\n\t\t}, 100 );\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.period', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.hasOther = function () {\n\t\t\treturn _.where( $scope.measurements, {section: 'other', column: 'other'} ).length > 0;\n\t\t};\n\n\t\t// Method used to save measurements\n\t\t$scope.save = function () {\n\t\t\tvar measurements = [];\n\t\t\tangular.forEach( $scope.measurements, function ( measurement ) {\n\t\t\t\tangular.forEach( ['person', 'local'], function ( type ) {\n\t\t\t\t\tif ( $scope.lmiForm.hasOwnProperty( measurement.measurement_type_ids[type] ) ) {\n\t\t\t\t\t\tvar type_id = measurement.measurement_type_ids[type],\n\t\t\t\t\t\t\tinput = $scope.lmiForm[type_id];\n\n\t\t\t\t\t\tif ( input.$dirty && input.$valid ) {\n\t\t\t\t\t\t\tmeasurements.push( {\n\t\t\t\t\t\t\t\tperiod:              $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\t\t\t\tmcc:                 $scope.current.mcc,\n\t\t\t\t\t\t\t\tsource:              Settings.gmaNamespace,\n\t\t\t\t\t\t\t\tmeasurement_type_id: type_id,\n\t\t\t\t\t\t\t\trelated_entity_id:   type === 'person' ? $scope.current.assignment.id : $scope.current.assignment.ministry_id,\n\t\t\t\t\t\t\t\tvalue:               input.$modelValue\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tif ( measurements.length > 0 ) {\n\t\t\t\tMeasurements.saveMeasurement( {}, measurements, function () {\n\t\t\t\t\tgetMeasurements();\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tgetMeasurements();\n\t\t\t}\n\t\t};\n\n\t\t$scope.editMeasurementDetails = function ( measurement ) {\n\t\t\tvar instance = $modal.open( {\n\t\t\t\ttemplateUrl: 'partials/measurements/details.html',\n\t\t\t\tcontroller:  'MeasurementDetailsCtrl',\n\t\t\t\tkeyboard:    true,\n\t\t\t\tbackdrop:    true,\n\t\t\t\tresolve:     {\n\t\t\t\t\t'measurement': function () {\n\t\t\t\t\t\treturn measurement;\n\t\t\t\t\t},\n\t\t\t\t\t'details':     function () {\n\t\t\t\t\t\t// Return the promise so resolve waits\n\t\t\t\t\t\treturn Measurements.getMeasurement( {\n\t\t\t\t\t\t\tmeasurement_id: measurement.measurement_type_ids['total'],\n\t\t\t\t\t\t\tministry_id:    $scope.current.assignment.ministry_id,\n\t\t\t\t\t\t\tmcc:            $scope.current.mcc,\n\t\t\t\t\t\t\tperiod:         $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tinstance.result.then( function () {\n\t\t\t\tgetMeasurements();\n\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.measurements' ).controller( 'MeasurementsCtrl', MeasurementsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction ReportsCtrl( $scope, $document, Measurements, Settings ) {\n\t\t$scope.chart = new google.visualization.LineChart( document.getElementById( 'reports-chart' ) );\n\t\t$scope.table = new google.visualization.Table( document.getElementById( 'reports-table' ) );\n\n\t\t// Debounced method to fetch Measurements at most once every 100 milliseconds\n\t\tvar getMeasurements = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && typeof $scope.current.period !== 'undefined' && typeof $scope.current.mcc !== 'undefined' ) {\n\t\t\t\tdelete $scope.dataTable;\n\t\t\t\t$scope.current.isLoaded = false;\n\t\t\t\t$scope.measurements = Measurements.getMeasurements( {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tmcc:         $scope.current.mcc,\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\thistorical:  true\n\t\t\t\t}, function () {\n\t\t\t\t\t$scope.current.isLoaded = true;\n\n\t\t\t\t\tvar chartData = new google.visualization.DataTable(),\n\t\t\t\t\t\ttableData = new google.visualization.DataTable(),\n\t\t\t\t\t\trows = [];\n\t\t\t\t\tchartData.addColumn( 'string', 'Date' );\n\t\t\t\t\tangular.forEach( $scope.dates, function ( date, index ) {\n\t\t\t\t\t\trows[index] = [date];\n\t\t\t\t\t\tangular.forEach( $scope.measurements, function ( measurement ) {\n\t\t\t\t\t\t\tif ( index === 0 ) {\n\t\t\t\t\t\t\t\tchartData.addColumn( 'number', measurement.name );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trows[index].push( measurement.total[date] );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t\tchartData.addRows( rows );\n\t\t\t\t\t$scope.dataTable = chartData;\n\n\t\t\t\t\ttableData.addColumn( 'string', 'Measurement' );\n\t\t\t\t\tangular.forEach( $scope.measurements, function ( measurement, index ) {\n\t\t\t\t\t\tvar row = [];\n\t\t\t\t\t\tangular.forEach( $scope.dates, function ( date ) {\n\t\t\t\t\t\t\tif ( index === 0 ) tableData.addColumn( 'number', date );\n\t\t\t\t\t\t\trow.push( measurement.total[date] );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( index === 0 ) tableData.addColumn( 'number', 'Total' );\n\t\t\t\t\t\ttableData.addRow( [measurement.name].concat( row, [walterMeanAvg( row )] ) );\n\t\t\t\t\t} );\n\t\t\t\t\t$scope.tableDataTable = tableData;\n\t\t\t\t}, function () {\n\t\t\t\t} );\n\t\t\t}\n\t\t}, 100 );\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.period', function ( period ) {\n\t\t\tif ( typeof period === 'undefined' ) return;\n\t\t\tgetMeasurements();\n\n\t\t\tvar now = period.clone(),\n\t\t\t\tdates = [];\n\t\t\tfor ( var i = 0; i < 12; i++ ) {\n\t\t\t\tdates.push( now.clone().format( 'YYYY-MM' ) );\n\t\t\t\tnow.subtract( 1, 'M' );\n\t\t\t}\n\t\t\t$scope.dates = dates.reverse();\n\t\t} );\n\n\t\t$scope.$watch( 'dataTable', function ( data ) {\n\t\t\tif ( typeof data === 'undefined' ) return;\n\t\t\t$scope.chart.draw( data, {\n\t\t\t\tchartArea:   {\n\t\t\t\t\ttop:    20,\n\t\t\t\t\tleft:   50,\n\t\t\t\t\twidth:  '80%',\n\t\t\t\t\theight: '90%'\n\t\t\t\t},\n\t\t\t\tlegend:      {\n\t\t\t\t\talignment: 'start',\n\t\t\t\t\tposition:  'right'\n\t\t\t\t},\n\t\t\t\torientation: 'horizontal'\n\t\t\t} );\n\t\t} );\n\n\t\t$scope.$watch( 'tableDataTable', function ( data ) {\n\t\t\tif ( typeof data === 'undefined' ) return;\n\t\t\t$scope.table.draw( data, {} );\n\t\t} );\n\n\t\tfunction walterMeanAvg( data ) {\n\t\t\t// Drop zeros\n\t\t\tvar values = [],\n\t\t\t\ttotal = 0;\n\t\t\tangular.forEach( data, function ( val ) {\n\t\t\t\tif ( val === 0 ) return;\n\t\t\t\tvalues.push( val );\n\t\t\t} );\n\n\t\t\tif ( values.length === 0 ) return 0;\n\n\t\t\tif ( values.length > 4 ) {\n\t\t\t\t// Sort array\n\t\t\t\tvalues.sort( function ( a, b ) {\n\t\t\t\t\treturn a - b;\n\t\t\t\t} );\n\n\t\t\t\t// Remove first element, lowest\n\t\t\t\tvalues.shift();\n\n\t\t\t\t// Remove last element, highest\n\t\t\t\tvalues.pop();\n\t\t\t}\n\n\t\t\t// Sum the values\n\t\t\tangular.forEach( values, function ( val ) {\n\t\t\t\ttotal = total + val;\n\t\t\t} );\n\n\t\t\t// Return the average\n\t\t\treturn Math.round( (total / values.length) * 100 ) / 100;\n\t\t}\n\t}\n\n\tangular.module( 'gma.controllers.reports' ).controller( 'ReportsCtrl', ReportsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Assignments( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/assignments/:assignment_id' ), {assignment_id: '@assignment_id'}, {\n\t\t\tgetAssignment:  {method: 'GET'},\n\t\t\tgetAssignments: {method: 'GET', isArray: true},\n\t\t\tsaveAssignment: {method: 'PUT'},\n\t\t\taddTeamMember:  {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Assignments', Assignments );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Churches( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/churches/:church_id' ), {}, {\n\t\t\tgetChurch:   {method: 'GET'},\n\t\t\tgetChurches: {method: 'GET', isArray: true},\n\t\t\taddChurch:   {method: 'POST'},\n\t\t\tsaveChurch:  {method: 'PUT', params: {church_id: '@id'}}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Churches', Churches );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementTypes( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/measurement_types/:measurement_type_id' ), {}, {\n\t\t\tgetMeasurementType:  {method: 'GET'},\n\t\t\tgetMeasurementTypes: {method: 'GET', isArray: true},\n\t\t\tsaveMeasurementType: {method: 'PUT'},\n\t\t\taddMeasurementType:  {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'MeasurementTypes', MeasurementTypes );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Measurements( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/measurements/:measurement_id' ), {}, {\n\t\t\tgetMeasurement:  {method: 'GET'},\n\t\t\tgetMeasurements: {method: 'GET', isArray: true, params: {source: Settings.gmaNamespace}},\n\t\t\tsaveMeasurement: {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Measurements', Measurements );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Ministries( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/ministries/:ministry_id' ), {}, {\n\t\t\tgetMinistry:    {method: 'GET'},\n\t\t\tgetMinistries:  {method: 'GET', isArray: true},\n\t\t\tupdateMinistry: {method: 'PUT', params: {ministry_id: '@ministry_id'}},\n\t\t\tcreateMinistry: {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Ministries', Ministries );\n\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Session( $rootScope, $injector, $q, $log, Settings, $location ) {\n\t\tvar token;\n\n\t\tvar startSession = function ( ticket ) {\n\t\t\tif ( \"false\" === ticket ) {\n\t\t\t\twindow.location = Settings.api.login;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn $injector.get( '$http' ).get( Settings.api.measurements( '/token' ), {params: {st: ticket}} )\n\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t$rootScope.current.user = response.data.user;\n\t\t\t\t\t$rootScope.current.sessionToken = response.data.session_ticket;\n\t\t\t\t\ttoken = response.data.session_ticket;\n\t\t\t\t\tif ( typeof response.data.assignments === 'object' ) {\n\t\t\t\t\t\t$rootScope.current.assignments = response.data.assignments;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete $rootScope.current.assignments;\n\t\t\t\t\t}\n\n\t\t\t\t\t$rootScope.$broadcast( 'sessionStart', response.data );\n\n\t\t\t\t\treturn response.data;\n\t\t\t\t} );\n\t\t};\n\n\t\treturn {\n\t\t\tstartSession:  function ( ticket ) {\n\t\t\t\tstartSession( ticket );\n\t\t\t},\n\t\t\tlogout:        function () {\n\t\t\t\treturn $injector.get( '$http' ).delete( Settings.api.measurements( '/token' ) );\n\t\t\t},\n\t\t\t// Request Interceptor\n\t\t\trequest:       function ( config ) {\n\t\t\t\tif ( config.url.indexOf( Settings.api.measurements() ) !== -1 ) {\n\t\t\t\t\t// All API requests must pass along HTTP credentials\n\t\t\t\t\tconfig.withCredentials = true;\n\n\t\t\t\t\t// If we have a token, add it to the request\n\t\t\t\t\tif ( typeof token !== 'undefined' ) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\n\t\t\t\t\tconfig.attempts = ( typeof config.attempts === 'number' ) ? config.attempts + 1 : 1;\n\t\t\t\t}\n\t\t\t\treturn config;\n\t\t\t},\n\t\t\t// Error Response Interceptor\n\t\t\tresponseError: function ( response ) {\n\t\t\t\tif ( response.status === 401 && response.config.url.indexOf( Settings.api.measurements() ) !== -1 && response.config.attempts < 2 ) {\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\t$injector.get( '$http' ).get( Settings.api.refresh, {withCredentials: true} ).then( function ( loginResponse ) {\n\t\t\t\t\t\tif ( loginResponse.data ) {\n\t\t\t\t\t\t\t//get new token\n\t\t\t\t\t\t\tstartSession( loginResponse.data.service_ticket ).then( function () {\n\t\t\t\t\t\t\t\t//retry request with new token\n\t\t\t\t\t\t\t\t$injector.get( '$http' )( response.config ).then( function ( response ) {\n\t\t\t\t\t\t\t\t\tdeferred.resolve( response );\n\t\t\t\t\t\t\t\t}, function ( response ) {\n\t\t\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\t\t$location.path('/error/invalid_session');\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function ( response ) {\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t$location.path('/error/invalid_session');\n\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t\treturn $q.reject( response );\n\t\t\t}\n\t\t}\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Session', Session );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Trainings( $http, Settings ) {\n\t\tfunction getHighest( array ) {\n\t\t\tvar max = 0;\n\t\t\tif ( !array ) return 0;\n\t\t\tfor ( var i = 0; i < array.length; i++ ) {\n\t\t\t\tif ( array[i].phase > (max || 0) ) {\n\t\t\t\t\tmax = array[i].phase;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn max;\n\t\t}\n\n\t\tfunction getHighestCount( array ) {\n\t\t\tvar max = 0;\n\t\t\tfor ( var i = 0; i < array.length; i++ ) {\n\t\t\t\tif ( array[i].number_completed > (max || 0) ) {\n\t\t\t\t\tmax = array[i].number_completed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn max;\n\t\t}\n\n\t\treturn {\n\t\t\tgetTrainings:             function ( session_ticket, ministry_id, mcc, show_all, show_tree ) {\n\t\t\t\treturn $http\n\t\t\t\t\t.get( Settings.api.measurements( '/training' ), {\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tministry_id: ministry_id,\n\t\t\t\t\t\t\tshow_all:    show_all,\n\t\t\t\t\t\t\tshow_tree:   show_tree,\n\t\t\t\t\t\t\tmcc:         mcc\n\t\t\t\t\t\t}\n\t\t\t\t\t} )\n\t\t\t\t\t.then( function ( response ) {\n\n\t\t\t\t\t\tangular.forEach( response.data, function ( training ) {\n\t\t\t\t\t\t\ttraining.current_stage = getHighest( training.gcm_training_completions ) + 1;\n\t\t\t\t\t\t\ttraining.leaders_trained = getHighestCount( training.gcm_training_completions );\n\t\t\t\t\t\t\ttraining.editMode = false;\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tupdateTraining:           function ( session_ticket, training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\treturn $http.put( Settings.api.measurements( '/training/' + id ), training )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\taddTraining:              function ( session_ticket, training ) {\n\t\t\t\treturn $http.post( Settings.api.measurements( '/training' ), training )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tdeleteTraining:           function ( session_ticket, training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\treturn $http.delete( Settings.api.measurements( '/training/' + id ) )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\taddTrainingCompletion:    function ( session_ticket, training_completion ) {\n\t\t\t\treturn $http.post( Settings.api.measurements( '/training_completion' ), training_completion )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tupdateTrainingCompletion: function ( session_ticket, training_completion ) {\n\t\t\t\tvar id = training_completion.hasOwnProperty( 'Id' ) ? training_completion.Id : training_completion.id;\n\t\t\t\treturn $http.put( Settings.api.measurements( '/training_completion/' + id ), training_completion )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tdeleteTrainingCompletion: function ( session_ticket, training_completion ) {\n\t\t\t\tvar id = training_completion.hasOwnProperty( 'Id' ) ? training_completion.Id : training_completion.id;\n\t\t\t\treturn $http.delete( Settings.api.measurements( '/training_completion/' + id ) )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Trainings', Trainings );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction SettingsService() {\n\t\tvar config = {},\n\t\t\ttabs = [];\n\n\t\tthis.setConfig = function ( c ) {\n\t\t\tconfig = c;\n\t\t};\n\n\t\tvar versionUrl = function ( path ) {\n\t\t\treturn path.indexOf( '?' ) === -1\n\t\t\t\t? path + '?ver=' + config.version\n\t\t\t\t: path + '&ver=' + config.version;\n\t\t};\n\n\t\tvar appUrl = function ( path, version ) {\n\t\t\tversion = typeof version === 'undefined' ? true : version;\n\t\t\tvar url = apiUrl( config.appUrl, path );\n\t\t\tif ( version ) {\n\t\t\t\treturn versionUrl( url );\n\t\t\t}\n\t\t\treturn url;\n\t\t};\n\n\t\tvar measurementsApi = function ( path ) {\n\t\t\treturn apiUrl( config.api.measurements, path );\n\t\t};\n\n\t\tfunction apiUrl( base, path ) {\n\t\t\tif ( typeof path === 'undefined' ) return base;\n\t\t\treturn ( path.indexOf( '/' ) === 0 )\n\t\t\t\t? base + path\n\t\t\t\t: base + '/' + path;\n\t\t}\n\n\t\tvar mobileApps = function () {\n\t\t\tif ( typeof config.mobileapps === 'undefined' ) return false;\n\t\t\treturn config.mobileapps.length > 0 ? config.mobileapps : false;\n\t\t};\n\n\t\tthis.routes = function () {\n\t\t\tangular.forEach( config.tabs, function ( tab ) {\n\t\t\t\tswitch ( tab ) {\n\t\t\t\t\tcase 'map':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Map',\n\t\t\t\t\t\t\tpath:          '/map',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/map/map.html',\n\t\t\t\t\t\t\tcontroller:    'MapCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['self_assigned', 'member', 'inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'measurements':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Measurements',\n\t\t\t\t\t\t\tpath:          '/measurements',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/measurements/measurements.html',\n\t\t\t\t\t\t\tcontroller:    'MeasurementsCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['self_assigned', 'member', 'inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'reports':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Reports',\n\t\t\t\t\t\t\tpath:          '/reports',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/reports/reports.html',\n\t\t\t\t\t\t\tcontroller:    'ReportsCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'admin':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Admin',\n\t\t\t\t\t\t\tpath:          '/admin',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/admin/admin.html',\n\t\t\t\t\t\t\tcontroller:    'AdminCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['leader', 'inherited_leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}, tabs );\n\t\t\treturn tabs;\n\t\t};\n\n\t\tthis.$get = function () {\n\t\t\treturn {\n\t\t\t\tappUrl:         appUrl,\n\t\t\t\tversionUrl:     versionUrl,\n\t\t\t\tticket:         config.ticket,\n\t\t\t\tappEnvironment: config.environment,\n\t\t\t\tapi:            {\n\t\t\t\t\tmeasurements: measurementsApi,\n\t\t\t\t\trefresh:      config.api.refresh,\n\t\t\t\t\tlogout:       config.api.logout,\n\t\t\t\t\tlogin:        config.api.login\n\t\t\t\t},\n\t\t\t\tmobileApps:     ( typeof config.mobileapps !== 'undefined' && config.mobileapps.length > 0  ) ? config.mobileapps : false,\n\t\t\t\tgmaNamespace:   config.namespace,\n\t\t\t\ttabs:           tabs\n\t\t\t}\n\t\t};\n\t}\n\n\tangular.module( 'gma.services.settings' ).provider( 'Settings', SettingsService );\n})();\n"],"sourceRoot":"/source/"}