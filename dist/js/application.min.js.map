{"version":3,"sources":["_app.js","controllers/_controllers.js","directives/_directives.js","filters/_filters.js","services/_services.js","controllers/admin/_admin.js","controllers/map/_map.js","controllers/measurements/_measurements.js","controllers/reports/_reports.js","services/measurements/_measurements.js","services/settings/_settings.js","app.js","controllers/gma-ctrl.js","application.min.js","controllers/join-ministry-ctrl.js","directives/gma-trend-directive.js","filters/role-filter.js","controllers/admin/admin-ctrl.js","controllers/map/map-ctrl.js","controllers/measurements/measurement-details-ctrl.js","controllers/measurements/measurements-ctrl.js","controllers/reports/reports-ctrl.js","services/measurements/assignments-service.js","services/measurements/churches-service.js","services/measurements/measurement-types-service.js","services/measurements/measurements-service.js","services/measurements/ministries-service.js","services/measurements/session-service.js","services/measurements/trainings-service.js","services/settings/settings-service.js"],"names":["angular","module","run","$rootScope","$route","$location","Session","Settings","current","isLoaded","window","parent","parentHash","location","hash","path","slice","$on","reload","startSession","ticket","config","$routeProvider","$httpProvider","$compileProvider","SettingsProvider","$provide","setConfig","gma","aHrefSanitizationWhitelist","interceptors","push","forEach","routes","route","i","otherwise","redirectTo","when","templateUrl","controller","decorator","$delegate","ngModel","scope","element","attrs","$injector","$interpolate","get","$set","name","invoke","this","$scope","$element","$attrs","form","ngForm","GMACtrl","$filter","$modal","Ministries","Assignments","$log","flattenMinistries","arr","ministries","ministry","hasOwnProperty","sub_ministries","concat","_","sortBy","m","team_role","uniq","ministry_id","tabs","appEnvironment","event","session","assignments","joinMinistry","$watch","oldVal","debug","isUndefined","assignment","contains","pluck","id","mccs","length","mcc","indexOf","mccSort","hasRole","role","mccLabels","ds","gcm","llm","slm","value","periods","now","moment","date","clone","subtract","period","prevPeriod","index","nextPeriod","logout","then","api","invalidateSession","allowClose","instance","open","keyboard","backdrop","resolve","getMinistries","$promise","result","addTeamMember","username","user","cas_username","onError","response","code","reason","pathname","error","mobileApps","$inject","JoinMinistryCtrl","$modalInstance","join","close","cancel","dismiss","directive","restrict","require","link","chart","google","visualization","LineChart","$render","draw","$viewValue","width","height","chartArea","filter","items","filtered","item","AdminCtrl","MeasurementTypes","roles","text","getMinistry","measurementTypes","getMeasurementTypes","data","type","visible","is_custom","lmi_show","perm_link_stub","lmi_hide","saveRole","saveAssignment","assignment_id","ableToChangeParentMinistry","parentToFind","availableMinIds","add","newMember","addSubMinistry","newMinistry","parent_id","createMinistry","isDefined","addMeasurement","newMeasurement","addMeasurementType","saveDetails","min_code","has_ds","has_gcm","has_llm","has_slm","private","where","saveDetailsResource","updateMinistry","saveDetailsAlert","msg","Message","$","MapCtrl","$document","$compile","Trainings","Churches","initialize","map","maps","Map","document","getElementById","mapOptions","setOptions","draggableCursor","addListener","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","lat","lng","trigger","loadChurches","markers","church","churchWindow","InfoWindow","churchWindowContent","maxWidth","trainingWindow","trainingWindowContent","newChurchWindow","cancelAddChurch","newChurchWindowContent","newTrainingWindow","newTrainingContent","church_lines","icons","MarkerImage","versionUrl","Size","Point","cluster","multiplying","group","targetpoint","training","side","style","display","search","controls","ControlPosition","TOP_RIGHT","TOP_LEFT","autocomplete","places","Autocomplete","bindTo","place","getPlace","geometry","viewport","fitBounds","setCenter","setZoom","load_training_markers","a","LatLng","latitude","longitude","parseInt","location_zoom","show_target_point","show_group","show_church","show_mult_church","show_lines","show_jf","map_filter","icon_add_mode","show_all","show_tree","new_church","edit_church","SetParentMode","churches","trainings","allChurches","training_types","show","zoom","center","panControl","zoomControl","mapTypeControl","streetViewControl","overviewMapControl","setTimeout","loadAllChurches","loadTrainings","debounce","params","getChurches","getTrainings","sessionToken","console","log","lat_min","lat_max","long_min","long_max","getZoom","onGetChurches","removeLines","l","setMap","removeJF","remove","line","setVisible","hide","onAddChurch","addChurch","getPosition","removedObject","splice","addTraining","new_training","onAddTraining","c","marker","MarkerWithLabel","position","getCenter","title","cluster_count","zIndex","icon","labelContent","labelAnchor","labelClass","labelInBackground","draggable","new_training_marker","setAnimation","Animation","BOUNCE","getContent","setContent","nextSibling","onSaveChurch","onAddIcon","security","new_marker","SetParent","new_parentLine","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","SymbolPath","FORWARD_OPEN_ARROW","offset","repeat","move_event","e","setPath","latLng","MoveChurch","setDraggable","MoveTraining","edit_training","Id","SaveChurch","saveChurch","SaveTraining","updateTraining","toDelete","t","editable","$apply","churchIconToUse","development","jf_contrib","jf","jesusFilmSign","toString","removeListener","parents","p","par","parentLine","coordinates","n","div_","onAdd","div","createElement","className","innerHTML","panes","getPanes","overlayMouseTarget","appendChild","x","y","overlayProjection","getProjection","fromLatLngToDivPixel","left","top","onRemove","parentNode","removeChild","prototype","OverlayView","setDefaultView","trim","addTrainingStage","newPhase","phase","current_stage","insert","number_completed","training_id","addTrainingCompletion","onAddTrainingCompletion","editMode","gcm_training_completions","saveTrainingCompletion","updateTrainingCompletion","onSaveTrainingCompletion","jQuery","MeasurementDetailsCtrl","Measurements","measurement","details","spinner","ns","gmaNamespace","da","total","local","my_measurements","trend","arrayToDataTable","filterSource","key","save","measurements","editForm","$dirty","format","measurement_type_id","measurement_type_ids","related_entity_id","$modelValue","saveMeasurement","approveSelfAssigned","state","blocked","success","MeasurementsCtrl","getMeasurements","lmiForm","$setPristine","hasOther","section","column","perm_link","$valid","person","editMeasurementDetails","getMeasurement","measurement_id","ReportsCtrl","walterMeanAvg","values","val","sort","b","shift","pop","Math","round","table","Table","dataTable","historical","chartData","DataTable","tableData","rows","addColumn","dates","addRows","row","addRow","tableDataTable","reverse","legend","alignment","orientation","$resource","getAssignment","method","getAssignments","isArray","factory","getChurch","church_id","getMeasurementType","saveMeasurementType","source","$q","token","login","st","session_ticket","$broadcast","request","url","withCredentials","headers","attempts","responseError","status","deferred","defer","refresh","loginResponse","service_ticket","reject","promise","$http","getHighest","array","max","getHighestCount","leaders_trained","put","post","deleteTraining","training_completion","deleteTrainingCompletion","SettingsService","apiUrl","base","version","appUrl","measurementsApi","tab","requiredRoles","$get","environment","mobileapps","namespace","provider"],"mappings":"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","file":"application.min.js","sourcesContent":["(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma', [\n\t\t'ngRoute',\n\t\t'ui.bootstrap',\n\t\t'ngResource',\n\t\t'gma.controllers',\n\t\t'gma.directives',\n\t\t'gma.filters',\n\t\t'gma.services'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers', [\n\t\t'gma.controllers.admin',\n\t\t'gma.controllers.map',\n\t\t'gma.controllers.measurements',\n\t\t'gma.controllers.reports'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.directives', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.filters', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services', [\n\t\t'gma.services.measurements',\n\t\t'gma.services.settings'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.admin', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.map', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.measurements', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.reports', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services.measurements', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services.settings', [] );\n})( angular );\n","(function () {\n\t'use strict';\n\tangular.module( 'gma' )\n\t\t.run( function ( $rootScope, $route, $location, Session, Settings ) {\n\t\t\t// Object to hold current values: assignments, assignment, user ...\n\t\t\t$rootScope.current = {\n\t\t\t\tisLoaded: false\n\t\t\t};\n\n\t\t\t// Support application inside an iframe, sync parent hash.\n\t\t\tif ( typeof window.parent !== 'undefined' ) {\n\t\t\t\tvar parentHash = window.parent.location.hash;\n\t\t\t\tif ( parentHash ) {\n\t\t\t\t\t$location.path( parentHash.slice( 1 ) );\n\t\t\t\t}\n\n\t\t\t\t$rootScope.$on( '$locationChangeSuccess', function () {\n\t\t\t\t\twindow.parent.location.hash = '#' + $location.path();\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Reload the route since ng-view directive is inside a template.\n\t\t\t$route.reload();\n\n\t\t\t// Start the session with the API\n\t\t\t//TODO fetch a ticket from refresh to start session\n\t\t\tSession.startSession( Settings.ticket );\n\t\t} )\n\t\t.config( function ( $routeProvider, $httpProvider, $compileProvider, SettingsProvider, $provide ) {\n\t\t\t// Initialize Settings from wrapper provided config\n\t\t\tSettingsProvider.setConfig( window.gma.config );\n\n\t\t\t// Add itms-services scheme to safe aHref protocols\n\t\t\t$compileProvider.aHrefSanitizationWhitelist( /^\\s*(https?|ftp|mailto|tel|file|itms-services):/ );\n\n\t\t\t// Register Session as an http interceptor\n\t\t\t$httpProvider.interceptors.push( 'Session' );\n\n\t\t\t// Setup application routes\n\t\t\tangular.forEach( SettingsProvider.routes(), function ( route, i ) {\n\t\t\t\tif ( i === 0 ) {\n\t\t\t\t\t$routeProvider.otherwise( {redirectTo: route.path} );\n\t\t\t\t}\n\t\t\t\t$routeProvider\n\t\t\t\t\t.when( route.path, {\n\t\t\t\t\t\ttemplateUrl: route.templateUrl,\n\t\t\t\t\t\tcontroller:  route.controller\n\t\t\t\t\t} );\n\t\t\t} );\n\n\t\t\t// https://github.com/angular/angular.js/issues/1404\n\t\t\t// Source: http://plnkr.co/edit/hSMzWC?p=preview\n\t\t\t$provide.decorator( 'ngModelDirective', function ( $delegate ) {\n\t\t\t\tvar ngModel = $delegate[0], controller = ngModel.controller;\n\t\t\t\tngModel.controller = ['$scope', '$element', '$attrs', '$injector', function ( scope, element, attrs, $injector ) {\n\t\t\t\t\tvar $interpolate = $injector.get( '$interpolate' );\n\t\t\t\t\tattrs.$set( 'name', $interpolate( attrs.name || '' )( scope ) );\n\t\t\t\t\t$injector.invoke( controller, this, {\n\t\t\t\t\t\t'$scope':   scope,\n\t\t\t\t\t\t'$element': element,\n\t\t\t\t\t\t'$attrs':   attrs\n\t\t\t\t\t} );\n\t\t\t\t}];\n\t\t\t\treturn $delegate;\n\t\t\t} );\n\n\t\t\t$provide.decorator( 'formDirective', function ( $delegate ) {\n\t\t\t\tvar form = $delegate[0], controller = form.controller;\n\t\t\t\tform.controller = ['$scope', '$element', '$attrs', '$injector', function ( scope, element, attrs, $injector ) {\n\t\t\t\t\tvar $interpolate = $injector.get( '$interpolate' );\n\t\t\t\t\tattrs.$set( 'name', $interpolate( attrs.name || attrs.ngForm || '' )( scope ) );\n\t\t\t\t\t$injector.invoke( controller, this, {\n\t\t\t\t\t\t'$scope':   scope,\n\t\t\t\t\t\t'$element': element,\n\t\t\t\t\t\t'$attrs':   attrs\n\t\t\t\t\t} );\n\t\t\t\t}];\n\t\t\t\treturn $delegate;\n\t\t\t} );\n\t\t} );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction GMACtrl( $scope, $filter, $location, $modal, Session, Ministries, Assignments, Settings, $log ) {\n\t\t// Attach $location provider to scope, this is used to set active tabs\n\t\t$scope.$location = $location;\n\n\t\t$scope.tabs = Settings.tabs;\n\n\t\t$scope.appEnvironment = Settings.appEnvironment;\n\n\t\t//---------------------------------------\n\t\t// Assignments\n\t\t//---------------------------------------\n\n\t\t$scope.$on( 'sessionStart', function ( event, session ) {\n\t\t\tif ( typeof session.assignments === 'undefined' ) {\n\t\t\t\t//Open Modal if user has no assignment\n\t\t\t\t$scope.joinMinistry( false );\n\t\t\t}\n\t\t} );\n\n\t\t// Update current assignment when assignments is set - this occurs after a session is established\n\t\t$scope.$watch( 'current.assignments', function ( assignments, oldVal ) {\n\t\t\tif ( assignments === oldVal ) return;\n\n\t\t\t$log.debug( 'Assignments Changed' );\n\n\t\t\tif ( typeof assignments === 'object' ) {\n\t\t\t\tif ( angular.isUndefined( $scope.current.assignment ) || !_.contains( _.pluck( assignments, 'id' ), $scope.current.assignment.id ) ) {\n\t\t\t\t\t$scope.current.assignment = $filter( 'orderBy' )( assignments, 'name' )[0];\n\t\t\t\t}\n\t\t\t\t$scope.current.ministries = flattenMinistries( assignments );\n\t\t\t} else {\n\t\t\t\tdelete $scope.current.assignment;\n\t\t\t\t$scope.current.ministries = [];\n\t\t\t}\n\t\t} );\n\n\t\t// Update assignment and mcc when assignment changes\n\t\t$scope.$watch( 'current.assignment', function ( assignment, oldVal ) {\n\t\t\tif ( assignment === oldVal ) return;\n\n\t\t\t$log.debug( 'Assignment Changed: ' + assignment.name );\n\n\t\t\tif ( typeof assignment === 'object' ) {\n\n\t\t\t\tif ( assignment.mccs.length > 0 ) {\n\t\t\t\t\t// Set mcc if none is currently set or new assignment does not include current mcc\n\t\t\t\t\tif ( typeof $scope.current.mcc === 'undefined' || assignment.mccs.indexOf( $scope.current.mcc ) < 0 ) {\n\t\t\t\t\t\t$scope.current.mcc = $filter( 'orderBy' )( assignment.mccs, $scope.mccSort )[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Delete current mcc if assignment has no mccs\n\t\t\t\t\tdelete $scope.current.mcc;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t$scope.current.hasRole = function ( role ) {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' || typeof $scope.current.assignment.team_role === 'undefined' ) return false;\n\t\t\treturn (typeof role === 'string') ? role == $scope.current.assignment.team_role : _.contains( role, $scope.current.assignment.team_role );\n\t\t};\n\n\t\tfunction flattenMinistries( arr ) {\n\t\t\tvar ministries = [];\n\t\t\tangular.forEach( arr, function ( ministry ) {\n\t\t\t\tministries.push( ministry );\n\t\t\t\tif ( ministry.hasOwnProperty( 'sub_ministries' ) && typeof ministry.sub_ministries === 'object' ) {\n\t\t\t\t\tministries = ministries.concat( flattenMinistries( ministry.sub_ministries ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t//sort by team role\n\t\t\tministries = _.sortBy( ministries, function ( m ) {\n\t\t\t\treturn (m.team_role === 'leader' ? 0 : 1);\n\t\t\t} );\n\t\t\t//remove duplicates\n\t\t\treturn _.uniq( ministries, false, function ( m ) {\n\t\t\t\treturn m.ministry_id;\n\t\t\t} );\n\t\t}\n\n\t\t//---------------------------------------\n\t\t// Mission Critical Components (MCC)\n\t\t//---------------------------------------\n\n\t\t// MCC labels, this should be done in localization in the future.\n\t\t$scope.mccLabels = {\n\t\t\tds:  'Digital Strategies',\n\t\t\tgcm: 'Global Church Movements',\n\t\t\tllm: 'Leader Led',\n\t\t\tslm: 'Student Led'\n\t\t};\n\n\t\t$scope.mccSort = function ( value ) {\n\t\t\treturn $scope.mccLabels[value];\n\t\t};\n\n\t\t//---------------------------------------\n\t\t// Periods\n\t\t//---------------------------------------\n\t\tvar periods = [], now = moment().date( 1 );\n\t\tfor ( var i = 0; i < 12; i++ ) {\n\t\t\tperiods.push( now.clone() );\n\t\t\tnow.subtract( 1, 'M' );\n\t\t}\n\t\t$scope.periods = periods;\n\t\t$scope.current.period = periods[0];\n\n\t\t$scope.prevPeriod = function () {\n\t\t\tvar index = $scope.periods.indexOf( $scope.current.period );\n\t\t\tindex = ( ( index + 1 ) >= $scope.periods.length ) ? 0 : index + 1;\n\t\t\t$scope.current.period = $scope.periods[index];\n\t\t};\n\n\t\t$scope.nextPeriod = function () {\n\t\t\tvar index = $scope.periods.indexOf( $scope.current.period );\n\t\t\tindex = ( ( index - 1 ) < 0 ) ? $scope.periods.length - 1 : index - 1;\n\t\t\t$scope.current.period = $scope.periods[index];\n\t\t};\n\n\t\t//---------------------------------------\n\t\t// Session\n\t\t//---------------------------------------\n\n\t\t$scope.logout = function () {\n\t\t\tSession.logout().then( function () {\n\t\t\t\twindow.location = Settings.api.logout;\n\t\t\t} );\n\t\t};\n\n\t\t$scope.invalidateSession = function () {\n\t\t\tSession.logout();\n\t\t};\n\n\t\t$scope.joinMinistry = function ( allowClose ) {\n\t\t\tallowClose = typeof allowClose !== 'undefined' ? allowClose : true;\n\t\t\tvar instance = $modal.open( {\n\t\t\t\ttemplateUrl: 'partials/join-ministry.html',\n\t\t\t\tcontroller:  'JoinMinistryCtrl',\n\t\t\t\tkeyboard:    allowClose,\n\t\t\t\tbackdrop:    allowClose ? true : 'static',\n\t\t\t\tresolve:     {\n\t\t\t\t\t'ministries': function () {\n\t\t\t\t\t\treturn Ministries.getMinistries().$promise;\n\t\t\t\t\t},\n\t\t\t\t\t'allowClose': function () {\n\t\t\t\t\t\treturn allowClose;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tinstance.result.then( function ( ministry ) {\n\t\t\t\tAssignments.addTeamMember( {\n\t\t\t\t\tusername:    $scope.current.user.cas_username,\n\t\t\t\t\tministry_id: ministry.ministry_id,\n\t\t\t\t\tteam_role:   'self_assigned'\n\t\t\t\t}, function ( assignment ) {\n\t\t\t\t\tif ( typeof $scope.current.assignments === 'undefined' ) {\n\t\t\t\t\t\t// If assignments is empty, setting the array will also set the current assignment\n\t\t\t\t\t\t$scope.current.assignments = [assignment];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Add new assignment\n\t\t\t\t\t\t$scope.current.assignments.push( assignment );\n\n\t\t\t\t\t\t// Set new assignment as current\n\t\t\t\t\t\t$scope.current.assignment = assignment;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t};\n\n\t\t$scope.onError = function ( response, code ) {\n\t\t\tif ( code == 401 && response.hasOwnProperty( 'reason' ) ) {\n\t\t\t\tif ( response.reason == 'SESSION_INVALID' ) {\n\t\t\t\t\twindow.location = window.location.pathname;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$scope.error = response.reason;\n\t\t};\n\n\t\t$scope.mobileApps = Settings.mobileApps;\n\t}\n\n\tangular.module( 'gma.controllers' ).controller( 'GMACtrl', GMACtrl );\n})();\n",null,"(function () {\n\t'use strict';\n\n\tfunction JoinMinistryCtrl( $scope, $modalInstance, ministries, allowClose ) {\n\t\t$scope.ministries = ministries;\n\t\t$scope.allowClose = allowClose;\n\n\t\t$scope.join = function () {\n\t\t\t$modalInstance.close( $scope.ministry );\n\t\t};\n\n\t\t$scope.cancel = function () {\n\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers' ).controller( 'JoinMinistryCtrl', JoinMinistryCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma.directives' )\n\t\t.directive( 'gmaTrend', [function () {\n\t\t\treturn {\n\t\t\t\trestrict: 'A',\n\t\t\t\trequire:  'ngModel',\n\t\t\t\tlink:     function ( $scope, $element, $attrs, ngModel ) {\n\t\t\t\t\tif ( !ngModel ) return;\n\t\t\t\t\tvar chart = new google.visualization.LineChart( $element.get( 0 ) );\n\n\t\t\t\t\tngModel.$render = function () {\n\t\t\t\t\t\tchart.draw( ngModel.$viewValue, {width: 550, height: 200, chartArea: {width: '65%'}} );\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.$on( '$destroy', function () {\n\t\t\t\t\t\tchart = null;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}] )\n})();\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma.filters' )\n\t\t.filter( 'roleFilter', [function () {\n\t\t\treturn function ( items, role ) {\n\t\t\t\tvar filtered = [];\n\t\t\t\tangular.forEach( items, function ( item ) {\n\t\t\t\t\tif ( typeof role === 'string' && role == item.team_role ) {\n\t\t\t\t\t\tfiltered.push( item );\n\t\t\t\t\t} else if ( typeof role === 'object' && _.contains( role, item.team_role ) ) {\n\t\t\t\t\t\tfiltered.push( item );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn filtered;\n\t\t\t};\n\t\t}] );\n})();\n","(function () {\n\t'use strict';\n\t\n\tfunction AdminCtrl( $scope, $modal, $filter, Assignments, Ministries, MeasurementTypes ) {\n\t\t$scope.current.isLoaded = false;\n\n\t\t$scope.roles = [\n\t\t\t{value: \"leader\", text: 'Leader'},\n\t\t\t{value: \"inherited_leader\", text: \"Leader (inherited)\"},\n\t\t\t{value: \"member\", text: 'Member'},\n\t\t\t{value: \"blocked\", text: 'Blocked'},\n\t\t\t{value: \"self_assigned\", text: 'Self Assigned'}\n\t\t];\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function ( ministry_id ) {\n\t\t\tif ( typeof ministry_id === 'undefined' ) return;\n\t\t\t$scope.ministry = Ministries.getMinistry( {ministry_id: ministry_id}, function () {\n\t\t\t\t$scope.current.isLoaded = true;\n\n\t\t\t\t$scope.measurementTypes = [];\n\t\t\t\tMeasurementTypes.getMeasurementTypes().$promise.then( function ( data ) {\n\t\t\t\t\tangular.forEach( data, function ( type ) {\n\t\t\t\t\t\tif ( type.is_custom && _.contains( $scope.ministry.lmi_show, type.perm_link_stub ) ) {\n\t\t\t\t\t\t\ttype.visible = true;\n\t\t\t\t\t\t} else if ( !type.is_custom && !_.contains( $scope.ministry.lmi_hide, type.perm_link_stub ) ) {\n\t\t\t\t\t\t\ttype.visible = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype.visible = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.measurementTypes.push( type );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\n\t\t$scope.saveRole = function ( assignment ) {\n\t\t\tAssignments.saveAssignment( {\n\t\t\t\tassignment_id: assignment.assignment_id\n\t\t\t}, {team_role: assignment.team_role} );\n\t\t};\n\n\t\t$scope.ableToChangeParentMinistry = function ( parentToFind ) {\n\t\t\tvar availableMinIds = _.pluck( $filter( 'roleFilter' )( $scope.current.ministries, ['leader', 'inherited_leader'] ), 'ministry_id' )\n\t\t\treturn _.contains( availableMinIds, parentToFind );\n\t\t};\n\n\t\t$scope.addTeamMember = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-team-member.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance, roles ) {\n\t\t\t\t\t$scope.roles = roles;\n\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMember );\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tresolve:     {\n\t\t\t\t\t'roles': function () {\n\t\t\t\t\t\treturn $scope.roles;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMember ) {\n\t\t\t\t\tnewMember.ministry_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\tAssignments.addTeamMember( newMember, function () {\n\t\t\t\t\t\t$scope.ministry = Ministries.getMinistry( {ministry_id: $scope.current.assignment.ministry_id} );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.addSubMinistry = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-sub-ministry.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance ) {\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMinistry );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMinistry ) {\n\t\t\t\t\tnewMinistry.parent_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\tMinistries.createMinistry( newMinistry, function () {\n\t\t\t\t\t\tif ( angular.isDefined( $scope.current.assignment.sub_ministries ) ) {\n\t\t\t\t\t\t\t$scope.current.assignment.sub_ministries.push( newMinistry );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.current.assignment.sub_ministries = [newMinistry];\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.addMeasurement = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-measurement-type.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance ) {\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMeasurement );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMeasurement ) {\n\t\t\t\t\tnewMeasurement.perm_link_stub = 'custom_' + newMeasurement.perm_link_stub;\n\t\t\t\t\tMeasurementTypes.addMeasurementType( newMeasurement, function () {\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.saveDetails = function () {\n\t\t\tvar ministry = {\n\t\t\t\tministry_id: $scope.ministry.ministry_id,\n\t\t\t\tmin_code:    $scope.ministry.min_code,\n\t\t\t\tname:        $scope.ministry.name,\n\t\t\t\thas_ds:      $scope.ministry.has_ds,\n\t\t\t\thas_gcm:     $scope.ministry.has_gcm,\n\t\t\t\thas_llm:     $scope.ministry.has_llm,\n\t\t\t\thas_slm:     $scope.ministry.has_slm,\n\t\t\t\tprivate:     $scope.ministry.private,\n\t\t\t\tlmi_hide:    _.pluck( _.where( $scope.measurementTypes, {\n\t\t\t\t\tis_custom: false,\n\t\t\t\t\tvisible:   false\n\t\t\t\t} ), 'perm_link_stub' ),\n\t\t\t\tlmi_show:    _.pluck( _.where( $scope.measurementTypes, {\n\t\t\t\t\tis_custom: true,\n\t\t\t\t\tvisible:   true\n\t\t\t\t} ), 'perm_link_stub' )\n\t\t\t};\n\t\t\tif ( $scope.ministry.hasOwnProperty( 'parent_id' ) && typeof $scope.ministry.parent_id === \"string\" ) {\n\t\t\t\tministry.parent_id = $scope.ministry.parent_id;\n\t\t\t}\n\t\t\t$scope.saveDetailsResource = Ministries.updateMinistry( ministry,\n\t\t\t\tfunction () {\n\t\t\t\t\t$scope.saveDetailsAlert = {\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmsg:  'Your changes have been saved.'\n\t\t\t\t\t};\n\t\t\t\t}, function ( response ) {\n\t\t\t\t\t$scope.saveDetailsAlert = {\n\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\tmsg:  response.Message || 'An error occurred while saving.'\n\t\t\t\t\t};\n\t\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.admin' ).controller( 'AdminCtrl', AdminCtrl );\n}());\n","(function ( $ ) {\n\t'use strict';\n\n\tfunction MapCtrl( $scope, $document, $compile, Trainings, Churches, Ministries, Settings ) {\n\t\t$scope.current.isLoaded = false;\n\t\t$scope.versionUrl = Settings.versionUrl;\n\t\t$scope.show_target_point = true;\n\t\t$scope.show_group = true;\n\t\t$scope.show_church = true;\n\t\t$scope.show_mult_church = true;\n\t\t$scope.show_lines = true;\n\t\t$scope.show_lines = true;\n\t\t$scope.show_jf = true;\n\t\t$scope.map_filter = 'min_only';\n\t\t$scope.icon_add_mode = false;\n\t\t$scope.show_all = \"year\";\n\t\t$scope.show_tree = false;\n\t\t$scope.new_church = {};\n\t\t$scope.edit_church = {};\n\t\t$scope.SetParentMode = false;\n\t\t$scope.church_lines = [];\n\t\t$scope.churches = [];\n\t\t$scope.trainings = [];\n\t\t$scope.allChurches = [];\n\t\t$scope.training_types = [\n\t\t\t{value: \"MC2\", text: 'MC2'},\n\t\t\t{value: \"T4T\", text: 'T4T'},\n\t\t\t{value: \"CPMI\", text: 'CPMI'},\n\t\t\t{value: \"\", text: 'Other'}\n\t\t];\n\t\t$scope.show = {\n\t\t\ttraining: true\n\t\t};\n\t\t$scope.mapOptions = {\n\t\t\tzoom:               3,\n\t\t\tcenter:             new google.maps.LatLng( 0, 0 ),\n\t\t\tpanControl:         true,\n\t\t\tzoomControl:        true,\n\t\t\tmapTypeControl:     true,\n\t\t\tstreetViewControl:  false,\n\t\t\toverviewMapControl: false\n\t\t};\n\t\tsetTimeout( initialize, 0 );\n\n\t\tfunction initialize() {\n\t\t\t$scope.map = new google.maps.Map( document.getElementById( 'map_canvas' ), $scope.mapOptions );\n\t\t\t$scope.map.setOptions( {draggableCursor: ''} );\n\n\t\t\tgoogle.maps.event.addListener( $scope.map, \"idle\", function () {\n\t\t\t\t$scope.current.isLoaded = true;\n\t\t\t\tvar bounds = $scope.map.getBounds(),\n\t\t\t\t\tne = bounds.getNorthEast(),\n\t\t\t\t\tsw = bounds.getSouthWest();\n\n\t\t\t\tif ( ne.lat() == sw.lat() && ne.lng() == sw.lng() ) {\n\t\t\t\t\t// Trigger a resize if bounds have 0 area\n\t\t\t\t\tgoogle.maps.event.trigger( $scope.map, 'resize' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$scope.loadChurches();\n\t\t\t\t}\n\t\t\t} );\n\t\t\t$scope.map.markers = [];\n\t\t\t$scope.church = {name: \"\"};\n\n\t\t\t$scope.churchWindow = new google.maps.InfoWindow();\n\t\t\t$scope.churchWindowContent = $compile( '<div id=\"church_window_content\" ng-include=\"\\'partials/map/edit-church.html\\'\"></div>' )( $scope )\n\t\t\t$scope.churchWindow.setOptions( {maxWidth: 300} );\n\t\t\t$scope.trainingWindow = new google.maps.InfoWindow();\n\t\t\t$scope.trainingWindowContent = $compile( '<div id=\"training_window_content\" ng-include=\"\\'partials/map/edit-training.html\\'\"></div>' )( $scope )\n\t\t\t$scope.trainingWindow.setOptions( {maxWidth: 400} );\n\n\t\t\t$scope.newChurchWindow = new google.maps.InfoWindow();\n\t\t\tgoogle.maps.event.addListener( $scope.newChurchWindow, 'closeclick', function () {\n\t\t\t\t$scope.cancelAddChurch();\n\t\t\t} );\n\t\t\t$scope.newChurchWindowContent = $compile( '<div id=\"new_church_window_content\" ng-include=\"\\'partials/map/new-church.html\\'\"></div>' )( $scope );\n\n\n\t\t\t$scope.newTrainingWindow = new google.maps.InfoWindow();\n\t\t\tgoogle.maps.event.addListener( $scope.newTrainingWindow, 'closeclick', function () {\n\t\t\t\t$scope.cancelAddChurch();\n\t\t\t} );\n\t\t\t$scope.newTrainingContent = $compile( '<div id=\"new_training_window_content\" ng-include=\"\\'partials/map/new-training.html\\'\"></div>' )( $scope );\n\n\t\t\t$scope.map.church_lines = [];\n\t\t\t$scope.map.icons = {};\n\t\t\t$scope.map.icons.church = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/church.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 58 )\n\t\t\t);\n\t\t\t$scope.map.icons.cluster = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/cluster.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 31 )\n\t\t\t);\n\t\t\t$scope.map.icons.multiplying = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/multiplying.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 53 )\n\t\t\t);\n\t\t\t$scope.map.icons.group = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/group.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 55 )\n\t\t\t);\n\t\t\t$scope.map.icons.targetpoint = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/target.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 32, 56 )\n\t\t\t);\n\t\t\t$scope.map.icons.training = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/training.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 43 )\n\t\t\t);\n\n\t\t\t$scope.map.side = document.getElementById( 'side' );\n\t\t\t$scope.map.side.index = -1;\n\t\t\t$scope.map.side.style.display = 'block';\n\t\t\t$scope.map.search = document.getElementById( 'map_controls' );\n\t\t\t$scope.map.search.index = 3;\n\t\t\t$scope.map.search.style.display = 'block';\n\n\t\t\t$scope.map.controls[google.maps.ControlPosition.TOP_RIGHT].push( $scope.map.side );\n\t\t\t$scope.map.controls[google.maps.ControlPosition.TOP_LEFT].push( $scope.map.search );\n\n\t\t\t$scope.autocomplete = new google.maps.places.Autocomplete( document.getElementById( 'searchBox' ) );\n\t\t\t$scope.autocomplete.bindTo( 'bounds', $scope.map );\n\n\t\t\tgoogle.maps.event.addListener( $scope.autocomplete, 'place_changed', function () {\n\t\t\t\tvar place = $scope.autocomplete.getPlace();\n\t\t\t\tif ( !place.geometry ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( place.geometry.viewport ) {\n\t\t\t\t\t$scope.map.fitBounds( place.geometry.viewport );\n\t\t\t\t} else {\n\t\t\t\t\t$scope.map.setCenter( place.geometry.location );\n\t\t\t\t\t$scope.map.setZoom( 17 );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( $scope.current.assignment )$scope.load_training_markers();\n\n\t\t\t$scope.$watch( 'current.assignment', function ( a, oldVal ) {\n\t\t\t\tif ( typeof a !== 'undefined' ) {\n\n\t\t\t\t\tif ( a && a.hasOwnProperty( 'location' ) ) {\n\t\t\t\t\t\t$scope.map.setCenter( new google.maps.LatLng( a.location.latitude, a.location.longitude ) );\n\t\t\t\t\t}\n\t\t\t\t\tif ( a && a.hasOwnProperty( 'location_zoom' ) ) {\n\t\t\t\t\t\t$scope.map.setZoom( parseInt( a.location_zoom ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, true );\n\t\t}\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function ( ministry_id ) {\n\t\t\tif ( typeof ministry_id === 'undefined' ) {\n\t\t\t\t$scope.allChurches = [];\n\t\t\t\t$scope.trainings = [];\n\t\t\t} else {\n\t\t\t\t$scope.loadAllChurches();\n\t\t\t\t$scope.loadTrainings();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.$watch( 'map_filter', function ( filter ) {\n\t\t\t$scope.loadAllChurches();\n\t\t\t$scope.loadTrainings();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function ( mcc ) {\n\t\t\tif ( typeof mcc === 'undefined' ) {\n\t\t\t\t$scope.trainings = [];\n\t\t\t} else {\n\t\t\t\t$scope.loadTrainings();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.loadAllChurches = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' ) return;\n\t\t\tvar params = {\n\t\t\t\tministry_id: $scope.current.assignment.ministry_id\n\t\t\t};\n\t\t\tif ( $scope.map_filter === 'everything' ) {\n\t\t\t\tparams['show_all'] = 'true';\n\t\t\t} else if ( $scope.map_filter === 'tree' ) params['show_tree'] = 'true';\n\n\t\t\t$scope.allChurches = Churches.getChurches( params );\n\t\t}, 500 );\n\n\t\t$scope.loadTrainings = _.debounce( function () {\n\t\t\t// Member, Leader and Inherited can view trainings\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && $scope.current.hasRole( ['leader', 'inherited_leader'] ) ) {\n\t\t\t\tTrainings.getTrainings( $scope.current.sessionToken, $scope.current.assignment.ministry_id, $scope.current.mcc, $scope.show_all == \"all\", $scope.show_tree ).then( function ( trainings ) {\n\t\t\t\t\t$scope.trainings = trainings;\n\t\t\t\t}, $scope.onError );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$scope.trainings = [];\n\t\t\t}\n\t\t}, 500 );\n\n\t\t$scope.loadChurches = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' ) return;\n\n\t\t\tconsole.log( 'loading churches' );\n\t\t\tvar bounds = $scope.map.getBounds(),\n\t\t\t\tne = bounds.getNorthEast(),\n\t\t\t\tsw = bounds.getSouthWest(),\n\t\t\t\tparams = {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tlat_min:     sw.lat(),\n\t\t\t\t\tlat_max:     ne.lat(),\n\t\t\t\t\tlong_min:    sw.lng(),\n\t\t\t\t\tlong_max:    ne.lng()\n\t\t\t\t};\n\t\t\tif ( !$scope.show_target_point ) params['hide_target_point'] = 'true';\n\t\t\tif ( !$scope.show_group ) params['hide_group'] = 'true';\n\t\t\tif ( !$scope.show_church ) params['hide_church'] = 'true';\n\t\t\tif ( !$scope.show_mult_church ) params['hide_mult_church'] = 'true';\n\t\t\tif ( $scope.map_filter === 'everything' ) {\n\t\t\t\tparams['show_all'] = 'true';\n\t\t\t} else if ( $scope.map_filter === 'tree' ) params['show_tree'] = 'true';\n\n\t\t\t// Disable clustering at Zoom 14 and higher\n\t\t\tif ( $scope.map.getZoom() >= 14 ) params['should_cluster'] = 'false';\n\n\t\t\tChurches.getChurches( params ).$promise.then( $scope.onGetChurches, $scope.onError );\n\t\t}, 500 );\n\n\t\t$scope.removeLines = function () {\n\t\t\tangular.forEach( $scope.map.church_lines, function ( l ) {\n\t\t\t\tl.setMap( null );\n\t\t\t} );\n\t\t};\n\n\t\t$scope.removeJF = function () {\n\t\t\t$( '.jf_label' ).remove();\n\t\t};\n\n\t\t$scope.$watch( 'show_lines', function () {\n\t\t\tif ( typeof $scope.map !== 'undefined' ) {\n\t\t\t\tangular.forEach( $scope.map.church_lines, function ( line ) {\n\t\t\t\t\tline.setVisible( $scope.show_lines );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t$scope.$watch( 'show_jf', function () {\n\t\t\tif ( $scope.show_jf ) {\n\t\t\t\t$( '.jf_label' ).show();\n\t\t\t} else {\n\t\t\t\t$( '.jf_label' ).hide();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.onAddChurch = function () {\n\t\t\t$scope.loadChurches();\n\t\t};\n\n\t\t$scope.addChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\n\t\t\t\tif ( m.id == -1 ) {\n\t\t\t\t\t$scope.new_church.ministry_id = $scope.current.assignment.ministry_id;\n\n\t\t\t\t\t$scope.new_church.latitude = m.getPosition().lat();\n\t\t\t\t\t$scope.new_church.longitude = m.getPosition().lng();\n\t\t\t\t\tconsole.log( $scope.new_church );\n\t\t\t\t\tChurches.addChurch( $scope.new_church ).$promise.then( $scope.onAddChurch, $scope.onError );\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.addTraining = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\n\t\t\t\tif ( m.id == -2 ) {\n\t\t\t\t\t$scope.new_training.ministry_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\t$scope.new_training.latitude = m.getPosition().lat();\n\t\t\t\t\t$scope.new_training.longitude = m.getPosition().lng();\n\t\t\t\t\t$scope.new_training.mcc = $scope.current.mcc;\n\t\t\t\t\tTrainings.addTraining( $scope.current.sessionToken, $scope.new_training ).then(\n\t\t\t\t\t\t$scope.loadTrainings,\n\t\t\t\t\t\t$scope.onError\n\t\t\t\t\t);\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.cancelAddChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id < 0 ) {\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t\t$scope.new_church = {};\n\t\t\t$scope.new_training = {};\n\t\t};\n\n\t\t$scope.onAddTraining = function () {\n\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\treturn c.id < 0\n\t\t\t\t} ).length == 0 ) {\n\t\t\t\t$scope.new_training = {};\n\n\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\tposition:          $scope.map.getCenter(),\n\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\ttitle:             \"new_training\",\n\t\t\t\t\tid:                -2,\n\t\t\t\t\tcluster_count:     1,\n\t\t\t\t\tzIndex:            9999,\n\t\t\t\t\ticon:              $scope.map.icons.training,\n\t\t\t\t\tlabelContent:      'MOVE ME!',\n\t\t\t\t\tlabelAnchor:       new google.maps.Point( 50, -5 ),\n\t\t\t\t\tlabelClass:        \"labelMoveMarker\", // the CSS class for the label\n\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\tdraggable:         true\n\t\t\t\t} );\n\t\t\t\t$scope.map.new_training_marker = marker;\n\t\t\t\tmarker.setAnimation( google.maps.Animation.BOUNCE );\n\n\t\t\t\tif ( !$scope.newTrainingWindow.getContent() ) {\n\t\t\t\t\t$scope.newTrainingWindow.setContent( $scope.newTrainingContent[0].nextSibling );\n\t\t\t\t}\n\t\t\t\t$scope.newTrainingWindow.open( $scope.map, marker );\n\n\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t}\n\t\t};\n\n\t\t$scope.onSaveChurch = function ( response ) {\n\t\t\t$scope.loadChurches();\n\t\t};\n\n\t\t$scope.onAddIcon = function () {\n\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\treturn c.id < 0\n\t\t\t\t} ).length == 0 ) {\n\t\t\t\t$scope.new_church = {security: 2};\n\n\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\tposition:          $scope.map.getCenter(),\n\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\ttitle:             \"new church\",\n\t\t\t\t\tid:                -1,\n\t\t\t\t\tcluster_count:     1,\n\t\t\t\t\tzIndex:            9999,\n\t\t\t\t\ticon:              $scope.map.icons.targetpoint,\n\t\t\t\t\tlabelContent:      'Move me!',\n\t\t\t\t\tlabelAnchor:       new google.maps.Point( 50, -20 ),\n\t\t\t\t\tlabelClass:        \"labelMoveMarker\", // the CSS class for the label\n\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\tdraggable:         true\n\t\t\t\t} );\n\t\t\t\t$scope.map.new_marker = marker;\n\t\t\t\tmarker.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t//$scope.$apply();\n\t\t\t\tif ( !$scope.newChurchWindow.getContent() ) {\n\t\t\t\t\t$scope.newChurchWindow.setContent( $scope.newChurchWindowContent[0].nextSibling );\n\t\t\t\t}\n\t\t\t\t$scope.newChurchWindow.open( $scope.map, marker );\n\n\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t}\n\t\t};\n\n\t\t$scope.SetParent = function () {\n\t\t\t$scope.SetParentMode = true;\n\t\t\t$scope.churchWindow.close();\n\t\t\t$scope.new_parentLine = new google.maps.Polyline( {\n\t\t\t\tpath:          [new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude ), new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )],\n\t\t\t\tgeodesic:      true,\n\t\t\t\tstrokeColor:   '#777',\n\t\t\t\tstrokeOpacity: 1.0,\n\t\t\t\tstrokeWeight:  2,\n\t\t\t\ticons:         [{\n\t\t\t\t\t\t\t\t\ticon:   {\n\t\t\t\t\t\t\t\t\t\tpath:         google.maps.SymbolPath.FORWARD_OPEN_ARROW,\n\t\t\t\t\t\t\t\t\t\tstrokeWeight: 1.5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\toffset: '12px',\n\t\t\t\t\t\t\t\t\trepeat: '25px'\n\t\t\t\t\t\t\t\t}]\n\t\t\t} );\n\n\t\t\t$scope.move_event = google.maps.event.addListener( $scope.map, 'mousemove', function ( e ) {\n\t\t\t\t$scope.new_parentLine.setPath( [e.latLng, new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )] );\n\t\t\t} );\n\n\t\t\t$scope.new_parentLine.setMap( $scope.map );\n\t\t\t//   $scope.map.church_lines.push(parentLine);\n\t\t};\n\n\t\t$scope.MoveChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id === $scope.edit_church.id ) {\n\t\t\t\t\tm.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t\tm.setDraggable( true );\n\t\t\t\t\t$scope.churchWindow.close();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.MoveTraining = function () {\n\t\t\tvar id = $scope.edit_training.hasOwnProperty( 'Id' ) ? $scope.edit_training.Id : $scope.edit_training.id;\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id === 't' + id ) {\n\t\t\t\t\tm.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t\tm.setDraggable( true );\n\t\t\t\t\t$scope.trainingWindow.close();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.SaveChurch = function () {\n\t\t\tChurches.saveChurch( $scope.edit_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.SaveTraining = function () {\n\t\t\tTrainings.updateTraining( $scope.current.sessionToken, $scope.edit_training ).then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.$watch( 'trainings', function () {\n\t\t\tif ( $scope.map ) {\n\t\t\t\t$scope.load_training_markers();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.load_training_markers = function () {\n\t\t\tif ( typeof $scope.map === 'undefined' ) return;\n\t\t\tvar toDelete = [];\n\t\t\tangular.forEach( $scope.map.markers, function ( training ) {\n\t\t\t\tif ( training.id[0] == 't' && $scope.trainings.filter( function ( t ) {\n\t\t\t\t\t\treturn t.id == training.id\n\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\ttoDelete.push( training );\n\t\t\t\t}\n\t\t\t\telse if ( training.id[0] == 't' && !$scope.show.training ) toDelete.push( training );\n\t\t\t} );\n\n\t\t\tangular.forEach( toDelete, function ( training ) {\n\t\t\t\ttraining.setMap( null );\n\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( training ), 1 );\n\t\t\t\tremovedObject = null;\n\t\t\t} );\n\n\t\t\tif ( $scope.show.training ) {\n\t\t\t\tangular.forEach( $scope.trainings, function ( training ) {\n\t\t\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\t\t\treturn c.id === 't' + training.id\n\t\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\t\tif ( training.longitude ) {\n\t\t\t\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\t\t\t\tposition:          new google.maps.LatLng( training.latitude, training.longitude ),\n\t\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\t\tid:                't' + ( training.hasOwnProperty( 'Id' ) ? training.Id : training.id ),\n\t\t\t\t\t\t\t\ttitle:             training.type,\n\t\t\t\t\t\t\t\ticon:              $scope.map.icons.training,\n\t\t\t\t\t\t\t\tlabelContent:      '', //training.type + '<span class=\"map-trained-count\">' + training.leaders_trained + '</span>',\n\t\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 0 ),\n\t\t\t\t\t\t\t\tlabelClass:        \"labelMarker\", // the CSS class for the label\n\t\t\t\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\t\t\t\tdraggable:         false\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tif ( !$scope.trainingWindow.getContent() ) {\n\t\t\t\t\t\t\t\t$scope.trainingWindow.setContent( $scope.trainingWindowContent[0].nextSibling );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgoogle.maps.event.addListener( marker, 'click', (function ( training, marker ) {\n\t\t\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\t\t\t//$scope.church = marker;\n\t\t\t\t\t\t\t\t\t$scope.edit_training = training;\n\t\t\t\t\t\t\t\t\t$scope.edit_training.editable = (($scope.current.assignment.team_role === 'leader' || $scope.current.assignment.team_role === 'inherited_leader') && training.ministry_id === $scope.current.assignment.ministry_id);\n\n\t\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.close();\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.setOptions( {maxWidth: 400} );\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.open( $scope.map, marker );\n\t\t\t\t\t\t\t\t\t// $scope.churchWindow.open($scope.map, marker);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}( training, marker, $scope )) );\n\n\t\t\t\t\t\t\tgoogle.maps.event.addListener( marker, 'dragend', (function () {\n\t\t\t\t\t\t\t\tconsole.log( marker );\n\t\t\t\t\t\t\t\ttraining.latitude = marker.getPosition().lat();\n\t\t\t\t\t\t\t\ttraining.longitude = marker.getPosition().lng();\n\t\t\t\t\t\t\t\tTrainings.updateTraining( $scope.current.sessionToken, training ).then( $scope.onSaveChurch, $scope.onError );\n\t\t\t\t\t\t\t\tmarker.setAnimation( null );\n\t\t\t\t\t\t\t\tmarker.setDraggable( false );\n\t\t\t\t\t\t\t}) );\n\n\t\t\t\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch( 'show.training', $scope.load_training_markers, true );\n\n\t\t$scope.onGetChurches = function ( response ) {\n\t\t\t$scope.churches = response;\n\t\t\tconsole.log( 'got churches' );\n\t\t\t$scope.removeLines();\n\t\t\t$scope.removeJF();\n\t\t\t// $scope.map.markers = [];\n\n\t\t\t// do more intelligent replace\n\t\t\t//remove elements that are not in the new one.\n\t\t\tvar toDelete = [];\n\n\t\t\tangular.forEach( $scope.map.markers, function ( church ) {\n\t\t\t\tif ( church.id > 0 ) {\n\t\t\t\t\tif ( response.filter( function ( c ) {\n\t\t\t\t\t\t\treturn c.id == church.id && c.cluster_count == 1\n\t\t\t\t\t\t} ).length == 0 || church.cluster_count > 1 ) {\n\t\t\t\t\t\ttoDelete.push( church );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tangular.forEach( toDelete, function ( church ) {\n\t\t\t\t//console.log(toDelete)\n\t\t\t\t//var church = $scope.map.markers.filter(function (c) { return c.id == toDelete[i] });\n\t\t\t\t//console.log(church.length);\n\t\t\t\tchurch.setMap( null );\n\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( church ), 1 );\n\n\t\t\t\tremovedObject = null;\n\t\t\t} );\n\n\n\t\t\tangular.forEach( $scope.churches, function ( church ) {\n\t\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\t\treturn c.id == church.id\n\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\tvar marker = {};\n\n\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\tvar churchIconToUse = {}\n\t\t\t\t\t\tif ( church.development == 5 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.multiplying;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 4 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 3 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 2 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.group;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 1 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.targetpoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmarker = new MarkerWithLabel( {\n\t\t\t\t\t\t\tposition:          new google.maps.LatLng( church.latitude, church.longitude ),\n\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\ttitle:             church.name,\n\t\t\t\t\t\t\tid:                church.id,\n\t\t\t\t\t\t\tcluster_count:     church.cluster_count,\n\t\t\t\t\t\t\ticon:              churchIconToUse,\n\t\t\t\t\t\t\tlabelContent:      church.name,\n\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 0 ),\n\t\t\t\t\t\t\tlabelClass:        \"labelMarker\", // the CSS class for the label\n\t\t\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\t\t\tdraggable:         false\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( church.jf_contrib > 0 ) church.jf = new $scope.jesusFilmSign( new google.maps.LatLng( church.latitude, church.longitude ), church.jf_contrib, church.development );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmarker = new MarkerWithLabel( {\n\t\t\t\t\t\t\tposition:          new google.maps.LatLng( church.latitude, church.longitude ),\n\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\tid:                church.id,\n\t\t\t\t\t\t\tcluster_count:     church.cluster_count,\n\t\t\t\t\t\t\ticon:              $scope.map.icons.cluster,\n\t\t\t\t\t\t\tlabelContent:      church.cluster_count.toString(),\n\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 15 ),\n\t\t\t\t\t\t\tlabelClass:        \"clusterMarker\", // the CSS class for the label\n\t\t\t\t\t\t\tlabelInBackground: false\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( church.jf_contrib > 0 ) church.jf = new $scope.jesusFilmSign( new google.maps.LatLng( church.latitude, church.longitude ), church.jf_contrib, 'cluster' );\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( !$scope.churchWindow.getContent() ) {\n\t\t\t\t\t\t$scope.churchWindow.setContent( $scope.churchWindowContent[0].nextSibling );\n\t\t\t\t\t}\n\n\t\t\t\t\tgoogle.maps.event.addListener( marker, 'click', (function ( church, marker ) {\n\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\tif ( $scope.SetParentMode ) {\n\t\t\t\t\t\t\t\tif ( church.cluster_count == 1 && church.id !== $scope.edit_church.id ) {\n\t\t\t\t\t\t\t\t\tgoogle.maps.event.removeListener( $scope.move_event );\n\t\t\t\t\t\t\t\t\t$scope.SetParentMode = false;\n\t\t\t\t\t\t\t\t\t$scope.new_parentLine.setPath( [new google.maps.LatLng( church.latitude, church.longitude ), new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )] );\n\t\t\t\t\t\t\t\t\t//update church's parent\n\t\t\t\t\t\t\t\t\tvar new_church = {};\n\t\t\t\t\t\t\t\t\tnew_church.id = $scope.edit_church.id;\n\t\t\t\t\t\t\t\t\tnew_church.parent_id = church.id;\n\t\t\t\t\t\t\t\t\t$scope.edit_church.parent_id = church.id;\n\t\t\t\t\t\t\t\t\tconsole.log( new_church );\n\t\t\t\t\t\t\t\t\tChurches.saveChurch( new_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//google.maps.event.addListener(marker, 'click', function () {\n\t\t\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\t\t\t//$scope.church = marker;\n\n\t\t\t\t\t\t\t\t$scope.edit_church = church;\n\t\t\t\t\t\t\t\t$scope.edit_church.editable = (($scope.current.assignment.team_role === 'leader' || $scope.current.assignment.team_role === 'inherited_leader') && church.ministry_id === $scope.current.assignment.ministry_id);\n\n\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t$scope.churchWindow.close();\n\t\t\t\t\t\t\t\t$scope.churchWindow.setOptions( {maxWidth: 300} );\n\t\t\t\t\t\t\t\t$scope.churchWindow.open( $scope.map, marker );\n\n\t\t\t\t\t\t\t\t// $scope.churchWindow.open($scope.map, marker);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t$scope.map.setCenter( marker.position );\n\t\t\t\t\t\t\t\t$scope.map.setZoom( $scope.map.getZoom() + 2 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}( church, marker, $scope )) );\n\n\t\t\t\t\tgoogle.maps.event.addListener( marker, 'dragend', (function ( church, marker ) {\n\t\t\t\t\t\treturn function () {\n\n\t\t\t\t\t\t\t//google.maps.event.addListener(marker, 'click', function () {\n\t\t\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\t\t\tvar new_church = {};\n\t\t\t\t\t\t\t\tnew_church.id = church.id;\n\t\t\t\t\t\t\t\tnew_church.latitude = marker.getPosition().lat();\n\t\t\t\t\t\t\t\tnew_church.longitude = marker.getPosition().lng();\n\t\t\t\t\t\t\t\tchurch.latitude = new_church.latitude;\n\t\t\t\t\t\t\t\tchurch.longitude = new_church.longitude;\n\t\t\t\t\t\t\t\tChurches.saveChurch( new_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\n\t\t\t\t\t\t\t\tmarker.setAnimation( null );\n\t\t\t\t\t\t\t\tmarker.setDraggable( false );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}( church, marker )) );\n\t\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t\t}\n\n\n\t\t\t\t//now create the parent lines\n\t\t\t\tangular.forEach( church.parents, function ( p ) {\n\t\t\t\t\tvar par = $scope.churches.filter( function ( c ) {\n\t\t\t\t\t\treturn c.id == p\n\t\t\t\t\t} );\n\t\t\t\t\tif ( par.length > 0 ) {\n\t\t\t\t\t\tvar parentLine = new google.maps.Polyline( {\n\t\t\t\t\t\t\tpath:          [new google.maps.LatLng( par[0].latitude, par[0].longitude ), new google.maps.LatLng( church.latitude, church.longitude )],\n\t\t\t\t\t\t\tgeodesic:      true,\n\t\t\t\t\t\t\tstrokeColor:   '#777',\n\t\t\t\t\t\t\tstrokeOpacity: 1.0,\n\t\t\t\t\t\t\tstrokeWeight:  2,\n\t\t\t\t\t\t\ticons:         [{\n\t\t\t\t\t\t\t\t\t\t\t\ticon:   {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpath:         google.maps.SymbolPath.FORWARD_OPEN_ARROW,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWeight: 1.5\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\toffset: '12px',\n\t\t\t\t\t\t\t\t\t\t\t\trepeat: '25px'\n\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tparentLine.setMap( $scope.map );\n\t\t\t\t\t\t$scope.map.church_lines.push( parentLine );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\n\t\t\t} );\n\n\n\t\t};\n\n\n\t\t$scope.jesusFilmSign = function ( coordinates, n, type ) {\n\t\t\tthis.div_ = null;\n\t\t\tthis.setMap( $scope.map );\n\t\t\tif ( n == 1 ) n = \"JF\";\n\n\t\t\t// onADD\n\t\t\tthis.onAdd = function () {\n\t\t\t\tvar div = document.createElement( 'div' );\n\t\t\t\tdiv.className = 'jf_label';\n\t\t\t\tdiv.innerHTML = n;\n\t\t\t\tthis.div_ = div;\n\t\t\t\tvar panes = this.getPanes();\n\t\t\t\tpanes.overlayMouseTarget.appendChild( div );\n\t\t\t};\n\n\t\t\t// draw\n\t\t\tthis.draw = function () {\n\t\t\t\tvar div = this.div_;\n\t\t\t\tvar overlayProjection = this.getProjection();\n\t\t\t\tvar position = overlayProjection.fromLatLngToDivPixel( coordinates );\n\n\t\t\t\t// displacement of sign\n\t\t\t\tvar x;\n\t\t\t\tvar y;\n\n\t\t\t\tif ( type == 'cluster' ) {\n\t\t\t\t\tx = -20;\n\t\t\t\t\ty = 8;\n\t\t\t\t}\n\n\t\t\t\telse if ( type >= 0 && type <= 1 ) {\n\t\t\t\t\tx = -23;\n\t\t\t\t\ty = -12;\n\t\t\t\t}\n\n\t\t\t\telse if ( type == 2 ) {\n\t\t\t\t\tx = -22;\n\t\t\t\t\ty = -13;\n\t\t\t\t}\n\n\t\t\t\telse if ( type >= 3 ) {\n\t\t\t\t\tx = -20;\n\t\t\t\t\ty = -13;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\n\t\t\t\tdiv.style.left = position.x + x + \"px\";\n\t\t\t\tdiv.style.top = position.y + y + \"px\";\n\t\t\t};\n\n\t\t\tthis.onRemove = function () {\n\t\t\t\tthis.div_.parentNode.removeChild( $scope.div_ );\n\t\t\t\tthis.div_ = null;\n\t\t\t}\n\t\t};\n\t\t$scope.jesusFilmSign.prototype = new google.maps.OverlayView();\n\n\t\t$scope.setDefaultView = function () {\n\t\t\tvar center = $scope.map.getCenter(),\n\t\t\t\tzoom = $scope.map.getZoom();\n\n\t\t\t// Update current assignment location/zoom\n\t\t\t$scope.current.assignment.location = {\n\t\t\t\tlatitude:  center.lat(),\n\t\t\t\tlongitude: center.lng()\n\t\t\t};\n\t\t\t$scope.current.assignment.location_zoom = zoom;\n\n\t\t\t// Save changes to API\n\t\t\tMinistries.updateMinistry( {\n\t\t\t\tministry_id:   $scope.current.assignment.ministry_id,\n\t\t\t\tmin_code:      $scope.current.assignment.min_code.trim(),\n\t\t\t\tlocation:      $scope.current.assignment.location,\n\t\t\t\tlocation_zoom: $scope.current.assignment.location_zoom\n\t\t\t} );\n\t\t};\n\n\t\t$scope.addTrainingStage = function ( training ) {\n\t\t\tvar newPhase = {\n\t\t\t\tphase:            training.current_stage,\n\t\t\t\tdate:             training.insert.date,\n\t\t\t\tnumber_completed: training.insert.number_completed,\n\t\t\t\ttraining_id:      training.hasOwnProperty( 'Id' ) ? training.Id : training.id\n\n\t\t\t};\n\t\t\tTrainings.addTrainingCompletion( $scope.current.sessionToken, newPhase ).then( $scope.onAddTrainingCompletion, $scope.onError );\n\n\t\t\ttraining.insert.date = \"\";\n\t\t\ttraining.insert.number_completed = 0;\n\n\t\t};\n\n\t\t$scope.onAddTrainingCompletion = function ( response ) {\n\t\t\tresponse.editMode = false;\n\n\t\t\tangular.forEach( $scope.trainings, function ( training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\tif ( id == response.training_id ) {\n\t\t\t\t\ttraining.gcm_training_completions.push( response );\n\t\t\t\t\ttraining.current_stage = response.phase + 1;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.saveTrainingCompletion = function ( data ) {\n\t\t\tTrainings.updateTrainingCompletion( $scope.current.sessionToken, data ).then( $scope.onSaveTrainingCompletion, $scope.onError );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.map' ).controller( 'MapCtrl', MapCtrl );\n})( jQuery );\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementDetailsCtrl( $scope, $modalInstance, Measurements, Assignments, measurement, details, Settings ) {\n\t\t$scope.spinner = true;\n\t\t$scope.measurement = measurement;\n\t\t$scope.details = details;\n\t\t$scope.ns = Settings.gmaNamespace;\n\n\t\t$scope.details.$promise.then( function () {\n\t\t\t$scope.spinner = false;\n\n\t\t\tvar da = [['Period', 'Personal', 'Local Team', 'Total']];\n\t\t\tangular.forEach( details.total, function ( t, period ) {\n\t\t\t\tangular.forEach( details.local, function ( l, p ) {\n\t\t\t\t\tif ( p === period ) {\n\t\t\t\t\t\tangular.forEach( details.my_measurements, function ( m, p ) {\n\t\t\t\t\t\t\tif ( p === period ) da.push( [p, m, l, t] )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t$scope.trend = google.visualization.arrayToDataTable( da );\n\t\t} );\n\n\t\t$scope.filterSource = function ( items ) {\n\t\t\tvar result = {};\n\t\t\tangular.forEach( items, function ( value, key ) {\n\t\t\t\tif ( key != Settings.gmaNamespace && key != 'total' ) {\n\t\t\t\t\tresult[key] = value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn result;\n\t\t};\n\n\t\t$scope.save = function () {\n\t\t\t$scope.spinner = true;\n\t\t\tvar measurements = [];\n\t\t\tangular.forEach( ['local', 'person'], function ( type ) {\n\t\t\t\tif ( $scope.editForm.hasOwnProperty( type ) && $scope.editForm[type].$dirty && typeof $scope.editForm[type] !== 'undefined' ) {\n\t\t\t\t\tmeasurements.push( {\n\t\t\t\t\t\tperiod:              $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\t\tmcc:                 $scope.current.mcc + '_' + Settings.gmaNamespace,\n\t\t\t\t\t\tmeasurement_type_id: $scope.details.measurement_type_ids[type],\n\t\t\t\t\t\trelated_entity_id:   type == 'local'\n\t\t\t\t\t\t\t? $scope.current.assignment.ministry_id\n\t\t\t\t\t\t\t: $scope.current.assignment.id,\n\t\t\t\t\t\tvalue:               $scope.editForm[type].$modelValue\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( measurements.length > 0 ) {\n\t\t\t\tMeasurements.saveMeasurement( {}, measurements, function () {\n\t\t\t\t\t$modalInstance.close();\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t\t}\n\t\t};\n\n\t\t$scope.close = function () {\n\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t};\n\n\t\t$scope.approveSelfAssigned = function ( user, role ) {\n\t\t\tvar user = user;\n\t\t\tuser.state = 'pending';\n\t\t\tAssignments.saveAssignment( {\n\t\t\t\tassignment_id: user.assignment_id\n\t\t\t}, {team_role: role}, function () {\n\t\t\t\tif ( role == 'blocked' ) {\n\t\t\t\t\tuser.state = 'blocked';\n\t\t\t\t\tuser.blocked = true;\n\t\t\t\t} else {\n\t\t\t\t\tuser.success = true;\n\t\t\t\t\tuser.state = 'member';\n\t\t\t\t}\n\t\t\t}, function () {\n\t\t\t\tdelete user.state;\n\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.measurements' ).controller( 'MeasurementDetailsCtrl', MeasurementDetailsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementsCtrl( $scope, $document, $filter, $modal, Measurements, Settings ) {\n\t\t$scope.current.isLoaded = false;\n\t\t$scope.ns = Settings.gmaNamespace;\n\n\t\t// Debounced method to fetch Measurements at most once every 100 milliseconds\n\t\tvar getMeasurements = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && typeof $scope.current.period !== 'undefined' && typeof $scope.current.mcc !== 'undefined' ) {\n\t\t\t\t$scope.current.isLoaded = false;\n\t\t\t\t$scope.lmiForm.$setPristine();\n\t\t\t\t$scope.measurements = Measurements.getMeasurements( {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tmcc:         $scope.current.mcc,\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t}, function () {\n\t\t\t\t\t$scope.current.isLoaded = true;\n\t\t\t\t} );\n\t\t\t}\n\t\t}, 100 );\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.period', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.hasOther = function () {\n\t\t\treturn _.where( $scope.measurements, {section: 'other', column: 'other'} ).length > 0;\n\t\t};\n\n\t\t// Method used to save measurements for self_assigned role.\n\t\t$scope.save = function () {\n\t\t\tvar measurements = [];\n\t\t\tangular.forEach( $scope.measurements, function ( measurement ) {\n\t\t\t\tvar value = $scope.lmiForm[measurement.perm_link];\n\t\t\t\tif ( value.$dirty && value.$valid ) {\n\t\t\t\t\tthis.push( {\n\t\t\t\t\t\tperiod:              $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\t\tmcc:                 $scope.current.mcc + '_' + Settings.gmaNamespace,\n\t\t\t\t\t\tmeasurement_type_id: measurement.measurement_type_ids.person,\n\t\t\t\t\t\trelated_entity_id:   $scope.current.assignment.id,\n\t\t\t\t\t\tvalue:               value.$modelValue\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}, measurements );\n\n\t\t\tif ( measurements.length > 0 ) {\n\t\t\t\tMeasurements.saveMeasurement( {}, measurements, function () {\n\t\t\t\t\tgetMeasurements();\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tgetMeasurements();\n\t\t\t}\n\t\t};\n\n\t\t$scope.editMeasurementDetails = function ( measurement ) {\n\t\t\tvar instance = $modal.open( {\n\t\t\t\ttemplateUrl: 'partials/measurements/details.html',\n\t\t\t\tcontroller:  'MeasurementDetailsCtrl',\n\t\t\t\tkeyboard:    true,\n\t\t\t\tbackdrop:    true,\n\t\t\t\tresolve:     {\n\t\t\t\t\t'measurement': function () {\n\t\t\t\t\t\treturn measurement;\n\t\t\t\t\t},\n\t\t\t\t\t'details':     function () {\n\t\t\t\t\t\t// Return the promise so resolve waits\n\t\t\t\t\t\treturn Measurements.getMeasurement( {\n\t\t\t\t\t\t\tmeasurement_id: measurement.measurement_id,\n\t\t\t\t\t\t\tministry_id:    $scope.current.assignment.ministry_id,\n\t\t\t\t\t\t\tmcc:            $scope.current.mcc,\n\t\t\t\t\t\t\tperiod:         $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tinstance.result.then( function () {\n\t\t\t\tgetMeasurements();\n\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.measurements' ).controller( 'MeasurementsCtrl', MeasurementsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction ReportsCtrl( $scope, $document, Measurements, Settings ) {\n\t\t$scope.chart = new google.visualization.LineChart( document.getElementById( 'reports-chart' ) );\n\t\t$scope.table = new google.visualization.Table( document.getElementById( 'reports-table' ) );\n\n\t\t// Debounced method to fetch Measurements at most once every 100 milliseconds\n\t\tvar getMeasurements = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && typeof $scope.current.period !== 'undefined' && typeof $scope.current.mcc !== 'undefined' ) {\n\t\t\t\tdelete $scope.dataTable;\n\t\t\t\t$scope.current.isLoaded = false;\n\t\t\t\t$scope.measurements = Measurements.getMeasurements( {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tmcc:         $scope.current.mcc,\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\thistorical:  true\n\t\t\t\t}, function () {\n\t\t\t\t\t$scope.current.isLoaded = true;\n\n\t\t\t\t\tvar chartData = new google.visualization.DataTable(),\n\t\t\t\t\t\ttableData = new google.visualization.DataTable(),\n\t\t\t\t\t\trows = [];\n\t\t\t\t\tchartData.addColumn( 'string', 'Date' );\n\t\t\t\t\tangular.forEach( $scope.dates, function ( date, index ) {\n\t\t\t\t\t\trows[index] = [date];\n\t\t\t\t\t\tangular.forEach( $scope.measurements, function ( measurement ) {\n\t\t\t\t\t\t\tif ( index === 0 ) {\n\t\t\t\t\t\t\t\tchartData.addColumn( 'number', measurement.name );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trows[index].push( measurement.total[date] );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t\tchartData.addRows( rows );\n\t\t\t\t\t$scope.dataTable = chartData;\n\n\t\t\t\t\ttableData.addColumn( 'string', 'Measurement' );\n\t\t\t\t\tangular.forEach( $scope.measurements, function ( measurement, index ) {\n\t\t\t\t\t\tvar row = [];\n\t\t\t\t\t\tangular.forEach( $scope.dates, function ( date ) {\n\t\t\t\t\t\t\tif ( index === 0 ) tableData.addColumn( 'number', date );\n\t\t\t\t\t\t\trow.push( measurement.total[date] );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( index === 0 ) tableData.addColumn( 'number', 'Total' );\n\t\t\t\t\t\ttableData.addRow( [measurement.name].concat( row, [walterMeanAvg( row )] ) );\n\t\t\t\t\t} );\n\t\t\t\t\t$scope.tableDataTable = tableData;\n\t\t\t\t}, function () {\n\t\t\t\t} );\n\t\t\t}\n\t\t}, 100 );\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.period', function ( period ) {\n\t\t\tif ( typeof period === 'undefined' ) return;\n\t\t\tgetMeasurements();\n\n\t\t\tvar now = period.clone(),\n\t\t\t\tdates = [];\n\t\t\tfor ( var i = 0; i < 12; i++ ) {\n\t\t\t\tdates.push( now.clone().format( 'YYYY-MM' ) );\n\t\t\t\tnow.subtract( 1, 'M' );\n\t\t\t}\n\t\t\t$scope.dates = dates.reverse();\n\t\t} );\n\n\t\t$scope.$watch( 'dataTable', function ( data ) {\n\t\t\tif ( typeof data === 'undefined' ) return;\n\t\t\t$scope.chart.draw( data, {\n\t\t\t\tchartArea:   {\n\t\t\t\t\ttop:    20,\n\t\t\t\t\tleft:   50,\n\t\t\t\t\twidth:  '80%',\n\t\t\t\t\theight: '90%'\n\t\t\t\t},\n\t\t\t\tlegend:      {\n\t\t\t\t\talignment: 'start',\n\t\t\t\t\tposition:  'right'\n\t\t\t\t},\n\t\t\t\torientation: 'horizontal'\n\t\t\t} );\n\t\t} );\n\n\t\t$scope.$watch( 'tableDataTable', function ( data ) {\n\t\t\tif ( typeof data === 'undefined' ) return;\n\t\t\t$scope.table.draw( data, {} );\n\t\t} );\n\n\t\tfunction walterMeanAvg( data ) {\n\t\t\t// Drop zeros\n\t\t\tvar values = [],\n\t\t\t\ttotal = 0;\n\t\t\tangular.forEach( data, function ( val ) {\n\t\t\t\tif ( val === 0 ) return;\n\t\t\t\tvalues.push( val );\n\t\t\t} );\n\n\t\t\tif ( values.length === 0 ) return 0;\n\n\t\t\tif ( values.length > 4 ) {\n\t\t\t\t// Sort array\n\t\t\t\tvalues.sort( function ( a, b ) {\n\t\t\t\t\treturn a - b;\n\t\t\t\t} );\n\n\t\t\t\t// Remove first element, lowest\n\t\t\t\tvalues.shift();\n\n\t\t\t\t// Remove last element, highest\n\t\t\t\tvalues.pop();\n\t\t\t}\n\n\t\t\t// Sum the values\n\t\t\tangular.forEach( values, function ( val ) {\n\t\t\t\ttotal = total + val;\n\t\t\t} );\n\n\t\t\t// Return the average\n\t\t\treturn Math.round( (total / values.length) * 100 ) / 100;\n\t\t}\n\t}\n\n\tangular.module( 'gma.controllers.reports' ).controller( 'ReportsCtrl', ReportsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Assignments( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/assignments/:assignment_id' ), {assignment_id: '@assignment_id'}, {\n\t\t\tgetAssignment:  {method: 'GET'},\n\t\t\tgetAssignments: {method: 'GET', isArray: true},\n\t\t\tsaveAssignment: {method: 'PUT'},\n\t\t\taddTeamMember:  {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Assignments', Assignments );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Churches( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/churches/:church_id' ), {}, {\n\t\t\tgetChurch:   {method: 'GET'},\n\t\t\tgetChurches: {method: 'GET', isArray: true},\n\t\t\taddChurch:   {method: 'POST'},\n\t\t\tsaveChurch:  {method: 'PUT', params: {church_id: '@id'}}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Churches', Churches );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementTypes( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/measurement_types/:measurement_type_id' ), {}, {\n\t\t\tgetMeasurementType:  {method: 'GET'},\n\t\t\tgetMeasurementTypes: {method: 'GET', isArray: true},\n\t\t\tsaveMeasurementType: {method: 'PUT'},\n\t\t\taddMeasurementType:  {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'MeasurementTypes', MeasurementTypes );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Measurements( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/measurements/:measurement_id' ), {}, {\n\t\t\tgetMeasurement:  {method: 'GET'},\n\t\t\tgetMeasurements: {method: 'GET', isArray: true, params: {source: Settings.gmaNamespace}},\n\t\t\tsaveMeasurement: {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Measurements', Measurements );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Ministries( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/ministries/:ministry_id' ), {}, {\n\t\t\tgetMinistry:    {method: 'GET'},\n\t\t\tgetMinistries:  {method: 'GET', isArray: true},\n\t\t\tupdateMinistry: {method: 'PUT', params: {ministry_id: '@ministry_id'}},\n\t\t\tcreateMinistry: {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Ministries', Ministries );\n\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Session( $rootScope, $injector, $q, $log, Settings ) {\n\t\tvar token;\n\n\t\tvar startSession = function ( ticket ) {\n\t\t\tif ( \"false\" === ticket ) {\n\t\t\t\twindow.location = Settings.api.login;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn $injector.get( '$http' ).get( Settings.api.measurements( '/token' ), {params: {st: ticket}} )\n\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t$rootScope.current.user = response.data.user;\n\t\t\t\t\t$rootScope.current.sessionToken = response.data.session_ticket;\n\t\t\t\t\ttoken = response.data.session_ticket;\n\t\t\t\t\tif ( typeof response.data.assignments === 'object' ) {\n\t\t\t\t\t\t$rootScope.current.assignments = response.data.assignments;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete $rootScope.current.assignments;\n\t\t\t\t\t}\n\n\t\t\t\t\t$rootScope.$broadcast( 'sessionStart', response.data );\n\n\t\t\t\t\treturn response.data;\n\t\t\t\t} );\n\t\t};\n\n\t\treturn {\n\t\t\tstartSession:  function ( ticket ) {\n\t\t\t\tstartSession( ticket );\n\t\t\t},\n\t\t\tlogout:        function () {\n\t\t\t\treturn $injector.get( '$http' ).delete( Settings.api.measurements( '/token' ) );\n\t\t\t},\n\t\t\t// Request Interceptor\n\t\t\trequest:       function ( config ) {\n\t\t\t\tif ( config.url.indexOf( Settings.api.measurements() ) !== -1 ) {\n\t\t\t\t\t// All API requests must pass along HTTP credentials\n\t\t\t\t\tconfig.withCredentials = true;\n\n\t\t\t\t\t// If we have a toekn, add it to the request\n\t\t\t\t\tif ( typeof token !== 'undefined' ) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\n\t\t\t\t\tconfig.attempts = ( typeof config.attempts === 'number' ) ? config.attempts + 1 : 1;\n\t\t\t\t}\n\t\t\t\treturn config;\n\t\t\t},\n\t\t\t// Error Response Interceptor\n\t\t\tresponseError: function ( response ) {\n\t\t\t\tif ( response.status == 401 && response.config.url.indexOf( Settings.api.measurements() ) !== -1 && response.config.attempts < 2 ) {\n\t\t\t\t\t$log.debug( response );\n\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\t$injector.get( '$http' ).get( Settings.api.refresh, {withCredentials: true} ).then( function ( loginResponse ) {\n\t\t\t\t\t\tif ( loginResponse.data ) {\n\t\t\t\t\t\t\t//get new token\n\t\t\t\t\t\t\tstartSession( loginResponse.data.service_ticket ).then( function () {\n\t\t\t\t\t\t\t\t//retry request with new token\n\t\t\t\t\t\t\t\t$injector.get( '$http' )( response.config ).then( function ( response ) {\n\t\t\t\t\t\t\t\t\tdeferred.resolve( response );\n\t\t\t\t\t\t\t\t}, function ( response ) {\n\t\t\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function ( response ) {\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t//redirect the CAS login\n\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t\treturn $q.reject( response );\n\t\t\t}\n\t\t}\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Session', Session );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Trainings( $http, Settings ) {\n\t\tfunction getHighest( array ) {\n\t\t\tvar max = 0;\n\t\t\tif ( !array ) return 0;\n\t\t\tfor ( var i = 0; i < array.length; i++ ) {\n\t\t\t\tif ( array[i].phase > (max || 0) ) {\n\t\t\t\t\tmax = array[i].phase;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn max;\n\t\t}\n\n\t\tfunction getHighestCount( array ) {\n\t\t\tvar max = 0;\n\t\t\tfor ( var i = 0; i < array.length; i++ ) {\n\t\t\t\tif ( array[i].number_completed > (max || 0) ) {\n\t\t\t\t\tmax = array[i].number_completed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn max;\n\t\t}\n\n\t\treturn {\n\t\t\tgetTrainings:             function ( session_ticket, ministry_id, mcc, show_all, show_tree ) {\n\t\t\t\treturn $http\n\t\t\t\t\t.get( Settings.api.measurements( '/training' ), {\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tministry_id: ministry_id,\n\t\t\t\t\t\t\tshow_all:    show_all,\n\t\t\t\t\t\t\tshow_tree:   show_tree,\n\t\t\t\t\t\t\tmcc:         mcc\n\t\t\t\t\t\t}\n\t\t\t\t\t} )\n\t\t\t\t\t.then( function ( response ) {\n\n\t\t\t\t\t\tangular.forEach( response.data, function ( training ) {\n\t\t\t\t\t\t\ttraining.current_stage = getHighest( training.gcm_training_completions ) + 1;\n\t\t\t\t\t\t\ttraining.leaders_trained = getHighestCount( training.gcm_training_completions );\n\t\t\t\t\t\t\ttraining.editMode = false;\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tupdateTraining:           function ( session_ticket, training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\treturn $http.put( Settings.api.measurements( '/training/' + id ), training )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\taddTraining:              function ( session_ticket, training ) {\n\t\t\t\treturn $http.post( Settings.api.measurements( '/training' ), training )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tdeleteTraining:           function ( session_ticket, training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\treturn $http.delete( Settings.api.measurements( '/training/' + id ) )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\taddTrainingCompletion:    function ( session_ticket, training_completion ) {\n\t\t\t\treturn $http.post( Settings.api.measurements( '/training_completion' ), training_completion )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tupdateTrainingCompletion: function ( session_ticket, training_completion ) {\n\t\t\t\tvar id = training_completion.hasOwnProperty( 'Id' ) ? training_completion.Id : training_completion.id;\n\t\t\t\treturn $http.put( Settings.api.measurements( '/training_completion/' + id ), training_completion )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tdeleteTrainingCompletion: function ( session_ticket, training_completion ) {\n\t\t\t\tvar id = training_completion.hasOwnProperty( 'Id' ) ? training_completion.Id : training_completion.id;\n\t\t\t\treturn $http.delete( Settings.api.measurements( '/training_completion/' + id ) )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Trainings', Trainings );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction SettingsService() {\n\t\tvar config = {},\n\t\t\ttabs = [];\n\n\t\tthis.setConfig = function ( c ) {\n\t\t\tconfig = c;\n\t\t};\n\n\t\tvar versionUrl = function ( path ) {\n\t\t\treturn path.indexOf( '?' ) === -1\n\t\t\t\t? path + '?ver=' + config.version\n\t\t\t\t: path + '&ver=' + config.version;\n\t\t};\n\n\t\tvar appUrl = function ( path, version ) {\n\t\t\tversion = typeof version === 'undefined' ? true : version;\n\t\t\tvar url = apiUrl( config.appUrl, path );\n\t\t\tif ( version ) {\n\t\t\t\treturn versionUrl( url );\n\t\t\t}\n\t\t\treturn url;\n\t\t};\n\n\t\tvar measurementsApi = function ( path ) {\n\t\t\treturn apiUrl( config.api.measurements, path );\n\t\t};\n\n\t\tfunction apiUrl( base, path ) {\n\t\t\tif ( typeof path === 'undefined' ) return base;\n\t\t\treturn ( path.indexOf( '/' ) === 0 )\n\t\t\t\t? base + path\n\t\t\t\t: base + '/' + path;\n\t\t}\n\n\t\tvar mobileApps = function () {\n\t\t\tif ( typeof config.mobileapps === 'undefined' ) return false;\n\t\t\treturn config.mobileapps.length > 0 ? config.mobileapps : false;\n\t\t};\n\n\t\tthis.routes = function () {\n\t\t\tangular.forEach( config.tabs, function ( tab ) {\n\t\t\t\tswitch ( tab ) {\n\t\t\t\t\tcase 'map':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Map',\n\t\t\t\t\t\t\tpath:          '/map',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/map/map.html',\n\t\t\t\t\t\t\tcontroller:    'MapCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['self_assigned', 'member', 'inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'measurements':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Measurements',\n\t\t\t\t\t\t\tpath:          '/measurements',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/measurements/measurements.html',\n\t\t\t\t\t\t\tcontroller:    'MeasurementsCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['self_assigned', 'member', 'inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'reports':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Reports',\n\t\t\t\t\t\t\tpath:          '/reports',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/reports/reports.html',\n\t\t\t\t\t\t\tcontroller:    'ReportsCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'admin':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Admin',\n\t\t\t\t\t\t\tpath:          '/admin',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/admin/admin.html',\n\t\t\t\t\t\t\tcontroller:    'AdminCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['leader', 'inherited_leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}, tabs );\n\t\t\treturn tabs;\n\t\t};\n\n\t\tthis.$get = function () {\n\t\t\treturn {\n\t\t\t\tappUrl:         appUrl,\n\t\t\t\tversionUrl:     versionUrl,\n\t\t\t\tticket:         config.ticket,\n\t\t\t\tappEnvironment: config.environment,\n\t\t\t\tapi:            {\n\t\t\t\t\tmeasurements: measurementsApi,\n\t\t\t\t\trefresh:      config.api.refresh,\n\t\t\t\t\tlogout:       config.api.logout,\n\t\t\t\t\tlogin:        config.api.login\n\t\t\t\t},\n\t\t\t\tmobileApps:     ( typeof config.mobileapps !== 'undefined' && config.mobileapps.length > 0  ) ? config.mobileapps : false,\n\t\t\t\tgmaNamespace:   config.namespace,\n\t\t\t\ttabs:           tabs\n\t\t\t}\n\t\t};\n\t}\n\n\tangular.module( 'gma.services.settings' ).provider( 'Settings', SettingsService );\n})();\n"],"sourceRoot":"/source/"}