{"version":3,"sources":["_app.js","controllers/_controllers.js","directives/_directives.js","filters/_filters.js","services/_services.js","controllers/admin/_admin.js","controllers/error/_error.js","controllers/map/_map.js","controllers/measurements/_measurements.js","controllers/reports/_reports.js","services/measurements/_measurements.js","services/settings/_settings.js","app.js","controllers/gma-ctrl.js","application.min.js","controllers/join-ministry-ctrl.js","directives/checklist-model.js","directives/gma-trend-directive.js","directives/select-on-focus.js","filters/role-filter.js","controllers/admin/admin-ctrl.js","controllers/error/error-ctrl.js","controllers/map/map-ctrl.js","controllers/measurements/measurement-details-ctrl.js","controllers/measurements/measurements-ctrl.js","controllers/reports/reports-ctrl.js","services/measurements/assignments-service.js","services/measurements/churches-service.js","services/measurements/measurement-types-service.js","services/measurements/measurements-service.js","services/measurements/ministries-service.js","services/measurements/session-service.js","services/measurements/trainings-service.js","services/settings/settings-service.js"],"names":["angular","module","run","$rootScope","$route","$location","Session","Settings","current","isLoaded","window","parent","parentHash","location","hash","path","slice","$on","reload","startSession","ticket","config","$routeProvider","$httpProvider","$compileProvider","SettingsProvider","$provide","setConfig","gma","aHrefSanitizationWhitelist","interceptors","push","forEach","routes","route","i","otherwise","redirectTo","when","templateUrl","controller","decorator","$delegate","ngModel","scope","element","attrs","$injector","$interpolate","get","$set","name","invoke","this","$scope","$element","$attrs","form","ngForm","GMACtrl","$filter","$modal","Ministries","Assignments","$log","flattenMinistries","arr","ministries","ministry","hasOwnProperty","sub_ministries","concat","_","sortBy","m","team_role","uniq","ministry_id","tabs","appEnvironment","event","session","assignments","joinMinistry","$watch","oldVal","debug","isUndefined","assignment","contains","pluck","id","mccs","length","mcc","indexOf","mccSort","hasRole","role","mccLabels","ds","gcm","llm","slm","value","periods","now","moment","date","clone","subtract","period","prevPeriod","index","nextPeriod","logout","then","api","invalidateSession","allowClose","instance","open","keyboard","backdrop","resolve","getMinistries","$promise","result","addTeamMember","username","user","cas_username","onError","mobileApps","$inject","JoinMinistryCtrl","$modalInstance","join","close","cancel","dismiss","directive","$parse","$compile","item","comparator","isArray","add","remove","splice","postLinkFn","elem","setChecked","newArr","checked","getter","checklistModel","setter","assign","checklistChange","checklistValue","$parent","equals","checklistComparator","newValue","oldValue","isFunction","$watchCollection","restrict","priority","terminal","compile","tElement","tAttrs","tagName","type","removeAttr","attr","require","link","chart","google","visualization","LineChart","$render","draw","$viewValue","width","height","chartArea","focusedElement","on","select","filter","items","filtered","AdminCtrl","MeasurementTypes","roles","text","includeBlocked","getMinistry","measurementTypes","getMeasurementTypes","data","visible","is_custom","lmi_show","perm_link_stub","lmi_hide","saveRole","saveAssignment","assignment_id","ableToChangeParentMinistry","parentToFind","availableMinIds","memberFilter","newMember","addSubMinistry","newMinistry","parent_id","createMinistry","isDefined","addMeasurement","newMeasurement","addMeasurementType","saveDetails","min_code","private","where","saveDetailsResource","updateMinistry","saveDetailsAlert","msg","response","Message","ErrorCtrl","$routeParams","loginUrl","login","$","MapCtrl","$document","Trainings","Churches","initialize","map","maps","Map","document","getElementById","mapOptions","setOptions","draggableCursor","addListener","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","lat","lng","trigger","loadChurches","markers","church","churchWindow","InfoWindow","churchWindowContent","maxWidth","trainingWindow","trainingWindowContent","newChurchWindow","cancelAddChurch","newChurchWindowContent","newTrainingWindow","newTrainingContent","church_lines","icons","MarkerImage","versionUrl","Size","Point","cluster","multiplying","group","targetpoint","training","side","style","display","search","controls","ControlPosition","TOP_RIGHT","TOP_LEFT","autocomplete","places","Autocomplete","bindTo","place","getPlace","geometry","viewport","fitBounds","setCenter","setZoom","load_training_markers","a","LatLng","latitude","longitude","parseInt","location_zoom","show_target_point","show_group","show_church","show_mult_church","show_lines","show_jf","map_filter","icon_add_mode","show_all","show_tree","new_church","edit_church","SetParentMode","churches","trainings","training_types","show","zoom","center","panControl","zoomControl","mapTypeControl","streetViewControl","overviewMapControl","supportsGeoLocation","navigator","geolocation","setTimeout","loadTrainings","debounce","getTrainings","sessionToken","params","lat_min","lat_max","long_min","long_max","format","getZoom","getChurches","onGetChurches","removeLines","l","setMap","removeJF","line","setVisible","hide","onAddChurch","addChurch","getPosition","console","log","removedObject","addTraining","new_training","onAddTraining","c","marker","MarkerWithLabel","position","getCenter","title","cluster_count","zIndex","icon","labelContent","labelAnchor","labelClass","labelInBackground","draggable","new_training_marker","setAnimation","Animation","BOUNCE","getContent","setContent","nextSibling","onSaveChurch","onAddIcon","security","new_marker","SetParent","new_parentLine","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","SymbolPath","FORWARD_OPEN_ARROW","offset","repeat","move_event","e","setPath","latLng","RemoveParent","parents","saveChurch","MoveChurch","setDraggable","MoveTraining","edit_training","SaveChurch","DeleteChurch","end_date","endOf","SaveTraining","updateTraining","toDelete","t","editable","$apply","churchIconToUse","development","jf_contrib","jf","jesusFilmSign","toString","removeListener","p","par","parentLine","coordinates","n","div_","onAdd","div","createElement","className","innerHTML","panes","getPanes","overlayMouseTarget","appendChild","x","y","overlayProjection","getProjection","fromLatLngToDivPixel","left","top","onRemove","parentNode","removeChild","prototype","OverlayView","setDefaultView","trim","addTrainingStage","newPhase","phase","current_stage","insert","number_completed","training_id","addTrainingCompletion","onAddTrainingCompletion","editMode","Id","gcm_training_completions","saveTrainingCompletion","updateTrainingCompletion","onSaveTrainingCompletion","myLocation","getCurrentPosition","coords","jQuery","MeasurementDetailsCtrl","Measurements","measurement","details","spinner","ns","gmaNamespace","da","total","local","my_measurements","trend","arrayToDataTable","filterSource","key","save","measurements","editForm","$dirty","source","measurement_type_id","measurement_type_ids","related_entity_id","$modelValue","saveMeasurement","approveSelfAssigned","state","blocked","success","MeasurementsCtrl","getMeasurements","lmiForm","$setPristine","hasOther","section","column","type_id","input","$valid","editMeasurementDetails","getMeasurement","ReportsCtrl","walterMeanAvg","values","val","sort","b","shift","pop","Math","round","table","Table","dataTable","historical","chartData","DataTable","tableData","rows","addColumn","dates","addRows","row","addRow","tableDataTable","reverse","legend","alignment","orientation","$resource","getAssignment","method","getAssignments","factory","getChurch","church_id","getMeasurementType","saveMeasurementType","$q","token","st","session_ticket","$broadcast","request","url","withCredentials","headers","attempts","responseError","status","deferred","defer","refresh","loginResponse","service_ticket","reject","promise","$http","getHighest","array","max","getHighestCount","leaders_trained","put","post","deleteTraining","training_completion","deleteTrainingCompletion","SettingsService","apiUrl","base","version","appUrl","measurementsApi","tab","requiredRoles","$get","environment","mobileapps","namespace","provider"],"mappings":"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","file":"application.min.js","sourcesContent":["(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma', [\n\t\t'ngRoute',\n\t\t'ui.bootstrap',\n\t\t'ngResource',\n\t\t'gma.controllers',\n\t\t'gma.directives',\n\t\t'gma.filters',\n\t\t'gma.services'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers', [\n\t\t'gma.controllers.admin',\n\t\t'gma.controllers.error',\n\t\t'gma.controllers.map',\n\t\t'gma.controllers.measurements',\n\t\t'gma.controllers.reports'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.directives', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.filters', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services', [\n\t\t'gma.services.measurements',\n\t\t'gma.services.settings'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.admin', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.error', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.map', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.measurements', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.reports', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services.measurements', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services.settings', [] );\n})( angular );\n","(function () {\n\t'use strict';\n\tangular.module( 'gma' )\n\t\t.run( function ( $rootScope, $route, $location, Session, Settings ) {\n\t\t\t// Object to hold current values: assignments, assignment, user ...\n\t\t\t$rootScope.current = {\n\t\t\t\tisLoaded: false\n\t\t\t};\n\n\t\t\t// Support application inside an iframe, sync parent hash.\n\t\t\tif ( typeof window.parent !== 'undefined' ) {\n\t\t\t\tvar parentHash = window.parent.location.hash;\n\t\t\t\tif ( parentHash ) {\n\t\t\t\t\t$location.path( parentHash.slice( 1 ) );\n\t\t\t\t}\n\n\t\t\t\t$rootScope.$on( '$locationChangeSuccess', function () {\n\t\t\t\t\twindow.parent.location.hash = '#' + $location.path();\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Reload the route since ng-view directive is inside a template.\n\t\t\t$route.reload();\n\n\t\t\t// Start the session with the API\n\t\t\t//TODO fetch a ticket from refresh to start session\n\t\t\tSession.startSession( Settings.ticket );\n\t\t} )\n\t\t.config( function ( $routeProvider, $httpProvider, $compileProvider, SettingsProvider, $provide ) {\n\t\t\t// Initialize Settings from wrapper provided config\n\t\t\tSettingsProvider.setConfig( window.gma.config );\n\n\t\t\t// Add itms-services scheme to safe aHref protocols\n\t\t\t$compileProvider.aHrefSanitizationWhitelist( /^\\s*(https?|ftp|mailto|tel|file|itms-services):/ );\n\n\t\t\t// Register Session as an http interceptor\n\t\t\t$httpProvider.interceptors.push( 'Session' );\n\n\t\t\t// Setup application routes\n\t\t\tangular.forEach( SettingsProvider.routes(), function ( route, i ) {\n\t\t\t\tif ( i === 0 ) {\n\t\t\t\t\t$routeProvider.otherwise( {redirectTo: route.path} );\n\t\t\t\t}\n\t\t\t\t$routeProvider\n\t\t\t\t\t.when( route.path, {\n\t\t\t\t\t\ttemplateUrl: route.templateUrl,\n\t\t\t\t\t\tcontroller:  route.controller\n\t\t\t\t\t} );\n\t\t\t} );\n\t\t\t$routeProvider.when( '/error/:reason', {\n\t\t\t\ttemplateUrl: 'partials/error/error.html',\n\t\t\t\tcontroller: 'ErrorCtrl'\n\t\t\t} );\n\n\t\t\t// https://github.com/angular/angular.js/issues/1404\n\t\t\t// Source: http://plnkr.co/edit/hSMzWC?p=preview\n\t\t\t$provide.decorator( 'ngModelDirective', function ( $delegate ) {\n\t\t\t\tvar ngModel = $delegate[0], controller = ngModel.controller;\n\t\t\t\tngModel.controller = ['$scope', '$element', '$attrs', '$injector', function ( scope, element, attrs, $injector ) {\n\t\t\t\t\tvar $interpolate = $injector.get( '$interpolate' );\n\t\t\t\t\tattrs.$set( 'name', $interpolate( attrs.name || '' )( scope ) );\n\t\t\t\t\t$injector.invoke( controller, this, {\n\t\t\t\t\t\t'$scope':   scope,\n\t\t\t\t\t\t'$element': element,\n\t\t\t\t\t\t'$attrs':   attrs\n\t\t\t\t\t} );\n\t\t\t\t}];\n\t\t\t\treturn $delegate;\n\t\t\t} );\n\n\t\t\t$provide.decorator( 'formDirective', function ( $delegate ) {\n\t\t\t\tvar form = $delegate[0], controller = form.controller;\n\t\t\t\tform.controller = ['$scope', '$element', '$attrs', '$injector', function ( scope, element, attrs, $injector ) {\n\t\t\t\t\tvar $interpolate = $injector.get( '$interpolate' );\n\t\t\t\t\tattrs.$set( 'name', $interpolate( attrs.name || attrs.ngForm || '' )( scope ) );\n\t\t\t\t\t$injector.invoke( controller, this, {\n\t\t\t\t\t\t'$scope':   scope,\n\t\t\t\t\t\t'$element': element,\n\t\t\t\t\t\t'$attrs':   attrs\n\t\t\t\t\t} );\n\t\t\t\t}];\n\t\t\t\treturn $delegate;\n\t\t\t} );\n\t\t} );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction GMACtrl( $scope, $filter, $location, $modal, Session, Ministries, Assignments, Settings, $log ) {\n\t\t// Attach $location provider to scope, this is used to set active tabs\n\t\t$scope.$location = $location;\n\n\t\t$scope.tabs = Settings.tabs;\n\n\t\t$scope.appEnvironment = Settings.appEnvironment;\n\n\t\t//---------------------------------------\n\t\t// Assignments\n\t\t//---------------------------------------\n\n\t\t$scope.$on( 'sessionStart', function ( event, session ) {\n\t\t\tif ( typeof session.assignments === 'undefined' ) {\n\t\t\t\t//Open Modal if user has no assignment\n\t\t\t\t$scope.joinMinistry( false );\n\t\t\t}\n\t\t} );\n\n\t\t// Update current assignment when assignments is set - this occurs after a session is established\n\t\t$scope.$watch( 'current.assignments', function ( assignments, oldVal ) {\n\t\t\tif ( assignments === oldVal ) return;\n\n\t\t\t$log.debug( 'Assignments Changed' );\n\n\t\t\tif ( typeof assignments === 'object' ) {\n\t\t\t\tif ( angular.isUndefined( $scope.current.assignment ) || !_.contains( _.pluck( assignments, 'id' ), $scope.current.assignment.id ) ) {\n\t\t\t\t\t$scope.current.assignment = $filter( 'orderBy' )( assignments, 'name' )[0];\n\t\t\t\t}\n\t\t\t\t$scope.current.ministries = flattenMinistries( assignments );\n\t\t\t} else {\n\t\t\t\tdelete $scope.current.assignment;\n\t\t\t\t$scope.current.ministries = [];\n\t\t\t}\n\t\t} );\n\n\t\t// Update assignment and mcc when assignment changes\n\t\t$scope.$watch( 'current.assignment', function ( assignment, oldVal ) {\n\t\t\tif ( assignment === oldVal ) return;\n\n\t\t\t$log.debug( 'Assignment Changed: ' + assignment.name );\n\n\t\t\tif ( typeof assignment === 'object' ) {\n\n\t\t\t\tif ( assignment.mccs.length > 0 ) {\n\t\t\t\t\t// Set mcc if none is currently set or new assignment does not include current mcc\n\t\t\t\t\tif ( typeof $scope.current.mcc === 'undefined' || assignment.mccs.indexOf( $scope.current.mcc ) < 0 ) {\n\t\t\t\t\t\t$scope.current.mcc = $filter( 'orderBy' )( assignment.mccs, $scope.mccSort )[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Delete current mcc if assignment has no mccs\n\t\t\t\t\tdelete $scope.current.mcc;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t$scope.current.hasRole = function ( role ) {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' || typeof $scope.current.assignment.team_role === 'undefined' ) return false;\n\t\t\treturn (typeof role === 'string') ? role == $scope.current.assignment.team_role : _.contains( role, $scope.current.assignment.team_role );\n\t\t};\n\n\t\tfunction flattenMinistries( arr ) {\n\t\t\tvar ministries = [];\n\t\t\tangular.forEach( arr, function ( ministry ) {\n\t\t\t\tministries.push( ministry );\n\t\t\t\tif ( ministry.hasOwnProperty( 'sub_ministries' ) && typeof ministry.sub_ministries === 'object' ) {\n\t\t\t\t\tministries = ministries.concat( flattenMinistries( ministry.sub_ministries ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t//sort by team role\n\t\t\tministries = _.sortBy( ministries, function ( m ) {\n\t\t\t\treturn (m.team_role === 'leader' ? 0 : 1);\n\t\t\t} );\n\t\t\t//remove duplicates\n\t\t\treturn _.uniq( ministries, false, function ( m ) {\n\t\t\t\treturn m.ministry_id;\n\t\t\t} );\n\t\t}\n\n\t\t//---------------------------------------\n\t\t// Mission Critical Components (MCC)\n\t\t//---------------------------------------\n\n\t\t// MCC labels, this should be done in localization in the future.\n\t\t$scope.mccLabels = {\n\t\t\tds:  'Digital Strategies',\n\t\t\tgcm: 'Global Church Movements',\n\t\t\tllm: 'Leader Led',\n\t\t\tslm: 'Student Led'\n\t\t};\n\n\t\t$scope.mccSort = function ( value ) {\n\t\t\treturn $scope.mccLabels[value];\n\t\t};\n\n\t\t//---------------------------------------\n\t\t// Periods\n\t\t//---------------------------------------\n\t\tvar periods = [], now = moment().date( 1 );\n\t\tfor ( var i = 0; i < 12; i++ ) {\n\t\t\tperiods.push( now.clone() );\n\t\t\tnow.subtract( 1, 'M' );\n\t\t}\n\t\t$scope.periods = periods;\n\t\t$scope.current.period = periods[0];\n\n\t\t$scope.prevPeriod = function () {\n\t\t\tvar index = $scope.periods.indexOf( $scope.current.period );\n\t\t\tindex = ( ( index + 1 ) >= $scope.periods.length ) ? 0 : index + 1;\n\t\t\t$scope.current.period = $scope.periods[index];\n\t\t};\n\n\t\t$scope.nextPeriod = function () {\n\t\t\tvar index = $scope.periods.indexOf( $scope.current.period );\n\t\t\tindex = ( ( index - 1 ) < 0 ) ? $scope.periods.length - 1 : index - 1;\n\t\t\t$scope.current.period = $scope.periods[index];\n\t\t};\n\n\t\t//---------------------------------------\n\t\t// Session\n\t\t//---------------------------------------\n\n\t\t$scope.logout = function () {\n\t\t\tSession.logout().then( function () {\n\t\t\t\twindow.location = Settings.api.logout;\n\t\t\t} );\n\t\t};\n\n\t\t$scope.invalidateSession = function () {\n\t\t\tSession.logout();\n\t\t};\n\n\t\t$scope.joinMinistry = function ( allowClose ) {\n\t\t\tallowClose = typeof allowClose !== 'undefined' ? allowClose : true;\n\t\t\tvar instance = $modal.open( {\n\t\t\t\ttemplateUrl: 'partials/join-ministry.html',\n\t\t\t\tcontroller:  'JoinMinistryCtrl',\n\t\t\t\tkeyboard:    allowClose,\n\t\t\t\tbackdrop:    allowClose ? true : 'static',\n\t\t\t\tresolve:     {\n\t\t\t\t\t'ministries': function () {\n\t\t\t\t\t\treturn Ministries.getMinistries().$promise;\n\t\t\t\t\t},\n\t\t\t\t\t'allowClose': function () {\n\t\t\t\t\t\treturn allowClose;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tinstance.result.then( function ( ministry ) {\n\t\t\t\tAssignments.addTeamMember( {\n\t\t\t\t\tusername:    $scope.current.user.cas_username,\n\t\t\t\t\tministry_id: ministry.ministry_id,\n\t\t\t\t\tteam_role:   'self_assigned'\n\t\t\t\t}, function ( assignment ) {\n\t\t\t\t\tif ( typeof $scope.current.assignments === 'undefined' ) {\n\t\t\t\t\t\t// If assignments is empty, setting the array will also set the current assignment\n\t\t\t\t\t\t$scope.current.assignments = [assignment];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Add new assignment\n\t\t\t\t\t\t$scope.current.assignments.push( assignment );\n\n\t\t\t\t\t\t// Set new assignment as current\n\t\t\t\t\t\t$scope.current.assignment = assignment;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t};\n\n\t\t$scope.onError = function ( response, code ) {\n\t\t\t$location.path( '/error' );\n\t\t};\n\n\t\t$scope.mobileApps = Settings.mobileApps;\n\t}\n\n\tangular.module( 'gma.controllers' ).controller( 'GMACtrl', GMACtrl );\n})();\n",null,"(function () {\n\t'use strict';\n\n\tfunction JoinMinistryCtrl( $scope, $modalInstance, ministries, allowClose ) {\n\t\t$scope.ministries = ministries;\n\t\t$scope.allowClose = allowClose;\n\n\t\t$scope.join = function () {\n\t\t\t$modalInstance.close( $scope.ministry );\n\t\t};\n\n\t\t$scope.cancel = function () {\n\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers' ).controller( 'JoinMinistryCtrl', JoinMinistryCtrl );\n})();\n","/**\n * Checklist-model\n * AngularJS directive for list of checkboxes\n */\n\nangular.module( 'gma.directives' )\n\t.directive( 'checklistModel', ['$parse', '$compile', function ( $parse, $compile ) {\n\t\t// contains\n\t\tfunction contains( arr, item, comparator ) {\n\t\t\tif ( angular.isArray( arr ) ) {\n\t\t\t\tfor ( var i = arr.length; i--; ) {\n\t\t\t\t\tif ( comparator( arr[i], item ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// add\n\t\tfunction add( arr, item, comparator ) {\n\t\t\tarr = angular.isArray( arr ) ? arr : [];\n\t\t\tif ( !contains( arr, item, comparator ) ) {\n\t\t\t\tarr.push( item );\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\t// remove\n\t\tfunction remove( arr, item, comparator ) {\n\t\t\tif ( angular.isArray( arr ) ) {\n\t\t\t\tfor ( var i = arr.length; i--; ) {\n\t\t\t\t\tif ( comparator( arr[i], item ) ) {\n\t\t\t\t\t\tarr.splice( i, 1 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\t// http://stackoverflow.com/a/19228302/1458162\n\t\tfunction postLinkFn( scope, elem, attrs ) {\n\t\t\t// compile with `ng-model` pointing to `checked`\n\t\t\t$compile( elem )( scope );\n\n\t\t\t// getter / setter for original model\n\t\t\tvar getter = $parse( attrs.checklistModel );\n\t\t\tvar setter = getter.assign;\n\t\t\tvar checklistChange = $parse( attrs.checklistChange );\n\n\t\t\t// value added to list\n\t\t\tvar value = $parse( attrs.checklistValue )( scope.$parent );\n\n\n\t\t\tvar comparator = angular.equals;\n\n\t\t\tif ( attrs.hasOwnProperty( 'checklistComparator' ) ) {\n\t\t\t\tcomparator = $parse( attrs.checklistComparator )( scope.$parent );\n\t\t\t}\n\n\t\t\t// watch UI checked change\n\t\t\tscope.$watch( 'checked', function ( newValue, oldValue ) {\n\t\t\t\tif ( newValue === oldValue ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar current = getter( scope.$parent );\n\t\t\t\tif ( newValue === true ) {\n\t\t\t\t\tsetter( scope.$parent, add( current, value, comparator ) );\n\t\t\t\t} else {\n\t\t\t\t\tsetter( scope.$parent, remove( current, value, comparator ) );\n\t\t\t\t}\n\n\t\t\t\tif ( checklistChange ) {\n\t\t\t\t\tchecklistChange( scope );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// declare one function to be used for both $watch functions\n\t\t\tfunction setChecked( newArr, oldArr ) {\n\t\t\t\tscope.checked = contains( newArr, value, comparator );\n\t\t\t}\n\n\t\t\t// watch original model change\n\t\t\t// use the faster $watchCollection method if it's available\n\t\t\tif ( angular.isFunction( scope.$parent.$watchCollection ) ) {\n\t\t\t\tscope.$parent.$watchCollection( attrs.checklistModel, setChecked );\n\t\t\t} else {\n\t\t\t\tscope.$parent.$watch( attrs.checklistModel, setChecked, true );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tpriority: 1000,\n\t\t\tterminal: true,\n\t\t\tscope:    true,\n\t\t\tcompile:  function ( tElement, tAttrs ) {\n\t\t\t\tif ( tElement[0].tagName !== 'INPUT' || tAttrs.type !== 'checkbox' ) {\n\t\t\t\t\tthrow 'checklist-model should be applied to `input[type=\"checkbox\"]`.';\n\t\t\t\t}\n\n\t\t\t\tif ( !tAttrs.checklistValue ) {\n\t\t\t\t\tthrow 'You should provide `checklist-value`.';\n\t\t\t\t}\n\n\t\t\t\t// exclude recursion\n\t\t\t\ttElement.removeAttr( 'checklist-model' );\n\n\t\t\t\t// local scope var storing individual checkbox model\n\t\t\t\ttElement.attr( 'ng-model', 'checked' );\n\n\t\t\t\treturn postLinkFn;\n\t\t\t}\n\t\t};\n\t}] );\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma.directives' )\n\t\t.directive( 'gmaTrend', [function () {\n\t\t\treturn {\n\t\t\t\trestrict: 'A',\n\t\t\t\trequire:  'ngModel',\n\t\t\t\tlink:     function ( $scope, $element, $attrs, ngModel ) {\n\t\t\t\t\tif ( !ngModel ) return;\n\t\t\t\t\tvar chart = new google.visualization.LineChart( $element.get( 0 ) );\n\n\t\t\t\t\tngModel.$render = function () {\n\t\t\t\t\t\tchart.draw( ngModel.$viewValue, {width: 550, height: 200, chartArea: {width: '65%'}} );\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.$on( '$destroy', function () {\n\t\t\t\t\t\tchart = null;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}] )\n})();\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma.directives' )\n\t\t.directive( 'selectOnFocus', [function () {\n\t\t\treturn {\n\t\t\t\trestrict: 'A',\n\t\t\t\tlink:     function ( $scope, $element ) {\n\t\t\t\t\tvar focusedElement;\n\t\t\t\t\t$element.on( 'focus', function () {\n\t\t\t\t\t\tif ( focusedElement != this ) {\n\t\t\t\t\t\t\tthis.select();\n\t\t\t\t\t\t\tfocusedElement = this;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\t$element.on( 'blur', function () {\n\t\t\t\t\t\tfocusedElement = null;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t};\n\t\t}] )\n})();\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma.filters' )\n\t\t.filter( 'roleFilter', [function () {\n\t\t\treturn function ( items, role ) {\n\t\t\t\tvar filtered = [];\n\t\t\t\tangular.forEach( items, function ( item ) {\n\t\t\t\t\tif ( typeof role === 'string' && role == item.team_role ) {\n\t\t\t\t\t\tfiltered.push( item );\n\t\t\t\t\t} else if ( typeof role === 'object' && _.contains( role, item.team_role ) ) {\n\t\t\t\t\t\tfiltered.push( item );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn filtered;\n\t\t\t};\n\t\t}] );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction AdminCtrl( $scope, $modal, $filter, Assignments, Ministries, MeasurementTypes ) {\n\t\t$scope.current.isLoaded = false;\n\n\t\t$scope.roles = [\n\t\t\t{value: \"leader\", text: 'Leader'},\n\t\t\t{value: \"inherited_leader\", text: \"Leader (inherited)\"},\n\t\t\t{value: \"member\", text: 'Member'},\n\t\t\t{value: \"blocked\", text: 'Deleted'},\n\t\t\t{value: \"self_assigned\", text: 'Self Assigned'}\n\t\t];\n\n\t\t$scope.mccs = [\n\t\t\t{value: 'ds', text: 'Digital Strategies'},\n\t\t\t{value: 'gcm', text: 'Global Church Movements'},\n\t\t\t{value: 'llm', text: 'Leader Led'},\n\t\t\t{value: 'slm', text: 'Student Led'}\n\t\t];\n\n\t\t$scope.includeBlocked = false;\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function ( ministry_id ) {\n\t\t\tif ( typeof ministry_id === 'undefined' ) return;\n\t\t\t$scope.ministry = Ministries.getMinistry( {ministry_id: ministry_id}, function () {\n\t\t\t\t$scope.current.isLoaded = true;\n\n\t\t\t\t$scope.measurementTypes = [];\n\t\t\t\tMeasurementTypes.getMeasurementTypes().$promise.then( function ( data ) {\n\t\t\t\t\tangular.forEach( data, function ( type ) {\n\t\t\t\t\t\tif ( type.is_custom && _.contains( $scope.ministry.lmi_show, type.perm_link_stub ) ) {\n\t\t\t\t\t\t\ttype.visible = true;\n\t\t\t\t\t\t} else if ( !type.is_custom && !_.contains( $scope.ministry.lmi_hide, type.perm_link_stub ) ) {\n\t\t\t\t\t\t\ttype.visible = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype.visible = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.measurementTypes.push( type );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\n\t\t$scope.saveRole = function ( assignment ) {\n\t\t\tAssignments.saveAssignment( {\n\t\t\t\tassignment_id: assignment.assignment_id\n\t\t\t}, {team_role: assignment.team_role} );\n\t\t};\n\n\t\t$scope.ableToChangeParentMinistry = function ( parentToFind ) {\n\t\t\tvar availableMinIds = _.pluck( $filter( 'roleFilter' )( $scope.current.ministries, ['leader', 'inherited_leader'] ), 'ministry_id' )\n\t\t\treturn _.contains( availableMinIds, parentToFind );\n\t\t};\n\n\t\t$scope.memberFilter = function(value) {\n\t\t\treturn $scope.includeBlocked ? true : value.team_role != 'blocked';\n\t\t};\n\n\t\t$scope.addTeamMember = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-team-member.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance, roles ) {\n\t\t\t\t\t$scope.roles = roles;\n\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMember );\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tresolve:     {\n\t\t\t\t\t'roles': function () {\n\t\t\t\t\t\treturn $scope.roles;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMember ) {\n\t\t\t\t\tnewMember.ministry_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\tAssignments.addTeamMember( newMember, function () {\n\t\t\t\t\t\t$scope.ministry = Ministries.getMinistry( {ministry_id: $scope.current.assignment.ministry_id} );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.addSubMinistry = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-sub-ministry.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance ) {\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMinistry );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMinistry ) {\n\t\t\t\t\tnewMinistry.parent_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\tMinistries.createMinistry( newMinistry, function () {\n\t\t\t\t\t\tif ( angular.isDefined( $scope.current.assignment.sub_ministries ) ) {\n\t\t\t\t\t\t\t$scope.current.assignment.sub_ministries.push( newMinistry );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.current.assignment.sub_ministries = [newMinistry];\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.addMeasurement = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-measurement-type.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance ) {\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMeasurement );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMeasurement ) {\n\t\t\t\t\tMeasurementTypes.addMeasurementType( newMeasurement, function () {\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.saveDetails = function () {\n\t\t\tvar ministry = {\n\t\t\t\tministry_id: $scope.ministry.ministry_id,\n\t\t\t\tmin_code:    $scope.ministry.min_code,\n\t\t\t\tname:        $scope.ministry.name,\n\t\t\t\tmccs:        $scope.ministry.mccs,\n\t\t\t\tprivate:     $scope.ministry.private,\n\t\t\t\tlmi_hide:    _.pluck( _.where( $scope.measurementTypes, {\n\t\t\t\t\tis_custom: false,\n\t\t\t\t\tvisible:   false\n\t\t\t\t} ), 'perm_link_stub' ),\n\t\t\t\tlmi_show:    _.pluck( _.where( $scope.measurementTypes, {\n\t\t\t\t\tis_custom: true,\n\t\t\t\t\tvisible:   true\n\t\t\t\t} ), 'perm_link_stub' )\n\t\t\t};\n\t\t\tif ( $scope.ministry.hasOwnProperty( 'parent_id' ) && typeof $scope.ministry.parent_id === \"string\" ) {\n\t\t\t\tministry.parent_id = $scope.ministry.parent_id;\n\t\t\t}\n\t\t\t$scope.saveDetailsResource = Ministries.updateMinistry( ministry,\n\t\t\t\tfunction () {\n\t\t\t\t\t$scope.saveDetailsAlert = {\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmsg:  'Your changes have been saved.'\n\t\t\t\t\t};\n\t\t\t\t}, function ( response ) {\n\t\t\t\t\t$scope.saveDetailsAlert = {\n\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\tmsg:  response.Message || 'An error occurred while saving.'\n\t\t\t\t\t};\n\t\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.admin' ).controller( 'AdminCtrl', AdminCtrl );\n}());\n","(function () {\n\t'use strict';\n\n\tfunction ErrorCtrl( $scope, $routeParams, Settings ) {\n\t\t$scope.current.isLoaded = true;\n\n\t\t$scope.loginUrl = Settings.api.login;\n\t};\n\n\tangular.module( 'gma.controllers.error' ).controller( 'ErrorCtrl', ErrorCtrl );\n}());\n","(function ( $ ) {\n\t'use strict';\n\n\tfunction MapCtrl( $scope, $document, $compile, Trainings, Churches, Ministries, Settings ) {\n\t\t$scope.current.isLoaded = false;\n\t\t$scope.versionUrl = Settings.versionUrl;\n\t\t$scope.show_target_point = true;\n\t\t$scope.show_group = true;\n\t\t$scope.show_church = true;\n\t\t$scope.show_mult_church = true;\n\t\t$scope.show_lines = true;\n\t\t$scope.show_lines = true;\n\t\t$scope.show_jf = true;\n\t\t$scope.map_filter = 'min_only';\n\t\t$scope.icon_add_mode = false;\n\t\t$scope.show_all = \"year\";\n\t\t$scope.show_tree = false;\n\t\t$scope.new_church = {};\n\t\t$scope.edit_church = {};\n\t\t$scope.SetParentMode = false;\n\t\t$scope.church_lines = [];\n\t\t$scope.churches = [];\n\t\t$scope.trainings = [];\n\t\t$scope.training_types = [\n\t\t\t{value: \"MC2\", text: 'MC2'},\n\t\t\t{value: \"T4T\", text: 'T4T'},\n\t\t\t{value: \"CPMI\", text: 'CPMI'},\n\t\t\t{value: \"\", text: 'Other'}\n\t\t];\n\t\t$scope.show = {\n\t\t\ttraining: true\n\t\t};\n\t\t$scope.mapOptions = {\n\t\t\tzoom:               3,\n\t\t\tcenter:             new google.maps.LatLng( 0, 0 ),\n\t\t\tpanControl:         true,\n\t\t\tzoomControl:        true,\n\t\t\tmapTypeControl:     true,\n\t\t\tstreetViewControl:  false,\n\t\t\toverviewMapControl: false\n\t\t};\n\t\t$scope.supportsGeoLocation = typeof navigator.geolocation !== 'undefined';\n\t\tsetTimeout( initialize, 0 );\n\n\t\tfunction initialize() {\n\t\t\t$scope.map = new google.maps.Map( document.getElementById( 'map_canvas' ), $scope.mapOptions );\n\t\t\t$scope.map.setOptions( {draggableCursor: ''} );\n\n\t\t\tgoogle.maps.event.addListener( $scope.map, \"idle\", function () {\n\t\t\t\t$scope.current.isLoaded = true;\n\t\t\t\tvar bounds = $scope.map.getBounds(),\n\t\t\t\t\tne = bounds.getNorthEast(),\n\t\t\t\t\tsw = bounds.getSouthWest();\n\n\t\t\t\tif ( ne.lat() == sw.lat() && ne.lng() == sw.lng() ) {\n\t\t\t\t\t// Trigger a resize if bounds have 0 area\n\t\t\t\t\tgoogle.maps.event.trigger( $scope.map, 'resize' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$scope.loadChurches();\n\t\t\t\t}\n\t\t\t} );\n\t\t\t$scope.map.markers = [];\n\t\t\t$scope.church = {name: \"\"};\n\n\t\t\t$scope.churchWindow = new google.maps.InfoWindow();\n\t\t\t$scope.churchWindowContent = $compile( '<div id=\"church_window_content\" ng-include=\"\\'partials/map/edit-church.html\\'\"></div>' )( $scope )\n\t\t\t$scope.churchWindow.setOptions( {maxWidth: 300} );\n\t\t\t$scope.trainingWindow = new google.maps.InfoWindow();\n\t\t\t$scope.trainingWindowContent = $compile( '<div id=\"training_window_content\" ng-include=\"\\'partials/map/edit-training.html\\'\"></div>' )( $scope )\n\t\t\t$scope.trainingWindow.setOptions( {maxWidth: 400} );\n\n\t\t\t$scope.newChurchWindow = new google.maps.InfoWindow();\n\t\t\tgoogle.maps.event.addListener( $scope.newChurchWindow, 'closeclick', function () {\n\t\t\t\t$scope.cancelAddChurch();\n\t\t\t} );\n\t\t\t$scope.newChurchWindowContent = $compile( '<div id=\"new_church_window_content\" ng-include=\"\\'partials/map/new-church.html\\'\"></div>' )( $scope );\n\t\t\t$scope.newChurchWindow.setOptions( {maxWidth: 300} );\n\n\n\t\t\t$scope.newTrainingWindow = new google.maps.InfoWindow();\n\t\t\tgoogle.maps.event.addListener( $scope.newTrainingWindow, 'closeclick', function () {\n\t\t\t\t$scope.cancelAddChurch();\n\t\t\t} );\n\t\t\t$scope.newTrainingContent = $compile( '<div id=\"new_training_window_content\" ng-include=\"\\'partials/map/new-training.html\\'\"></div>' )( $scope );\n\t\t\t$scope.newTrainingWindow.setOptions( {maxWidth: 300} );\n\n\t\t\t$scope.map.church_lines = [];\n\t\t\t$scope.map.icons = {};\n\t\t\t$scope.map.icons.church = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/church.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 58 )\n\t\t\t);\n\t\t\t$scope.map.icons.cluster = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/cluster.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 31 )\n\t\t\t);\n\t\t\t$scope.map.icons.multiplying = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/multiplying.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 53 )\n\t\t\t);\n\t\t\t$scope.map.icons.group = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/group.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 55 )\n\t\t\t);\n\t\t\t$scope.map.icons.targetpoint = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/target.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 32, 56 )\n\t\t\t);\n\t\t\t$scope.map.icons.training = new google.maps.MarkerImage(\n\t\t\t\tSettings.versionUrl( 'img/icon/training.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 43 )\n\t\t\t);\n\n\t\t\t$scope.map.side = document.getElementById( 'side' );\n\t\t\t$scope.map.side.index = -1;\n\t\t\t$scope.map.side.style.display = 'block';\n\t\t\t$scope.map.search = document.getElementById( 'map_controls' );\n\t\t\t$scope.map.search.index = 3;\n\t\t\t$scope.map.search.style.display = 'block';\n\n\t\t\t$scope.map.controls[google.maps.ControlPosition.TOP_RIGHT].push( $scope.map.side );\n\t\t\t$scope.map.controls[google.maps.ControlPosition.TOP_LEFT].push( $scope.map.search );\n\n\t\t\t$scope.autocomplete = new google.maps.places.Autocomplete( document.getElementById( 'searchBox' ) );\n\t\t\t$scope.autocomplete.bindTo( 'bounds', $scope.map );\n\n\t\t\tgoogle.maps.event.addListener( $scope.autocomplete, 'place_changed', function () {\n\t\t\t\tvar place = $scope.autocomplete.getPlace();\n\t\t\t\tif ( !place.geometry ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( place.geometry.viewport ) {\n\t\t\t\t\t$scope.map.fitBounds( place.geometry.viewport );\n\t\t\t\t} else {\n\t\t\t\t\t$scope.map.setCenter( place.geometry.location );\n\t\t\t\t\t$scope.map.setZoom( 15 );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( $scope.current.assignment )$scope.load_training_markers();\n\n\t\t\t$scope.$watch( 'current.assignment', function ( a, oldVal ) {\n\t\t\t\tif ( typeof a !== 'undefined' ) {\n\n\t\t\t\t\tif ( a && a.hasOwnProperty( 'location' ) ) {\n\t\t\t\t\t\t$scope.map.setCenter( new google.maps.LatLng( a.location.latitude, a.location.longitude ) );\n\t\t\t\t\t}\n\t\t\t\t\tif ( a && a.hasOwnProperty( 'location_zoom' ) ) {\n\t\t\t\t\t\t$scope.map.setZoom( parseInt( a.location_zoom ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, true );\n\t\t}\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function ( ministry_id ) {\n\t\t\tif ( typeof ministry_id === 'undefined' ) {\n\t\t\t\t$scope.trainings = [];\n\t\t\t} else {\n\t\t\t\t$scope.loadTrainings();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.$watch( 'map_filter', function ( filter ) {\n\t\t\t$scope.loadTrainings();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function ( mcc ) {\n\t\t\tif ( typeof mcc === 'undefined' ) {\n\t\t\t\t$scope.trainings = [];\n\t\t\t} else {\n\t\t\t\t$scope.loadChurches();\n\t\t\t\t$scope.loadTrainings();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.loadTrainings = _.debounce( function () {\n\t\t\t// Everyone can view trainings\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' ) {\n\t\t\t\tTrainings.getTrainings( $scope.current.sessionToken, $scope.current.assignment.ministry_id, $scope.current.mcc, $scope.show_all == \"all\", $scope.show_tree ).then( function ( trainings ) {\n\t\t\t\t\t$scope.trainings = trainings;\n\t\t\t\t}, $scope.onError );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$scope.trainings = [];\n\t\t\t}\n\t\t}, 500 );\n\n\t\t$scope.loadChurches = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' ) return;\n\n\t\t\tvar bounds = $scope.map.getBounds(),\n\t\t\t\tne = bounds.getNorthEast(),\n\t\t\t\tsw = bounds.getSouthWest(),\n\t\t\t\tparams = {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tlat_min:     sw.lat(),\n\t\t\t\t\tlat_max:     ne.lat(),\n\t\t\t\t\tlong_min:    sw.lng(),\n\t\t\t\t\tlong_max:    ne.lng(),\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t};\n\t\t\tif ( !$scope.show_target_point ) params['hide_target_point'] = 'true';\n\t\t\tif ( !$scope.show_group ) params['hide_group'] = 'true';\n\t\t\tif ( !$scope.show_church ) params['hide_church'] = 'true';\n\t\t\tif ( !$scope.show_mult_church ) params['hide_mult_church'] = 'true';\n\t\t\tif ( $scope.map_filter === 'everything' ) {\n\t\t\t\tparams['show_all'] = 'true';\n\t\t\t} else if ( $scope.map_filter === 'tree' ) params['show_tree'] = 'true';\n\n\t\t\t// Disable clustering at Zoom 14 and higher\n\t\t\tif ( $scope.map.getZoom() >= 14 ) params['should_cluster'] = 'false';\n\n\t\t\tChurches.getChurches( params ).$promise.then( $scope.onGetChurches, $scope.onError );\n\t\t}, 500 );\n\n\t\t$scope.removeLines = function () {\n\t\t\tangular.forEach( $scope.map.church_lines, function ( l ) {\n\t\t\t\tl.setMap( null );\n\t\t\t} );\n\t\t};\n\n\t\t$scope.removeJF = function () {\n\t\t\t$( '.jf_label' ).remove();\n\t\t};\n\n\t\t$scope.$watch( 'show_lines', function () {\n\t\t\tif ( typeof $scope.map !== 'undefined' ) {\n\t\t\t\tangular.forEach( $scope.map.church_lines, function ( line ) {\n\t\t\t\t\tline.setVisible( $scope.show_lines );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t$scope.$watch( 'show_jf', function () {\n\t\t\tif ( $scope.show_jf ) {\n\t\t\t\t$( '.jf_label' ).show();\n\t\t\t} else {\n\t\t\t\t$( '.jf_label' ).hide();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.onAddChurch = function () {\n\t\t\t$scope.loadChurches();\n\t\t};\n\n\t\t$scope.addChurch = function () {\n\t\t\t$scope.newChurchWindow.close();\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\n\t\t\t\tif ( m.id == -1 ) {\n\t\t\t\t\t$scope.new_church.ministry_id = $scope.current.assignment.ministry_id;\n\n\t\t\t\t\t$scope.new_church.latitude = m.getPosition().lat();\n\t\t\t\t\t$scope.new_church.longitude = m.getPosition().lng();\n\t\t\t\t\tconsole.log( $scope.new_church );\n\t\t\t\t\tChurches.addChurch( $scope.new_church ).$promise.then( $scope.onAddChurch, $scope.onError );\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.addTraining = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\n\t\t\t\tif ( m.id == -2 ) {\n\t\t\t\t\t$scope.new_training.ministry_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\t$scope.new_training.latitude = m.getPosition().lat();\n\t\t\t\t\t$scope.new_training.longitude = m.getPosition().lng();\n\t\t\t\t\t$scope.new_training.mcc = $scope.current.mcc;\n\t\t\t\t\tTrainings.addTraining( $scope.current.sessionToken, $scope.new_training ).then(\n\t\t\t\t\t\t$scope.loadTrainings,\n\t\t\t\t\t\t$scope.onError\n\t\t\t\t\t);\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.cancelAddChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id < 0 ) {\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t\t$scope.new_church = {};\n\t\t\t$scope.new_training = {};\n\t\t};\n\n\t\t$scope.onAddTraining = function () {\n\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\treturn c.id < 0\n\t\t\t\t} ).length == 0 ) {\n\t\t\t\t$scope.new_training = {};\n\n\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\tposition:          $scope.map.getCenter(),\n\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\ttitle:             \"new_training\",\n\t\t\t\t\tid:                -2,\n\t\t\t\t\tcluster_count:     1,\n\t\t\t\t\tzIndex:            9999,\n\t\t\t\t\ticon:              $scope.map.icons.training,\n\t\t\t\t\tlabelContent:      'MOVE ME!',\n\t\t\t\t\tlabelAnchor:       new google.maps.Point( 50, -5 ),\n\t\t\t\t\tlabelClass:        \"labelMoveMarker\", // the CSS class for the label\n\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\tdraggable:         true\n\t\t\t\t} );\n\t\t\t\t$scope.map.new_training_marker = marker;\n\t\t\t\tmarker.setAnimation( google.maps.Animation.BOUNCE );\n\n\t\t\t\tif ( !$scope.newTrainingWindow.getContent() ) {\n\t\t\t\t\t$scope.newTrainingWindow.setContent( $scope.newTrainingContent[0].nextSibling );\n\t\t\t\t}\n\t\t\t\t$scope.newTrainingWindow.open( $scope.map, marker );\n\n\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t}\n\t\t};\n\n\t\t$scope.onSaveChurch = function ( response ) {\n\t\t\t$scope.loadChurches();\n\t\t};\n\n\t\t$scope.onAddIcon = function () {\n\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\treturn c.id < 0\n\t\t\t\t} ).length == 0 ) {\n\t\t\t\t$scope.new_church = {security: 2};\n\n\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\tposition:          $scope.map.getCenter(),\n\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\ttitle:             \"new church\",\n\t\t\t\t\tid:                -1,\n\t\t\t\t\tcluster_count:     1,\n\t\t\t\t\tzIndex:            9999,\n\t\t\t\t\ticon:              $scope.map.icons.targetpoint,\n\t\t\t\t\tlabelContent:      'Move me!',\n\t\t\t\t\tlabelAnchor:       new google.maps.Point( 50, -20 ),\n\t\t\t\t\tlabelClass:        \"labelMoveMarker\", // the CSS class for the label\n\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\tdraggable:         true\n\t\t\t\t} );\n\t\t\t\t$scope.map.new_marker = marker;\n\t\t\t\tmarker.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t//$scope.$apply();\n\t\t\t\tif ( !$scope.newChurchWindow.getContent() ) {\n\t\t\t\t\t$scope.newChurchWindow.setContent( $scope.newChurchWindowContent[0].nextSibling );\n\t\t\t\t}\n\t\t\t\t$scope.newChurchWindow.open( $scope.map, marker );\n\n\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t}\n\t\t};\n\n\t\t$scope.SetParent = function () {\n\t\t\t$scope.SetParentMode = true;\n\t\t\t$scope.churchWindow.close();\n\t\t\t$scope.new_parentLine = new google.maps.Polyline( {\n\t\t\t\tpath:          [new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude ), new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )],\n\t\t\t\tgeodesic:      true,\n\t\t\t\tstrokeColor:   '#777',\n\t\t\t\tstrokeOpacity: 1.0,\n\t\t\t\tstrokeWeight:  2,\n\t\t\t\ticons:         [{\n\t\t\t\t\t\t\t\t\ticon:   {\n\t\t\t\t\t\t\t\t\t\tpath:         google.maps.SymbolPath.FORWARD_OPEN_ARROW,\n\t\t\t\t\t\t\t\t\t\tstrokeWeight: 1.5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\toffset: '12px',\n\t\t\t\t\t\t\t\t\trepeat: '25px'\n\t\t\t\t\t\t\t\t}]\n\t\t\t} );\n\n\t\t\t$scope.move_event = google.maps.event.addListener( $scope.map, 'mousemove', function ( e ) {\n\t\t\t\t$scope.new_parentLine.setPath( [e.latLng, new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )] );\n\t\t\t} );\n\n\t\t\t$scope.new_parentLine.setMap( $scope.map );\n\t\t};\n\n\t\t$scope.RemoveParent = function () {\n\t\t\t$scope.churchWindow.close();\n\t\t\t$scope.edit_church.parent_id = null;\n\t\t\t$scope.edit_church.parents = [];\n\t\t\tChurches.saveChurch( {\n\t\t\t\tid:        $scope.edit_church.id,\n\t\t\t\tparent_id: -1\n\t\t\t} ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\n\t\t};\n\n\t\t$scope.MoveChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id === $scope.edit_church.id ) {\n\t\t\t\t\tm.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t\tm.setDraggable( true );\n\t\t\t\t\t$scope.churchWindow.close();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.MoveTraining = function () {\n\t\t\tvar id = $scope.edit_training.id;\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id === 't' + id ) {\n\t\t\t\t\tm.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t\tm.setDraggable( true );\n\t\t\t\t\t$scope.trainingWindow.close();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.SaveChurch = function () {\n\t\t\t$scope.churchWindow.close();\n\t\t\tChurches.saveChurch( $scope.edit_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.DeleteChurch = function () {\n\t\t\t// Set end_date to the last day of the previous month\n\t\t\t$scope.edit_church.end_date = moment().subtract( 1, 'months' ).endOf( 'month' ).format( 'YYYY-MM-DD' );\n\t\t\tChurches.saveChurch( $scope.edit_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.SaveTraining = function () {\n\t\t\tTrainings.updateTraining( $scope.current.sessionToken, $scope.edit_training ).then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.$watch( 'trainings', function () {\n\t\t\tif ( $scope.map ) {\n\t\t\t\t$scope.load_training_markers();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.load_training_markers = function () {\n\t\t\tif ( typeof $scope.map === 'undefined' ) return;\n\t\t\tvar toDelete = [];\n\t\t\tangular.forEach( $scope.map.markers, function ( training ) {\n\t\t\t\tif ( training.id[0] == 't' && $scope.trainings.filter( function ( t ) {\n\t\t\t\t\t\treturn t.id == training.id\n\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\ttoDelete.push( training );\n\t\t\t\t}\n\t\t\t\telse if ( training.id[0] == 't' && !$scope.show.training ) toDelete.push( training );\n\t\t\t} );\n\n\t\t\tangular.forEach( toDelete, function ( training ) {\n\t\t\t\ttraining.setMap( null );\n\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( training ), 1 );\n\t\t\t\tremovedObject = null;\n\t\t\t} );\n\n\t\t\tif ( $scope.show.training ) {\n\t\t\t\tangular.forEach( $scope.trainings, function ( training ) {\n\t\t\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\t\t\treturn c.id === 't' + training.id\n\t\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\t\tif ( training.longitude ) {\n\t\t\t\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\t\t\t\tposition:          new google.maps.LatLng( training.latitude, training.longitude ),\n\t\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\t\tid:                't' + training.id,\n\t\t\t\t\t\t\t\ttitle:             training.type,\n\t\t\t\t\t\t\t\ticon:              $scope.map.icons.training,\n\t\t\t\t\t\t\t\tlabelContent:      '', //training.type + '<span class=\"map-trained-count\">' + training.leaders_trained + '</span>',\n\t\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 0 ),\n\t\t\t\t\t\t\t\tlabelClass:        \"labelMarker\", // the CSS class for the label\n\t\t\t\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\t\t\t\tdraggable:         false\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tif ( !$scope.trainingWindow.getContent() ) {\n\t\t\t\t\t\t\t\t$scope.trainingWindow.setContent( $scope.trainingWindowContent[0].nextSibling );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgoogle.maps.event.addListener( marker, 'click', (function ( training, marker ) {\n\t\t\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\t\t\t$scope.edit_training = training;\n\t\t\t\t\t\t\t\t\t$scope.edit_training.editable = training.ministry_id === $scope.current.assignment.ministry_id;\n\n\t\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.close();\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.setOptions( {maxWidth: 400} );\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.open( $scope.map, marker );\n\t\t\t\t\t\t\t\t\t// $scope.churchWindow.open($scope.map, marker);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}( training, marker, $scope )) );\n\n\t\t\t\t\t\t\tgoogle.maps.event.addListener( marker, 'dragend', (function () {\n\t\t\t\t\t\t\t\ttraining.latitude = marker.getPosition().lat();\n\t\t\t\t\t\t\t\ttraining.longitude = marker.getPosition().lng();\n\t\t\t\t\t\t\t\tTrainings.updateTraining( $scope.current.sessionToken, training ).then( $scope.onSaveChurch, $scope.onError );\n\t\t\t\t\t\t\t\tmarker.setAnimation( null );\n\t\t\t\t\t\t\t\tmarker.setDraggable( false );\n\t\t\t\t\t\t\t}) );\n\n\t\t\t\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch( 'show.training', $scope.load_training_markers, true );\n\n\t\t$scope.onGetChurches = function ( response ) {\n\t\t\tif ( $scope.current.mcc === 'gcm' ) {\n\t\t\t\t$scope.churches = response;\n\t\t\t} else {\n\t\t\t\tresponse = [];\n\t\t\t\t$scope.churches = [];\n\t\t\t}\n\n\t\t\tconsole.log( 'got churches' );\n\t\t\t$scope.removeLines();\n\t\t\t$scope.removeJF();\n\t\t\t// $scope.map.markers = [];\n\n\t\t\t// do more intelligent replace\n\t\t\t//remove elements that are not in the new one.\n\t\t\tvar toDelete = [];\n\n\t\t\tangular.forEach( $scope.map.markers, function ( church ) {\n\t\t\t\tif ( church.id > 0 ) {\n\t\t\t\t\tif ( response.filter( function ( c ) {\n\t\t\t\t\t\t\treturn c.id == church.id && c.cluster_count == 1\n\t\t\t\t\t\t} ).length == 0 || church.cluster_count > 1 ) {\n\t\t\t\t\t\ttoDelete.push( church );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tangular.forEach( toDelete, function ( church ) {\n\t\t\t\t//console.log(toDelete)\n\t\t\t\t//var church = $scope.map.markers.filter(function (c) { return c.id == toDelete[i] });\n\t\t\t\t//console.log(church.length);\n\t\t\t\tchurch.setMap( null );\n\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( church ), 1 );\n\n\t\t\t\tremovedObject = null;\n\t\t\t} );\n\n\n\t\t\tangular.forEach( $scope.churches, function ( church ) {\n\t\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\t\treturn c.id == church.id\n\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\tvar marker = {};\n\n\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\tvar churchIconToUse = {}\n\t\t\t\t\t\tif ( church.development == 5 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.multiplying;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 4 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 3 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 2 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.group;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 1 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.targetpoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmarker = new MarkerWithLabel( {\n\t\t\t\t\t\t\tposition:          new google.maps.LatLng( church.latitude, church.longitude ),\n\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\ttitle:             church.name,\n\t\t\t\t\t\t\tid:                church.id,\n\t\t\t\t\t\t\tcluster_count:     church.cluster_count,\n\t\t\t\t\t\t\ticon:              churchIconToUse,\n\t\t\t\t\t\t\tlabelContent:      church.name,\n\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 0 ),\n\t\t\t\t\t\t\tlabelClass:        \"labelMarker\", // the CSS class for the label\n\t\t\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\t\t\tdraggable:         false\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( church.jf_contrib > 0 ) church.jf = new $scope.jesusFilmSign( new google.maps.LatLng( church.latitude, church.longitude ), church.jf_contrib, church.development );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmarker = new MarkerWithLabel( {\n\t\t\t\t\t\t\tposition:          new google.maps.LatLng( church.latitude, church.longitude ),\n\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\tid:                church.id,\n\t\t\t\t\t\t\tcluster_count:     church.cluster_count,\n\t\t\t\t\t\t\ticon:              $scope.map.icons.cluster,\n\t\t\t\t\t\t\tlabelContent:      church.cluster_count.toString(),\n\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 15 ),\n\t\t\t\t\t\t\tlabelClass:        \"clusterMarker\", // the CSS class for the label\n\t\t\t\t\t\t\tlabelInBackground: false\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( church.jf_contrib > 0 ) church.jf = new $scope.jesusFilmSign( new google.maps.LatLng( church.latitude, church.longitude ), church.jf_contrib, 'cluster' );\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( !$scope.churchWindow.getContent() ) {\n\t\t\t\t\t\t$scope.churchWindow.setContent( $scope.churchWindowContent[0].nextSibling );\n\t\t\t\t\t}\n\n\t\t\t\t\tgoogle.maps.event.addListener( marker, 'click', (function ( church, marker ) {\n\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\tif ( $scope.SetParentMode ) {\n\t\t\t\t\t\t\t\tif ( church.cluster_count == 1 && church.id !== $scope.edit_church.id && !_.contains( church.parents, $scope.edit_church.id ) ) {\n\t\t\t\t\t\t\t\t\tgoogle.maps.event.removeListener( $scope.move_event );\n\t\t\t\t\t\t\t\t\t$scope.SetParentMode = false;\n\t\t\t\t\t\t\t\t\t$scope.new_parentLine.setPath( [new google.maps.LatLng( church.latitude, church.longitude ), new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )] );\n\t\t\t\t\t\t\t\t\t//update church's parent\n\t\t\t\t\t\t\t\t\tvar new_church = {};\n\t\t\t\t\t\t\t\t\tnew_church.id = $scope.edit_church.id;\n\t\t\t\t\t\t\t\t\tnew_church.parent_id = church.id;\n\t\t\t\t\t\t\t\t\t$scope.edit_church.parent_id = church.id;\n\t\t\t\t\t\t\t\t\t$scope.edit_church.parents = [church.id];\n\t\t\t\t\t\t\t\t\tChurches.saveChurch( new_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tgoogle.maps.event.removeListener( $scope.move_event );\n\t\t\t\t\t\t\t\t\t$scope.SetParentMode = false;\n\t\t\t\t\t\t\t\t\t$scope.new_parentLine.setMap( null );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\t\t\t$scope.edit_church = church;\n\t\t\t\t\t\t\t\t$scope.edit_church.editable = church.ministry_id === $scope.current.assignment.ministry_id;\n\n\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t$scope.churchWindow.close();\n\t\t\t\t\t\t\t\t$scope.churchWindow.setOptions( {maxWidth: 300} );\n\t\t\t\t\t\t\t\t$scope.churchWindow.open( $scope.map, marker );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t$scope.map.setCenter( marker.position );\n\t\t\t\t\t\t\t\t$scope.map.setZoom( $scope.map.getZoom() + 2 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}( church, marker, $scope )) );\n\n\t\t\t\t\tgoogle.maps.event.addListener( marker, 'dragend', (function ( church, marker ) {\n\t\t\t\t\t\treturn function () {\n\n\t\t\t\t\t\t\t//google.maps.event.addListener(marker, 'click', function () {\n\t\t\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\t\t\tvar new_church = {};\n\t\t\t\t\t\t\t\tnew_church.id = church.id;\n\t\t\t\t\t\t\t\tnew_church.latitude = marker.getPosition().lat();\n\t\t\t\t\t\t\t\tnew_church.longitude = marker.getPosition().lng();\n\t\t\t\t\t\t\t\tchurch.latitude = new_church.latitude;\n\t\t\t\t\t\t\t\tchurch.longitude = new_church.longitude;\n\t\t\t\t\t\t\t\tChurches.saveChurch( new_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\n\t\t\t\t\t\t\t\tmarker.setAnimation( null );\n\t\t\t\t\t\t\t\tmarker.setDraggable( false );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}( church, marker )) );\n\t\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t\t}\n\n\n\t\t\t\t//now create the parent lines\n\t\t\t\tangular.forEach( church.parents, function ( p ) {\n\t\t\t\t\tvar par = $scope.churches.filter( function ( c ) {\n\t\t\t\t\t\treturn c.id == p\n\t\t\t\t\t} );\n\t\t\t\t\tif ( par.length > 0 ) {\n\t\t\t\t\t\tvar parentLine = new google.maps.Polyline( {\n\t\t\t\t\t\t\tpath:          [new google.maps.LatLng( par[0].latitude, par[0].longitude ), new google.maps.LatLng( church.latitude, church.longitude )],\n\t\t\t\t\t\t\tgeodesic:      true,\n\t\t\t\t\t\t\tstrokeColor:   '#777',\n\t\t\t\t\t\t\tstrokeOpacity: 1.0,\n\t\t\t\t\t\t\tstrokeWeight:  2,\n\t\t\t\t\t\t\ticons:         [{\n\t\t\t\t\t\t\t\t\t\t\t\ticon:   {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpath:         google.maps.SymbolPath.FORWARD_OPEN_ARROW,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWeight: 1.5\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\toffset: '12px',\n\t\t\t\t\t\t\t\t\t\t\t\trepeat: '25px'\n\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tparentLine.setMap( $scope.map );\n\t\t\t\t\t\t$scope.map.church_lines.push( parentLine );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\n\t\t\t} );\n\n\n\t\t};\n\n\n\t\t$scope.jesusFilmSign = function ( coordinates, n, type ) {\n\t\t\tthis.div_ = null;\n\t\t\tthis.setMap( $scope.map );\n\t\t\tif ( n == 1 ) n = \"JF\";\n\n\t\t\t// onADD\n\t\t\tthis.onAdd = function () {\n\t\t\t\tvar div = document.createElement( 'div' );\n\t\t\t\tdiv.className = 'jf_label';\n\t\t\t\tdiv.innerHTML = n;\n\t\t\t\tthis.div_ = div;\n\t\t\t\tvar panes = this.getPanes();\n\t\t\t\tpanes.overlayMouseTarget.appendChild( div );\n\t\t\t};\n\n\t\t\t// draw\n\t\t\tthis.draw = function () {\n\t\t\t\tvar div = this.div_;\n\t\t\t\tvar overlayProjection = this.getProjection();\n\t\t\t\tvar position = overlayProjection.fromLatLngToDivPixel( coordinates );\n\n\t\t\t\t// displacement of sign\n\t\t\t\tvar x;\n\t\t\t\tvar y;\n\n\t\t\t\tif ( type == 'cluster' ) {\n\t\t\t\t\tx = -20;\n\t\t\t\t\ty = 8;\n\t\t\t\t}\n\n\t\t\t\telse if ( type >= 0 && type <= 1 ) {\n\t\t\t\t\tx = -23;\n\t\t\t\t\ty = -12;\n\t\t\t\t}\n\n\t\t\t\telse if ( type == 2 ) {\n\t\t\t\t\tx = -22;\n\t\t\t\t\ty = -13;\n\t\t\t\t}\n\n\t\t\t\telse if ( type >= 3 ) {\n\t\t\t\t\tx = -20;\n\t\t\t\t\ty = -13;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\n\t\t\t\tdiv.style.left = position.x + x + \"px\";\n\t\t\t\tdiv.style.top = position.y + y + \"px\";\n\t\t\t};\n\n\t\t\tthis.onRemove = function () {\n\t\t\t\tthis.div_.parentNode.removeChild( $scope.div_ );\n\t\t\t\tthis.div_ = null;\n\t\t\t}\n\t\t};\n\t\t$scope.jesusFilmSign.prototype = new google.maps.OverlayView();\n\n\t\t$scope.setDefaultView = function () {\n\t\t\tvar center = $scope.map.getCenter(),\n\t\t\t\tzoom = $scope.map.getZoom();\n\n\t\t\t// Update current assignment location/zoom\n\t\t\t$scope.current.assignment.location = {\n\t\t\t\tlatitude:  center.lat(),\n\t\t\t\tlongitude: center.lng()\n\t\t\t};\n\t\t\t$scope.current.assignment.location_zoom = zoom;\n\n\t\t\t// Save changes to API\n\t\t\tMinistries.updateMinistry( {\n\t\t\t\tministry_id:   $scope.current.assignment.ministry_id,\n\t\t\t\tmin_code:      $scope.current.assignment.min_code.trim(),\n\t\t\t\tlocation:      $scope.current.assignment.location,\n\t\t\t\tlocation_zoom: $scope.current.assignment.location_zoom\n\t\t\t} );\n\t\t};\n\n\t\t$scope.addTrainingStage = function ( training ) {\n\t\t\tvar newPhase = {\n\t\t\t\tphase:            training.current_stage,\n\t\t\t\tdate:             training.insert.date,\n\t\t\t\tnumber_completed: training.insert.number_completed,\n\t\t\t\ttraining_id:      training.id\n\n\t\t\t};\n\t\t\tTrainings.addTrainingCompletion( $scope.current.sessionToken, newPhase ).then( $scope.onAddTrainingCompletion, $scope.onError );\n\n\t\t\ttraining.insert.date = \"\";\n\t\t\ttraining.insert.number_completed = 0;\n\n\t\t};\n\n\t\t$scope.onAddTrainingCompletion = function ( response ) {\n\t\t\tresponse.editMode = false;\n\n\t\t\tangular.forEach( $scope.trainings, function ( training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\tif ( id == response.training_id ) {\n\t\t\t\t\ttraining.gcm_training_completions.push( response );\n\t\t\t\t\ttraining.current_stage = response.phase + 1;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.saveTrainingCompletion = function ( data ) {\n\t\t\tTrainings.updateTrainingCompletion( $scope.current.sessionToken, data ).then( $scope.onSaveTrainingCompletion, $scope.onError );\n\t\t};\n\n\t\t$scope.myLocation = function () {\n\t\t\tif ( navigator.geolocation ) {\n\t\t\t\tnavigator.geolocation.getCurrentPosition( function ( position ) {\n\t\t\t\t\tvar center = new google.maps.LatLng( position.coords.latitude, position.coords.longitude );\n\t\t\t\t\t$scope.map.setCenter( center );\n\t\t\t\t\t$scope.map.setZoom( 15 );\n\t\t\t\t}, function () {\n\t\t\t\t\t// Failed\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Failed\n\t\t\t}\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.map' ).controller( 'MapCtrl', MapCtrl );\n})( jQuery );\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementDetailsCtrl( $scope, $modalInstance, Measurements, Assignments, measurement, details, Settings ) {\n\t\t$scope.spinner = true;\n\t\t$scope.measurement = measurement;\n\t\t$scope.details = details;\n\t\t$scope.ns = Settings.gmaNamespace;\n\n\t\t$scope.details.$promise.then( function () {\n\t\t\t$scope.spinner = false;\n\n\t\t\tvar da = [['Period', 'Personal', 'Local Team', 'Total']];\n\t\t\tangular.forEach( details.total, function ( t, period ) {\n\t\t\t\tangular.forEach( details.local, function ( l, p ) {\n\t\t\t\t\tif ( p === period ) {\n\t\t\t\t\t\tangular.forEach( details.my_measurements, function ( m, p ) {\n\t\t\t\t\t\t\tif ( p === period ) da.push( [p, m, l, t] )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t$scope.trend = google.visualization.arrayToDataTable( da );\n\t\t} );\n\n\t\t$scope.filterSource = function ( items ) {\n\t\t\tvar result = {};\n\t\t\tangular.forEach( items, function ( value, key ) {\n\t\t\t\tif ( key != Settings.gmaNamespace && key != 'total' ) {\n\t\t\t\t\tresult[key] = value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn result;\n\t\t};\n\n\t\t$scope.save = function () {\n\t\t\t$scope.spinner = true;\n\t\t\tvar measurements = [];\n\t\t\tangular.forEach( ['local', 'person'], function ( type ) {\n\t\t\t\tif ( $scope.editForm.hasOwnProperty( type ) && $scope.editForm[type].$dirty && typeof $scope.editForm[type] !== 'undefined' ) {\n\t\t\t\t\tmeasurements.push( {\n\t\t\t\t\t\tperiod:              $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\t\tmcc:                 $scope.current.mcc,\n\t\t\t\t\t\tsource:              Settings.gmaNamespace,\n\t\t\t\t\t\tmeasurement_type_id: $scope.details.measurement_type_ids[type],\n\t\t\t\t\t\trelated_entity_id:   type == 'local'\n\t\t\t\t\t\t\t? $scope.current.assignment.ministry_id\n\t\t\t\t\t\t\t: $scope.current.assignment.id,\n\t\t\t\t\t\tvalue:               $scope.editForm[type].$modelValue\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( measurements.length > 0 ) {\n\t\t\t\tMeasurements.saveMeasurement( {}, measurements, function () {\n\t\t\t\t\t$modalInstance.close();\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t\t}\n\t\t};\n\n\t\t$scope.close = function () {\n\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t};\n\n\t\t$scope.approveSelfAssigned = function ( user, role ) {\n\t\t\tvar user = user;\n\t\t\tuser.state = 'pending';\n\t\t\tAssignments.saveAssignment( {\n\t\t\t\tassignment_id: user.assignment_id\n\t\t\t}, {team_role: role}, function () {\n\t\t\t\tif ( role == 'blocked' ) {\n\t\t\t\t\tuser.state = 'blocked';\n\t\t\t\t\tuser.blocked = true;\n\t\t\t\t} else {\n\t\t\t\t\tuser.success = true;\n\t\t\t\t\tuser.state = 'member';\n\t\t\t\t}\n\t\t\t}, function () {\n\t\t\t\tdelete user.state;\n\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.measurements' ).controller( 'MeasurementDetailsCtrl', MeasurementDetailsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementsCtrl( $scope, $document, $filter, $modal, Measurements, Settings ) {\n\t\t$scope.current.isLoaded = false;\n\t\t$scope.ns = Settings.gmaNamespace;\n\n\t\t// Debounced method to fetch Measurements at most once every 100 milliseconds\n\t\tvar getMeasurements = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && typeof $scope.current.period !== 'undefined' && typeof $scope.current.mcc !== 'undefined' ) {\n\t\t\t\t$scope.current.isLoaded = false;\n\t\t\t\t$scope.lmiForm.$setPristine();\n\t\t\t\t$scope.measurements = Measurements.getMeasurements( {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tmcc:         $scope.current.mcc,\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t}, function () {\n\t\t\t\t\t$scope.current.isLoaded = true;\n\t\t\t\t} );\n\t\t\t}\n\t\t}, 100 );\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.period', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.hasOther = function () {\n\t\t\treturn _.where( $scope.measurements, {section: 'other', column: 'other'} ).length > 0;\n\t\t};\n\n\t\t// Method used to save measurements\n\t\t$scope.save = function () {\n\t\t\tvar measurements = [];\n\t\t\tangular.forEach( $scope.measurements, function ( measurement ) {\n\t\t\t\tangular.forEach( ['person', 'local'], function ( type ) {\n\t\t\t\t\tif ( $scope.lmiForm.hasOwnProperty( measurement.measurement_type_ids[type] ) ) {\n\t\t\t\t\t\tvar type_id = measurement.measurement_type_ids[type],\n\t\t\t\t\t\t\tinput = $scope.lmiForm[type_id];\n\n\t\t\t\t\t\tif ( input.$dirty && input.$valid ) {\n\t\t\t\t\t\t\tmeasurements.push( {\n\t\t\t\t\t\t\t\tperiod:              $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\t\t\t\tmcc:                 $scope.current.mcc,\n\t\t\t\t\t\t\t\tsource:              Settings.gmaNamespace,\n\t\t\t\t\t\t\t\tmeasurement_type_id: type_id,\n\t\t\t\t\t\t\t\trelated_entity_id:   type === 'person' ? $scope.current.assignment.id : $scope.current.assignment.ministry_id,\n\t\t\t\t\t\t\t\tvalue:               input.$modelValue\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tif ( measurements.length > 0 ) {\n\t\t\t\tMeasurements.saveMeasurement( {}, measurements, function () {\n\t\t\t\t\tgetMeasurements();\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tgetMeasurements();\n\t\t\t}\n\t\t};\n\n\t\t$scope.editMeasurementDetails = function ( measurement ) {\n\t\t\tvar instance = $modal.open( {\n\t\t\t\ttemplateUrl: 'partials/measurements/details.html',\n\t\t\t\tcontroller:  'MeasurementDetailsCtrl',\n\t\t\t\tkeyboard:    true,\n\t\t\t\tbackdrop:    true,\n\t\t\t\tresolve:     {\n\t\t\t\t\t'measurement': function () {\n\t\t\t\t\t\treturn measurement;\n\t\t\t\t\t},\n\t\t\t\t\t'details':     function () {\n\t\t\t\t\t\t// Return the promise so resolve waits\n\t\t\t\t\t\treturn Measurements.getMeasurement( {\n\t\t\t\t\t\t\tperm_link_stub: measurement.perm_link_stub,\n\t\t\t\t\t\t\tministry_id:    $scope.current.assignment.ministry_id,\n\t\t\t\t\t\t\tmcc:            $scope.current.mcc,\n\t\t\t\t\t\t\tperiod:         $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tinstance.result.then( function () {\n\t\t\t\tgetMeasurements();\n\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.measurements' ).controller( 'MeasurementsCtrl', MeasurementsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction ReportsCtrl( $scope, $document, Measurements, Settings ) {\n\t\t$scope.chart = new google.visualization.LineChart( document.getElementById( 'reports-chart' ) );\n\t\t$scope.table = new google.visualization.Table( document.getElementById( 'reports-table' ) );\n\n\t\t// Debounced method to fetch Measurements at most once every 100 milliseconds\n\t\tvar getMeasurements = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && typeof $scope.current.period !== 'undefined' && typeof $scope.current.mcc !== 'undefined' ) {\n\t\t\t\tdelete $scope.dataTable;\n\t\t\t\t$scope.current.isLoaded = false;\n\t\t\t\t$scope.measurements = Measurements.getMeasurements( {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tmcc:         $scope.current.mcc,\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\thistorical:  true\n\t\t\t\t}, function () {\n\t\t\t\t\t$scope.current.isLoaded = true;\n\n\t\t\t\t\tvar chartData = new google.visualization.DataTable(),\n\t\t\t\t\t\ttableData = new google.visualization.DataTable(),\n\t\t\t\t\t\trows = [];\n\t\t\t\t\tchartData.addColumn( 'string', 'Date' );\n\t\t\t\t\tangular.forEach( $scope.dates, function ( date, index ) {\n\t\t\t\t\t\trows[index] = [date];\n\t\t\t\t\t\tangular.forEach( $scope.measurements, function ( measurement ) {\n\t\t\t\t\t\t\tif ( index === 0 ) {\n\t\t\t\t\t\t\t\tchartData.addColumn( 'number', measurement.name );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trows[index].push( measurement.total[date] );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t\tchartData.addRows( rows );\n\t\t\t\t\t$scope.dataTable = chartData;\n\n\t\t\t\t\ttableData.addColumn( 'string', 'Measurement' );\n\t\t\t\t\tangular.forEach( $scope.measurements, function ( measurement, index ) {\n\t\t\t\t\t\tvar row = [];\n\t\t\t\t\t\tangular.forEach( $scope.dates, function ( date ) {\n\t\t\t\t\t\t\tif ( index === 0 ) tableData.addColumn( 'number', date );\n\t\t\t\t\t\t\trow.push( measurement.total[date] );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( index === 0 ) tableData.addColumn( 'number', 'Total' );\n\t\t\t\t\t\ttableData.addRow( [measurement.name].concat( row, [walterMeanAvg( row )] ) );\n\t\t\t\t\t} );\n\t\t\t\t\t$scope.tableDataTable = tableData;\n\t\t\t\t}, function () {\n\t\t\t\t} );\n\t\t\t}\n\t\t}, 100 );\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.period', function ( period ) {\n\t\t\tif ( typeof period === 'undefined' ) return;\n\t\t\tgetMeasurements();\n\n\t\t\tvar now = period.clone(),\n\t\t\t\tdates = [];\n\t\t\tfor ( var i = 0; i < 12; i++ ) {\n\t\t\t\tdates.push( now.clone().format( 'YYYY-MM' ) );\n\t\t\t\tnow.subtract( 1, 'M' );\n\t\t\t}\n\t\t\t$scope.dates = dates.reverse();\n\t\t} );\n\n\t\t$scope.$watch( 'dataTable', function ( data ) {\n\t\t\tif ( typeof data === 'undefined' ) return;\n\t\t\t$scope.chart.draw( data, {\n\t\t\t\tchartArea:   {\n\t\t\t\t\ttop:    20,\n\t\t\t\t\tleft:   50,\n\t\t\t\t\twidth:  '80%',\n\t\t\t\t\theight: '90%'\n\t\t\t\t},\n\t\t\t\tlegend:      {\n\t\t\t\t\talignment: 'start',\n\t\t\t\t\tposition:  'right'\n\t\t\t\t},\n\t\t\t\torientation: 'horizontal'\n\t\t\t} );\n\t\t} );\n\n\t\t$scope.$watch( 'tableDataTable', function ( data ) {\n\t\t\tif ( typeof data === 'undefined' ) return;\n\t\t\t$scope.table.draw( data, {} );\n\t\t} );\n\n\t\tfunction walterMeanAvg( data ) {\n\t\t\t// Drop zeros\n\t\t\tvar values = [],\n\t\t\t\ttotal = 0;\n\t\t\tangular.forEach( data, function ( val ) {\n\t\t\t\tif ( val === 0 ) return;\n\t\t\t\tvalues.push( val );\n\t\t\t} );\n\n\t\t\tif ( values.length === 0 ) return 0;\n\n\t\t\tif ( values.length > 4 ) {\n\t\t\t\t// Sort array\n\t\t\t\tvalues.sort( function ( a, b ) {\n\t\t\t\t\treturn a - b;\n\t\t\t\t} );\n\n\t\t\t\t// Remove first element, lowest\n\t\t\t\tvalues.shift();\n\n\t\t\t\t// Remove last element, highest\n\t\t\t\tvalues.pop();\n\t\t\t}\n\n\t\t\t// Sum the values\n\t\t\tangular.forEach( values, function ( val ) {\n\t\t\t\ttotal = total + val;\n\t\t\t} );\n\n\t\t\t// Return the average\n\t\t\treturn Math.round( (total / values.length) * 100 ) / 100;\n\t\t}\n\t}\n\n\tangular.module( 'gma.controllers.reports' ).controller( 'ReportsCtrl', ReportsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Assignments( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/assignments/:assignment_id' ), {assignment_id: '@assignment_id'}, {\n\t\t\tgetAssignment:  {method: 'GET'},\n\t\t\tgetAssignments: {method: 'GET', isArray: true},\n\t\t\tsaveAssignment: {method: 'PUT'},\n\t\t\taddTeamMember:  {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Assignments', Assignments );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Churches( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/churches/:church_id' ), {}, {\n\t\t\tgetChurch:   {method: 'GET'},\n\t\t\tgetChurches: {method: 'GET', isArray: true},\n\t\t\taddChurch:   {method: 'POST'},\n\t\t\tsaveChurch:  {method: 'PUT', params: {church_id: '@id'}}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Churches', Churches );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementTypes( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/measurement_types/:measurement_type_id' ), {}, {\n\t\t\tgetMeasurementType:  {method: 'GET'},\n\t\t\tgetMeasurementTypes: {method: 'GET', isArray: true},\n\t\t\tsaveMeasurementType: {method: 'PUT'},\n\t\t\taddMeasurementType:  {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'MeasurementTypes', MeasurementTypes );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Measurements( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/measurements/:perm_link_stub' ), {}, {\n\t\t\tgetMeasurement:  {method: 'GET'},\n\t\t\tgetMeasurements: {method: 'GET', isArray: true, params: {source: Settings.gmaNamespace}},\n\t\t\tsaveMeasurement: {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Measurements', Measurements );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Ministries( $resource, Settings ) {\n\t\treturn $resource( Settings.api.measurements( '/ministries/:ministry_id' ), {}, {\n\t\t\tgetMinistry:    {method: 'GET'},\n\t\t\tgetMinistries:  {method: 'GET', isArray: true},\n\t\t\tupdateMinistry: {method: 'PUT', params: {ministry_id: '@ministry_id'}},\n\t\t\tcreateMinistry: {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Ministries', Ministries );\n\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Session( $rootScope, $injector, $q, $log, Settings, $location ) {\n\t\tvar token;\n\n\t\tvar startSession = function ( ticket ) {\n\t\t\tif ( \"false\" === ticket ) {\n\t\t\t\twindow.location = Settings.api.login;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn $injector.get( '$http' ).get( Settings.api.measurements( '/token' ), {params: {st: ticket}} )\n\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t$rootScope.current.user = response.data.user;\n\t\t\t\t\t$rootScope.current.sessionToken = response.data.session_ticket;\n\t\t\t\t\ttoken = response.data.session_ticket;\n\t\t\t\t\tif ( typeof response.data.assignments === 'object' ) {\n\t\t\t\t\t\t$rootScope.current.assignments = response.data.assignments;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete $rootScope.current.assignments;\n\t\t\t\t\t}\n\n\t\t\t\t\t$rootScope.$broadcast( 'sessionStart', response.data );\n\n\t\t\t\t\treturn response.data;\n\t\t\t\t} );\n\t\t};\n\n\t\treturn {\n\t\t\tstartSession:  function ( ticket ) {\n\t\t\t\tstartSession( ticket );\n\t\t\t},\n\t\t\tlogout:        function () {\n\t\t\t\treturn $injector.get( '$http' ).delete( Settings.api.measurements( '/token' ) );\n\t\t\t},\n\t\t\t// Request Interceptor\n\t\t\trequest:       function ( config ) {\n\t\t\t\tif ( config.url.indexOf( Settings.api.measurements() ) !== -1 ) {\n\t\t\t\t\t// All API requests must pass along HTTP credentials\n\t\t\t\t\tconfig.withCredentials = true;\n\n\t\t\t\t\t// If we have a token, add it to the request\n\t\t\t\t\tif ( typeof token !== 'undefined' ) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\n\t\t\t\t\tconfig.attempts = ( typeof config.attempts === 'number' ) ? config.attempts + 1 : 1;\n\t\t\t\t}\n\t\t\t\treturn config;\n\t\t\t},\n\t\t\t// Error Response Interceptor\n\t\t\tresponseError: function ( response ) {\n\t\t\t\tif ( response.status === 401 && response.config.url.indexOf( Settings.api.measurements() ) !== -1 && response.config.attempts < 2 ) {\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\t$injector.get( '$http' ).get( Settings.api.refresh, {withCredentials: true} ).then( function ( loginResponse ) {\n\t\t\t\t\t\tif ( loginResponse.data ) {\n\t\t\t\t\t\t\t//get new token\n\t\t\t\t\t\t\tstartSession( loginResponse.data.service_ticket ).then( function () {\n\t\t\t\t\t\t\t\t//retry request with new token\n\t\t\t\t\t\t\t\t$injector.get( '$http' )( response.config ).then( function ( response ) {\n\t\t\t\t\t\t\t\t\tdeferred.resolve( response );\n\t\t\t\t\t\t\t\t}, function ( response ) {\n\t\t\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\t\t$location.path('/error/invalid_session');\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function ( response ) {\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t$location.path('/error/invalid_session');\n\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t\treturn $q.reject( response );\n\t\t\t}\n\t\t}\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Session', Session );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction Trainings( $http, Settings ) {\n\t\tfunction getHighest( array ) {\n\t\t\tvar max = 0;\n\t\t\tif ( !array ) return 0;\n\t\t\tfor ( var i = 0; i < array.length; i++ ) {\n\t\t\t\tif ( array[i].phase > (max || 0) ) {\n\t\t\t\t\tmax = array[i].phase;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn max;\n\t\t}\n\n\t\tfunction getHighestCount( array ) {\n\t\t\tvar max = 0;\n\t\t\tfor ( var i = 0; i < array.length; i++ ) {\n\t\t\t\tif ( array[i].number_completed > (max || 0) ) {\n\t\t\t\t\tmax = array[i].number_completed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn max;\n\t\t}\n\n\t\treturn {\n\t\t\tgetTrainings:             function ( session_ticket, ministry_id, mcc, show_all, show_tree ) {\n\t\t\t\treturn $http\n\t\t\t\t\t.get( Settings.api.measurements( '/training' ), {\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tministry_id: ministry_id,\n\t\t\t\t\t\t\tshow_all:    show_all,\n\t\t\t\t\t\t\tshow_tree:   show_tree,\n\t\t\t\t\t\t\tmcc:         mcc\n\t\t\t\t\t\t}\n\t\t\t\t\t} )\n\t\t\t\t\t.then( function ( response ) {\n\n\t\t\t\t\t\tangular.forEach( response.data, function ( training ) {\n\t\t\t\t\t\t\ttraining.current_stage = getHighest( training.gcm_training_completions ) + 1;\n\t\t\t\t\t\t\ttraining.leaders_trained = getHighestCount( training.gcm_training_completions );\n\t\t\t\t\t\t\ttraining.editMode = false;\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tupdateTraining:           function ( session_ticket, training ) {\n\t\t\t\treturn $http.put( Settings.api.measurements( '/training/' + training.id ), training )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\taddTraining:              function ( session_ticket, training ) {\n\t\t\t\treturn $http.post( Settings.api.measurements( '/training' ), training )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tdeleteTraining:           function ( session_ticket, training ) {\n\t\t\t\treturn $http.delete( Settings.api.measurements( '/training/' + training.id ) )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\taddTrainingCompletion:    function ( session_ticket, training_completion ) {\n\t\t\t\treturn $http.post( Settings.api.measurements( '/training_completion' ), training_completion )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tupdateTrainingCompletion: function ( session_ticket, training_completion ) {\n\t\t\t\treturn $http.put( Settings.api.measurements( '/training_completion/' + training_completion.id ), training_completion )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tdeleteTrainingCompletion: function ( session_ticket, training_completion ) {\n\t\t\t\treturn $http.delete( Settings.api.measurements( '/training_completion/' + training_completion.id ) )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'Trainings', Trainings );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction SettingsService() {\n\t\tvar config = {},\n\t\t\ttabs = [];\n\n\t\tthis.setConfig = function ( c ) {\n\t\t\tconfig = c;\n\t\t};\n\n\t\tvar versionUrl = function ( path ) {\n\t\t\treturn path.indexOf( '?' ) === -1\n\t\t\t\t? path + '?ver=' + config.version\n\t\t\t\t: path + '&ver=' + config.version;\n\t\t};\n\n\t\tvar appUrl = function ( path, version ) {\n\t\t\tversion = typeof version === 'undefined' ? true : version;\n\t\t\tvar url = apiUrl( config.appUrl, path );\n\t\t\tif ( version ) {\n\t\t\t\treturn versionUrl( url );\n\t\t\t}\n\t\t\treturn url;\n\t\t};\n\n\t\tvar measurementsApi = function ( path ) {\n\t\t\treturn apiUrl( config.api.measurements, path );\n\t\t};\n\n\t\tfunction apiUrl( base, path ) {\n\t\t\tif ( typeof path === 'undefined' ) return base;\n\t\t\treturn ( path.indexOf( '/' ) === 0 )\n\t\t\t\t? base + path\n\t\t\t\t: base + '/' + path;\n\t\t}\n\n\t\tvar mobileApps = function () {\n\t\t\tif ( typeof config.mobileapps === 'undefined' ) return false;\n\t\t\treturn config.mobileapps.length > 0 ? config.mobileapps : false;\n\t\t};\n\n\t\tthis.routes = function () {\n\t\t\tangular.forEach( config.tabs, function ( tab ) {\n\t\t\t\tswitch ( tab ) {\n\t\t\t\t\tcase 'map':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Map',\n\t\t\t\t\t\t\tpath:          '/map',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/map/map.html',\n\t\t\t\t\t\t\tcontroller:    'MapCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['self_assigned', 'member', 'inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'measurements':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Measurements',\n\t\t\t\t\t\t\tpath:          '/measurements',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/measurements/measurements.html',\n\t\t\t\t\t\t\tcontroller:    'MeasurementsCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['self_assigned', 'member', 'inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'reports':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Reports',\n\t\t\t\t\t\t\tpath:          '/reports',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/reports/reports.html',\n\t\t\t\t\t\t\tcontroller:    'ReportsCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'admin':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Admin',\n\t\t\t\t\t\t\tpath:          '/admin',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/admin/admin.html',\n\t\t\t\t\t\t\tcontroller:    'AdminCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['leader', 'inherited_leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}, tabs );\n\t\t\treturn tabs;\n\t\t};\n\n\t\tthis.$get = function () {\n\t\t\treturn {\n\t\t\t\tappUrl:         appUrl,\n\t\t\t\tversionUrl:     versionUrl,\n\t\t\t\tticket:         config.ticket,\n\t\t\t\tappEnvironment: config.environment,\n\t\t\t\tapi:            {\n\t\t\t\t\tmeasurements: measurementsApi,\n\t\t\t\t\trefresh:      config.api.refresh,\n\t\t\t\t\tlogout:       config.api.logout,\n\t\t\t\t\tlogin:        config.api.login\n\t\t\t\t},\n\t\t\t\tmobileApps:     ( typeof config.mobileapps !== 'undefined' && config.mobileapps.length > 0  ) ? config.mobileapps : false,\n\t\t\t\tgmaNamespace:   config.namespace,\n\t\t\t\ttabs:           tabs\n\t\t\t}\n\t\t};\n\t}\n\n\tangular.module( 'gma.services.settings' ).provider( 'Settings', SettingsService );\n})();\n"],"sourceRoot":"/source/"}