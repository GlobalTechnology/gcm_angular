{"version":3,"sources":["_app.js","controllers/_controllers.js","directives/_directives.js","filters/_filters.js","services/_services.js","controllers/admin/_admin.js","controllers/map/_map.js","controllers/measurements/_measurements.js","controllers/reports/_reports.js","services/measurements/_measurements.js","services/settings/_settings.js","app.js","controllers/gma-ctrl.js","application.min.js","controllers/join-ministry-ctrl.js","directives/gma-trend-directive.js","filters/role-filter.js","controllers/admin/admin-ctrl.js","controllers/map/map-ctrl.js","controllers/measurements/measurement-details-ctrl.js","controllers/measurements/measurements-ctrl.js","controllers/reports/reports-ctrl.js","services/measurements/assignment-service.js","services/measurements/church-service.js","services/measurements/measurement-service.js","services/measurements/measurement-type-service.js","services/measurements/ministry-service.js","services/measurements/session-service.js","services/measurements/training-service.js","services/settings/settings-service.js"],"names":["angular","module","run","$rootScope","$route","$location","sessionService","settings","current","isLoaded","window","parent","parentHash","location","hash","path","slice","$on","reload","startSession","ticket","config","$routeProvider","$httpProvider","$compileProvider","settingsProvider","$provide","setConfig","gma","aHrefSanitizationWhitelist","interceptors","push","forEach","routes","route","i","otherwise","redirectTo","when","templateUrl","controller","decorator","$delegate","ngModel","scope","element","attrs","$injector","$interpolate","get","$set","name","invoke","this","$scope","$element","$attrs","form","ngForm","GMACtrl","$filter","$modal","ministryService","assignmentService","$log","flattenMinistries","arr","ministries","ministry","hasOwnProperty","sub_ministries","concat","_","sortBy","m","team_role","uniq","ministry_id","tabs","event","session","assignments","joinMinistry","$watch","oldVal","debug","isUndefined","assignment","contains","pluck","id","mccs","length","mcc","indexOf","mccSort","hasRole","role","mccLabels","ds","gcm","llm","slm","value","periods","now","moment","date","clone","subtract","period","prevPeriod","index","nextPeriod","logout","then","api","invalidateSession","allowClose","instance","open","keyboard","backdrop","resolve","getMinistries","$promise","result","addTeamMember","username","user","cas_username","onError","response","code","reason","pathname","error","mobileApps","$inject","JoinMinistryCtrl","$modalInstance","join","close","cancel","dismiss","directive","restrict","require","link","chart","google","visualization","LineChart","$render","draw","$viewValue","width","height","filter","items","filtered","item","AdminCtrl","measurementTypeService","roles","text","getMinistry","measurementTypes","getMeasurementTypes","data","type","visible","is_custom","lmi_show","perm_link_stub","lmi_hide","saveRole","saveAssignment","assignment_id","ableToChangeParentMinistry","parentToFind","availableMinIds","add","newMember","addSubMinistry","newMinistry","parent_id","createMinistry","isDefined","addMeasurement","newMeasurement","addMeasurementType","saveDetails","min_code","has_ds","has_gcm","has_llm","has_slm","private","where","saveDetailsResource","updateMinistry","saveDetailsAlert","msg","Message","$","MapCtrl","$document","$compile","trainingService","churchService","initialize","map","maps","Map","document","getElementById","mapOptions","setOptions","draggableCursor","addListener","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","lat","lng","trigger","loadChurches","markers","church","churchWindow","InfoWindow","churchWindowContent","maxWidth","trainingWindow","trainingWindowContent","newChurchWindow","cancelAddChurch","newChurchWindowContent","newTrainingWindow","newTrainingContent","church_lines","icons","MarkerImage","versionUrl","Size","Point","cluster","multiplying","group","targetpoint","training","side","style","display","search","controls","ControlPosition","TOP_RIGHT","TOP_LEFT","load_training_markers","a","setCenter","LatLng","latitude","longitude","setZoom","parseInt","location_zoom","show_target_point","show_group","show_church","show_mult_church","show_lines","show_jf","map_filter","icon_add_mode","show_all","show_tree","new_church","edit_church","SetParentMode","churches","trainings","allChurches","training_types","show","zoom","center","panControl","zoomControl","mapTypeControl","streetViewControl","overviewMapControl","setTimeout","loadAllChurches","loadTrainings","c","marker","debounce","params","getChurches","getTrainings","sessionToken","console","log","lat_min","lat_max","long_min","long_max","getZoom","onGetChurches","removeLines","l","setMap","removeJF","remove","line","setVisible","hide","onAddChurch","addChurch","getPosition","removedObject","splice","addTraining","new_training","onAddTraining","MarkerWithLabel","position","getCenter","title","cluster_count","zIndex","icon","labelContent","labelAnchor","labelClass","labelInBackground","draggable","new_training_marker","setAnimation","Animation","BOUNCE","getContent","setContent","nextSibling","onSaveChurch","onAddIcon","security","new_marker","SetParent","new_parentLine","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","SymbolPath","FORWARD_OPEN_ARROW","offset","repeat","move_event","e","setPath","latLng","MoveChurch","setDraggable","MoveTraining","edit_training","Id","SaveChurch","saveChurch","SaveTraining","updateTraining","toDelete","t","editable","$apply","churchIconToUse","development","jf_contrib","jf","jesusFilmSign","toString","removeListener","parents","p","par","parentLine","coordinates","n","div_","onAdd","div","createElement","className","innerHTML","panes","getPanes","overlayMouseTarget","appendChild","x","y","overlayProjection","getProjection","fromLatLngToDivPixel","left","top","onRemove","parentNode","removeChild","prototype","OverlayView","setDefaultView","trim","addTrainingStage","newPhase","phase","current_stage","insert","number_completed","training_id","addTrainingCompletion","onAddTrainingCompletion","editMode","gcm_training_completions","saveTrainingCompletion","updateTrainingCompletion","onSaveTrainingCompletion","jQuery","MeasurementDetailsCtrl","measurementService","measurement","details","spinner","ns","gmaNamespace","da","total","local","my_measurements","trend","arrayToDataTable","filterSource","key","save","measurements","editForm","$dirty","format","measurement_type_id","measurement_type_ids","related_entity_id","$modelValue","saveMeasurement","approveSelfAssigned","state","blocked","success","MeasurementsCtrl","getMeasurements","lmiForm","$setPristine","hasOther","section","column","perm_link","$valid","person","editMeasurementDetails","getMeasurement","measurement_id","ReportsCtrl","walterMeanAvg","values","val","sort","b","shift","pop","Math","round","table","Table","dataTable","historical","chartData","DataTable","tableData","rows","addColumn","dates","addRows","row","addRow","tableDataTable","reverse","chartArea","legend","alignment","orientation","$resource","getAssignment","method","getAssignments","isArray","factory","getChurch","church_id","source","getMeasurementType","saveMeasurementType","$q","token","login","st","session_ticket","$broadcast","request","url","withCredentials","headers","attempts","responseError","status","deferred","defer","refresh","loginResponse","service_ticket","reject","promise","$http","getHighest","array","max","getHighestCount","leaders_trained","put","post","deleteTraining","training_completion","deleteTrainingCompletion","settingsService","apiUrl","base","version","appUrl","measurementsApi","tab","requiredRoles","$get","mobileapps","namespace","provider"],"mappings":"CAAA,SAAAA,GACA,YACAA,GAAAC,OAAA,OACA,UACA,eACA,aACA,kBACA,iBACA,cACA,kBAEAD,SCXA,SAAAA,GACA,YACAA,GAAAC,OAAA,mBACA,wBACA,sBACA,+BACA,6BAEAD,SCRA,SAAAA,GACA,YACAA,GAAAC,OAAA,sBACAD,SCHA,SAAAA,GACA,YACAA,GAAAC,OAAA,mBACAD,SCHA,SAAAA,GACA,YACAA,GAAAC,OAAA,gBACA,4BACA,2BAEAD,SCNA,SAAAA,GACA,YACAA,GAAAC,OAAA,6BACAD,SCHA,SAAAA,GACA,YACAA,GAAAC,OAAA,2BACAD,SCHA,SAAAA,GACA,YACAA,GAAAC,OAAA,oCACAD,SCHA,SAAAA,GACA,YACAA,GAAAC,OAAA,+BACAD,SCHA,SAAAA,GACA,YACAA,GAAAC,OAAA,iCACAD,SCHA,SAAAA,GACA,YACAA,GAAAC,OAAA,6BACAD,SCHA,WACA,YACAA,SAAAC,OAAA,OACAC,KAAA,aAAA,SAAA,YAAA,iBAAA,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAOA,GALAJ,EAAAK,SACAC,UAAA,GAIA,mBAAAC,QAAAC,OAAA,CACA,GAAAC,GAAAF,OAAAC,OAAAE,SAAAC,IACAF,IACAP,EAAAU,KAAAH,EAAAI,MAAA,IAGAb,EAAAc,IAAA,yBAAA,WACAP,OAAAC,OAAAE,SAAAC,KAAA,IAAAT,EAAAU,SAKAX,EAAAc,SAIAZ,EAAAa,aAAAZ,EAAAa,WAEAC,QAAA,iBAAA,gBAAA,mBAAA,mBAAA,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAD,EAAAE,UAAAjB,OAAAkB,IAAAP,QAGAG,EAAAK,2BAAA,mDAGAN,EAAAO,aAAAC,KAAA,kBAIA/B,QAAAgC,QAAAP,EAAAQ,SAAA,SAAAC,EAAAC,GACA,IAAAA,GACAb,EAAAc,WAAAC,WAAAH,EAAAnB,OAEAO,EACAgB,KAAAJ,EAAAnB,MACAwB,YAAAL,EAAAK,YACAC,WAAAN,EAAAM,eAMAd,EAAAe,UAAA,oBAAA,YAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA,GAAAF,EAAAG,EAAAH,UAUA,OATAG,GAAAH,YAAA,SAAA,WAAA,SAAA,YAAA,SAAAI,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,IAAA,eACAH,GAAAI,KAAA,OAAAF,EAAAF,EAAAK,MAAA,IAAAP,IACAG,EAAAK,OAAAZ,EAAAa,MACAC,OAAAV,EACAW,SAAAV,EACAW,OAAAV,MAGAJ,KAGAhB,EAAAe,UAAA,iBAAA,YAAA,SAAAC,GACA,GAAAe,GAAAf,EAAA,GAAAF,EAAAiB,EAAAjB,UAUA,OATAiB,GAAAjB,YAAA,SAAA,WAAA,SAAA,YAAA,SAAAI,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,IAAA,eACAH,GAAAI,KAAA,OAAAF,EAAAF,EAAAK,MAAAL,EAAAY,QAAA,IAAAd,IACAG,EAAAK,OAAAZ,EAAAa,MACAC,OAAAV,EACAW,SAAAV,EACAW,OAAAV,MAGAJ,WC9EA,WACA,YAEA,SAAAiB,GAAAL,EAAAM,EAAAvD,EAAAwD,EAAAvD,EAAAwD,EAAAC,EAAAxD,EAAAyD,GA4DA,QAAAC,GAAAC,GACA,GAAAC,KAaA,OAZAnE,SAAAgC,QAAAkC,EAAA,SAAAE,GACAD,EAAApC,KAAAqC,GACAA,EAAAC,eAAA,mBAAA,gBAAAD,GAAAE,iBACAH,EAAAA,EAAAI,OAAAN,EAAAG,EAAAE,oBAKAH,EAAAK,EAAAC,OAAAN,EAAA,SAAAO,GACA,MAAA,WAAAA,EAAAC,UAAA,EAAA,IAGAH,EAAAI,KAAAT,GAAA,EAAA,SAAAO,GACA,MAAAA,GAAAG,cAzEAvB,EAAAjD,UAAAA,EAEAiD,EAAAwB,KAAAvE,EAAAuE,KAMAxB,EAAArC,IAAA,eAAA,SAAA8D,EAAAC,GACA,mBAAAA,GAAAC,aAEA3B,EAAA4B,cAAA,KAKA5B,EAAA6B,OAAA,sBAAA,SAAAF,EAAAG,GACAH,IAAAG,IAEApB,EAAAqB,MAAA,uBAEA,gBAAAJ,KACAjF,QAAAsF,YAAAhC,EAAA9C,QAAA+E,cAAAf,EAAAgB,SAAAhB,EAAAiB,MAAAR,EAAA,MAAA3B,EAAA9C,QAAA+E,WAAAG,OACApC,EAAA9C,QAAA+E,WAAA3B,EAAA,WAAAqB,EAAA,QAAA,IAEA3B,EAAA9C,QAAA2D,WAAAF,EAAAgB,WAEA3B,GAAA9C,QAAA+E,WACAjC,EAAA9C,QAAA2D,kBAKAb,EAAA6B,OAAA,qBAAA,SAAAI,EAAAH,GACAG,IAAAH,IAEApB,EAAAqB,MAAA,uBAAAE,EAAApC,MAEA,gBAAAoC,KAEAA,EAAAI,KAAAC,OAAA,GAEA,mBAAAtC,GAAA9C,QAAAqF,KAAAN,EAAAI,KAAAG,QAAAxC,EAAA9C,QAAAqF,KAAA,KACAvC,EAAA9C,QAAAqF,IAAAjC,EAAA,WAAA2B,EAAAI,KAAArC,EAAAyC,SAAA,UAKAzC,GAAA9C,QAAAqF,QAKAvC,EAAA9C,QAAAwF,QAAA,SAAAC,GACA,MAAA,mBAAA3C,GAAA9C,QAAA+E,YAAA,mBAAAjC,GAAA9C,QAAA+E,WAAAZ,WAAA,EACA,gBAAAsB,GAAAA,GAAA3C,EAAA9C,QAAA+E,WAAAZ,UAAAH,EAAAgB,SAAAS,EAAA3C,EAAA9C,QAAA+E,WAAAZ,YA2BArB,EAAA4C,WACAC,GAAA,qBACAC,IAAA,0BACAC,IAAA,aACAC,IAAA,eAGAhD,EAAAyC,QAAA,SAAAQ,GACA,MAAAjD,GAAA4C,UAAAK,GAOA,KAAA,GADAC,MAAAC,EAAAC,SAAAC,KAAA,GACAxE,EAAA,EAAA,GAAAA,EAAAA,IACAqE,EAAAzE,KAAA0E,EAAAG,SACAH,EAAAI,SAAA,EAAA,IAEAvD,GAAAkD,QAAAA,EACAlD,EAAA9C,QAAAsG,OAAAN,EAAA,GAEAlD,EAAAyD,WAAA,WACA,GAAAC,GAAA1D,EAAAkD,QAAAV,QAAAxC,EAAA9C,QAAAsG,OACAE,GAAAA,EAAA,GAAA1D,EAAAkD,QAAAZ,OAAA,EAAAoB,EAAA,EACA1D,EAAA9C,QAAAsG,OAAAxD,EAAAkD,QAAAQ,IAGA1D,EAAA2D,WAAA,WACA,GAAAD,GAAA1D,EAAAkD,QAAAV,QAAAxC,EAAA9C,QAAAsG,OACAE,GAAA,EAAAA,EAAA,EAAA1D,EAAAkD,QAAAZ,OAAA,EAAAoB,EAAA,EACA1D,EAAA9C,QAAAsG,OAAAxD,EAAAkD,QAAAQ,IAOA1D,EAAA4D,OAAA,WACA5G,EAAA4G,SAAAC,KAAA,WACAzG,OAAAG,SAAAN,EAAA6G,IAAAF,UAIA5D,EAAA+D,kBAAA,WACA/G,EAAA4G,UAGA5D,EAAA4B,aAAA,SAAAoC,GACAA,EAAA,mBAAAA,GAAAA,GAAA,CACA,IAAAC,GAAA1D,EAAA2D,MACAjF,YAAA,8BACAC,WAAA,mBACAiF,SAAAH,EACAI,SAAAJ,GAAA,EAAA,SACAK,SACAxD,WAAA,WACA,MAAAL,GAAA8D,gBAAAC,UAEAP,WAAA,WACA,MAAAA,MAIAC,GAAAO,OAAAX,KAAA,SAAA/C,GACAL,EAAAgE,eACAC,SAAA1E,EAAA9C,QAAAyH,KAAAC,aACArD,YAAAT,EAAAS,YACAF,UAAA,iBACA,SAAAY,GACA,mBAAAjC,GAAA9C,QAAAyE,YAEA3B,EAAA9C,QAAAyE,aAAAM,IAIAjC,EAAA9C,QAAAyE,YAAAlD,KAAAwD,GAGAjC,EAAA9C,QAAA+E,WAAAA,QAMAjC,EAAA6E,QAAA,SAAAC,EAAAC,GACA,KAAAA,GAAAD,EAAA/D,eAAA,WACA,mBAAA+D,EAAAE,SACA5H,OAAAG,SAAAH,OAAAG,SAAA0H,UAGAjF,EAAAkF,MAAAJ,EAAAE,QAGAhF,EAAAmF,WAAAlI,EAAAkI,WC4JC9E,EAAQ+E,SAAW,SAAU,UAAW,YAAa,SAAU,iBAAkB,kBAAmB,oBAAqB,WAAY,QDzJtI1I,QAAAC,OAAA,mBAAAuC,WAAA,UAAAmB,MExLA,WACA,YAEA,SAAAgF,GAAArF,EAAAsF,EAAAzE,EAAAmD,GACAhE,EAAAa,WAAAA,EACAb,EAAAgE,WAAAA,EAEAhE,EAAAuF,KAAA,WACAD,EAAAE,MAAAxF,EAAAc,WAGAd,EAAAyF,OAAA,WACAH,EAAAI,QAAA,WDyVCL,EAAiBD,SAAW,SAAU,iBAAkB,aAAc,cCrVvE1I,QAAAC,OAAA,mBAAAuC,WAAA,mBAAAmG,MChBA,WACA,YAEA3I,SAAAC,OAAA,kBACAgJ,UAAA,YAAA,WACA,OACAC,SAAA,IACAC,QAAA,UACAC,KAAA,SAAA9F,EAAAC,EAAAC,EAAAb,GACA,GAAAA,EAAA,CACA,GAAA0G,GAAA,GAAAC,QAAAC,cAAAC,UAAAjG,EAAAN,IAAA,GAEAN,GAAA8G,QAAA,WACAJ,EAAAK,KAAA/G,EAAAgH,YAAAC,MAAA,IAAAC,OAAA,OAGAvG,EAAArC,IAAA,WAAA,WACAoI,EAAA,gBCjBA,WACA,YAEArJ,SAAAC,OAAA,OACA6J,OAAA,cAAA,WACA,MAAA,UAAAC,EAAA9D,GACA,GAAA+D,KAQA,OAPAhK,SAAAgC,QAAA+H,EAAA,SAAAE,GACA,gBAAAhE,IAAAA,GAAAgE,EAAAtF,UACAqF,EAAAjI,KAAAkI,GACA,gBAAAhE,IAAAzB,EAAAgB,SAAAS,EAAAgE,EAAAtF,YACAqF,EAAAjI,KAAAkI,KAGAD,SCdA,WACA,YAEA,SAAAE,GAAA5G,EAAAO,EAAAD,EAAAG,EAAAD,EAAAqG,GACA7G,EAAA9C,QAAAC,UAAA,EAEA6C,EAAA8G,QACA7D,MAAA,SAAA8D,KAAA,WACA9D,MAAA,mBAAA8D,KAAA,uBACA9D,MAAA,SAAA8D,KAAA,WACA9D,MAAA,UAAA8D,KAAA,YACA9D,MAAA,gBAAA8D,KAAA,kBAGA/G,EAAA6B,OAAA,iCAAA,SAAAN,GACA,mBAAAA,KACAvB,EAAAc,SAAAN,EAAAwG,aAAAzF,YAAAA,GAAA,WACAvB,EAAA9C,QAAAC,UAAA,EAEA6C,EAAAiH,oBACAJ,EAAAK,sBAAA3C,SAAAV,KAAA,SAAAsD,GACAzK,QAAAgC,QAAAyI,EAAA,SAAAC,GAEAA,EAAAC,QADAD,EAAAE,WAAApG,EAAAgB,SAAAlC,EAAAc,SAAAyG,SAAAH,EAAAI,iBACA,EACAJ,EAAAE,WAAApG,EAAAgB,SAAAlC,EAAAc,SAAA2G,SAAAL,EAAAI,iBAGA,GAFA,EAIAxH,EAAAiH,iBAAAxI,KAAA2I,YAMApH,EAAA0H,SAAA,SAAAzF,GACAxB,EAAAkH,gBACAC,cAAA3F,EAAA2F,gBACAvG,UAAAY,EAAAZ,aAGArB,EAAA6H,2BAAA,SAAAC,GACA,GAAAC,GAAA7G,EAAAiB,MAAA7B,EAAA,cAAAN,EAAA9C,QAAA2D,YAAA,SAAA,qBAAA,cACA,OAAAK,GAAAgB,SAAA6F,EAAAD,IAGA9H,EAAAyE,cAAA,WACAlE,EAAA2D,MACAjF,YAAA,sCACAC,YAAA,SAAA,iBAAA,QAAA,SAAAc,EAAAsF,EAAAwB,GACA9G,EAAA8G,MAAAA,EAEA9G,EAAAwF,MAAA,WACAF,EAAAI,WAGA1F,EAAAgI,IAAA,WACA1C,EAAAE,MAAAxF,EAAAiI,cAGA5D,SACAyC,MAAA,WACA,MAAA9G,GAAA8G,UAGAtC,OAAAX,KAAA,SAAAoE,GACAA,EAAA1G,YAAAvB,EAAA9C,QAAA+E,WAAAV,YACAd,EAAAgE,cAAAwD,EAAA,WACAjI,EAAAc,SAAAN,EAAAwG,aAAAzF,YAAAvB,EAAA9C,QAAA+E,WAAAV,mBAKAvB,EAAAkI,eAAA,WACA3H,EAAA2D,MACAjF,YAAA,uCACAC,YAAA,SAAA,iBAAA,SAAAc,EAAAsF,GACAtF,EAAAwF,MAAA,WACAF,EAAAI,WAGA1F,EAAAgI,IAAA,WACA1C,EAAAE,MAAAxF,EAAAmI,kBAGA3D,OAAAX,KAAA,SAAAsE,GACAA,EAAAC,UAAApI,EAAA9C,QAAA+E,WAAAV,YACAf,EAAA6H,eAAAF,EAAA,WACAzL,QAAA4L,UAAAtI,EAAA9C,QAAA+E,WAAAjB,gBACAhB,EAAA9C,QAAA+E,WAAAjB,eAAAvC,KAAA0J,GAEAnI,EAAA9C,QAAA+E,WAAAjB,gBAAAmH,QAMAnI,EAAAuI,eAAA,WACAhI,EAAA2D,MACAjF,YAAA,2CACAC,YAAA,SAAA,iBAAA,SAAAc,EAAAsF,GACAtF,EAAAwF,MAAA,WACAF,EAAAI,WAGA1F,EAAAgI,IAAA,WACA1C,EAAAE,MAAAxF,EAAAwI,qBAGAhE,OAAAX,KAAA,SAAA2E,GACAA,EAAAhB,eAAA,UAAAgB,EAAAhB,eACAX,EAAA4B,mBAAAD,EAAA,iBAKAxI,EAAA0I,YAAA,WACA,GAAA5H,IACAS,YAAAvB,EAAAc,SAAAS,YACAoH,SAAA3I,EAAAc,SAAA6H,SACA9I,KAAAG,EAAAc,SAAAjB,KACA+I,OAAA5I,EAAAc,SAAA8H,OACAC,QAAA7I,EAAAc,SAAA+H,QACAC,QAAA9I,EAAAc,SAAAgI,QACAC,QAAA/I,EAAAc,SAAAiI,QACAC,UAAAhJ,EAAAc,SAAAd,WACAyH,SAAAvG,EAAAiB,MAAAjB,EAAA+H,MAAAjJ,EAAAiH,kBACAK,WAAA,EACAD,SAAA,IACA,kBACAE,SAAArG,EAAAiB,MAAAjB,EAAA+H,MAAAjJ,EAAAiH,kBACAK,WAAA,EACAD,SAAA,IACA,kBAEArH,GAAAc,SAAAC,eAAA,cAAA,gBAAAf,GAAAc,SAAAsH,YACAtH,EAAAsH,UAAApI,EAAAc,SAAAsH,WAEApI,EAAAkJ,oBAAA1I,EAAA2I,eAAArI,EACA,WACAd,EAAAoJ,kBACAhC,KAAA,UACAiC,IAAA,kCAEA,SAAAvE,GACA9E,EAAAoJ,kBACAhC,KAAA,SACAiC,IAAAvE,EAAAwE,SAAA,sCJ0ZC1C,EAAUxB,SAAW,SAAU,SAAU,UAAW,oBAAqB,kBAAmB,0BIpZ7F1I,QAAAC,OAAA,yBAAAuC,WAAA,YAAA0H,MCzJA,SAAA2C,GACA,YAEA,SAAAC,GAAAxJ,EAAAyJ,EAAAC,EAAAC,EAAAC,EAAApJ,EAAAvD,GAyCA,QAAA4M,KACA7J,EAAA8J,IAAA,GAAA9D,QAAA+D,KAAAC,IAAAC,SAAAC,eAAA,cAAAlK,EAAAmK,YACAnK,EAAA8J,IAAAM,YAAAC,gBAAA,KAEArE,OAAA+D,KAAAtI,MAAA6I,YAAAtK,EAAA8J,IAAA,OAAA,WACA9J,EAAA9C,QAAAC,UAAA,CACA,IAAAoN,GAAAvK,EAAA8J,IAAAU,YACAC,EAAAF,EAAAG,eACAC,EAAAJ,EAAAK,cAEAH,GAAAI,OAAAF,EAAAE,OAAAJ,EAAAK,OAAAH,EAAAG,MAEA9E,OAAA+D,KAAAtI,MAAAsJ,QAAA/K,EAAA8J,IAAA,UAGA9J,EAAAgL,iBAGAhL,EAAA8J,IAAAmB,WACAjL,EAAAkL,QAAArL,KAAA,IAEAG,EAAAmL,aAAA,GAAAnF,QAAA+D,KAAAqB,WACApL,EAAAqL,oBAAA3B,EAAA,yFAAA1J,GACAA,EAAAmL,aAAAf,YAAAkB,SAAA,MACAtL,EAAAuL,eAAA,GAAAvF,QAAA+D,KAAAqB,WACApL,EAAAwL,sBAAA9B,EAAA,6FAAA1J,GACAA,EAAAuL,eAAAnB,YAAAkB,SAAA,MAEAtL,EAAAyL,gBAAA,GAAAzF,QAAA+D,KAAAqB,WACApF,OAAA+D,KAAAtI,MAAA6I,YAAAtK,EAAAyL,gBAAA,aAAA,WACAzL,EAAA0L,oBAEA1L,EAAA2L,uBAAAjC,EAAA,4FAAA1J,GAGAA,EAAA4L,kBAAA,GAAA5F,QAAA+D,KAAAqB,WACApF,OAAA+D,KAAAtI,MAAA6I,YAAAtK,EAAA4L,kBAAA,aAAA,WACA5L,EAAA0L,oBAEA1L,EAAA6L,mBAAAnC,EAAA,gGAAA1J,GAEAA,EAAA8J,IAAAgC,gBACA9L,EAAA8J,IAAAiC,SACA/L,EAAA8J,IAAAiC,MAAAb,OAAA,GAAAlF,QAAA+D,KAAAiC,YACA/O,EAAAgP,WAAA,uBACA,GAAAjG,QAAA+D,KAAAmC,KAAA,GAAA,IACA,GAAAlG,QAAA+D,KAAAoC,MAAA,EAAA,GACA,GAAAnG,QAAA+D,KAAAoC,MAAA,GAAA,KAEAnM,EAAA8J,IAAAiC,MAAAK,QAAA,GAAApG,QAAA+D,KAAAiC,YACA/O,EAAAgP,WAAA,wBACA,GAAAjG,QAAA+D,KAAAmC,KAAA,GAAA,IACA,GAAAlG,QAAA+D,KAAAoC,MAAA,EAAA,GACA,GAAAnG,QAAA+D,KAAAoC,MAAA,GAAA,KAEAnM,EAAA8J,IAAAiC,MAAAM,YAAA,GAAArG,QAAA+D,KAAAiC,YACA/O,EAAAgP,WAAA,4BACA,GAAAjG,QAAA+D,KAAAmC,KAAA,GAAA,IACA,GAAAlG,QAAA+D,KAAAoC,MAAA,EAAA,GACA,GAAAnG,QAAA+D,KAAAoC,MAAA,GAAA,KAEAnM,EAAA8J,IAAAiC,MAAAO,MAAA,GAAAtG,QAAA+D,KAAAiC,YACA/O,EAAAgP,WAAA,sBACA,GAAAjG,QAAA+D,KAAAmC,KAAA,GAAA,IACA,GAAAlG,QAAA+D,KAAAoC,MAAA,EAAA,GACA,GAAAnG,QAAA+D,KAAAoC,MAAA,GAAA,KAEAnM,EAAA8J,IAAAiC,MAAAQ,YAAA,GAAAvG,QAAA+D,KAAAiC,YACA/O,EAAAgP,WAAA,uBACA,GAAAjG,QAAA+D,KAAAmC,KAAA,GAAA,IACA,GAAAlG,QAAA+D,KAAAoC,MAAA,EAAA,GACA,GAAAnG,QAAA+D,KAAAoC,MAAA,GAAA,KAEAnM,EAAA8J,IAAAiC,MAAAS,SAAA,GAAAxG,QAAA+D,KAAAiC,YACA/O,EAAAgP,WAAA,yBACA,GAAAjG,QAAA+D,KAAAmC,KAAA,GAAA,IACA,GAAAlG,QAAA+D,KAAAoC,MAAA,EAAA,GACA,GAAAnG,QAAA+D,KAAAoC,MAAA,GAAA,KAGAnM,EAAA8J,IAAA2C,KAAAxC,SAAAC,eAAA,QACAlK,EAAA8J,IAAA2C,KAAA/I,MAAA,GACA1D,EAAA8J,IAAA2C,KAAAC,MAAAC,QAAA,QACA3M,EAAA8J,IAAA8C,OAAA3C,SAAAC,eAAA,gBACAlK,EAAA8J,IAAA8C,OAAAlJ,MAAA,EACA1D,EAAA8J,IAAA8C,OAAAF,MAAAC,QAAA,QAEA3M,EAAA8J,IAAA+C,SAAA7G,OAAA+D,KAAA+C,gBAAAC,WAAAtO,KAAAuB,EAAA8J,IAAA2C,MACAzM,EAAA8J,IAAA+C,SAAA7G,OAAA+D,KAAA+C,gBAAAE,UAAAvO,KAAAuB,EAAA8J,IAAA8C,QACA5M,EAAA9C,QAAA+E,YAAAjC,EAAAiN,wBAEAjN,EAAA6B,OAAA,qBAAA,SAAAqL,GACA,mBAAAA,KAEAA,GAAAA,EAAAnM,eAAA,aACAf,EAAA8J,IAAAqD,UAAA,GAAAnH,QAAA+D,KAAAqD,OAAAF,EAAA3P,SAAA8P,SAAAH,EAAA3P,SAAA+P,YAEAJ,GAAAA,EAAAnM,eAAA,kBACAf,EAAA8J,IAAAyD,QAAAC,SAAAN,EAAAO,mBAGA,GA7IAzN,EAAA9C,QAAAC,UAAA,EACA6C,EAAAiM,WAAAhP,EAAAgP,WACAjM,EAAA0N,mBAAA,EACA1N,EAAA2N,YAAA,EACA3N,EAAA4N,aAAA,EACA5N,EAAA6N,kBAAA,EACA7N,EAAA8N,YAAA,EACA9N,EAAA8N,YAAA,EACA9N,EAAA+N,SAAA,EACA/N,EAAAgO,WAAA,WACAhO,EAAAiO,eAAA,EACAjO,EAAAkO,SAAA,OACAlO,EAAAmO,WAAA,EACAnO,EAAAoO,cACApO,EAAAqO,eACArO,EAAAsO,eAAA,EACAtO,EAAA8L,gBACA9L,EAAAuO,YACAvO,EAAAwO,aACAxO,EAAAyO,eACAzO,EAAA0O,iBACAzL,MAAA,MAAA8D,KAAA,QACA9D,MAAA,MAAA8D,KAAA,QACA9D,MAAA,OAAA8D,KAAA,SACA9D,MAAA,GAAA8D,KAAA,UAEA/G,EAAA2O,MACAnC,UAAA,GAEAxM,EAAAmK,YACAyE,KAAA,EACAC,OAAA,GAAA7I,QAAA+D,KAAAqD,OAAA,EAAA,GACA0B,YAAA,EACAC,aAAA,EACAC,gBAAA,EACAC,mBAAA,EACAC,oBAAA,GAEAC,WAAAtF,EAAA,GA0GA7J,EAAA6B,OAAA,iCAAA,SAAAN,GACA,mBAAAA,IACAvB,EAAAyO,eACAzO,EAAAwO,eAEAxO,EAAAoP,kBACApP,EAAAqP,mBAIArP,EAAA6B,OAAA,iBAAA,SAAAqJ,GACA,GAAA,mBAAAA,IAAA,IAAAA,EAAA,CACA,GAAAD,GAAAjL,EAAA8J,IAAAmB,QAAAzE,OAAA,SAAA8I,GACA,MAAAA,GAAAlN,IAAA8I,EAAA9I,IAEA,IAAA6I,EAAA3I,OAAA,EAAA,CACA,GAAAiN,GAAAtE,EAAA,EACAjF,QAAA+D,KAAAtI,MAAAsJ,QAAAwE,EAAA,aAGAvP,GAAA8J,IAAAqD,UAAA,GAAAnH,QAAA+D,KAAAqD,OAAAlC,EAAAmC,SAAAnC,EAAAoC,eAIAtN,EAAA6B,OAAA,aAAA,WACA7B,EAAAoP,kBACApP,EAAAqP,kBAGArP,EAAA6B,OAAA,cAAA,SAAAU,GACA,mBAAAA,GACAvC,EAAAwO,aAEAxO,EAAAqP,kBAIArP,EAAAoP,gBAAAlO,EAAAsO,SAAA,WACA,GAAA,mBAAAxP,GAAA9C,QAAA+E,WAAA,CACA,GAAAwN,IACAlO,YAAAvB,EAAA9C,QAAA+E,WAAAV,YAEA,gBAAAvB,EAAAgO,WACAyB,EAAA,SAAA,OACA,SAAAzP,EAAAgO,aAAAyB,EAAA,UAAA,QAEAzP,EAAAyO,YAAA7E,EAAA8F,YAAAD,KACA,KAEAzP,EAAAqP,cAAAnO,EAAAsO,SAAA,WAEA,mBAAAxP,GAAA9C,QAAA+E,YAAAjC,EAAA9C,QAAAwF,SAAA,SAAA,qBACAiH,EAAAgG,aAAA3P,EAAA9C,QAAA0S,aAAA5P,EAAA9C,QAAA+E,WAAAV,YAAAvB,EAAA9C,QAAAqF,IAAA,OAAAvC,EAAAkO,SAAAlO,EAAAmO,WAAAtK,KAAA,SAAA2K,GACAxO,EAAAwO,UAAAA,GACAxO,EAAA6E,SAGA7E,EAAAwO,cAEA,KAEAxO,EAAAgL,aAAA9J,EAAAsO,SAAA,WACA,GAAA,mBAAAxP,GAAA9C,QAAA+E,WAAA,CAEA4N,QAAAC,IAAA,mBACA,IAAAvF,GAAAvK,EAAA8J,IAAAU,YACAC,EAAAF,EAAAG,eACAC,EAAAJ,EAAAK,eACA6E,GACAlO,YAAAvB,EAAA9C,QAAA+E,WAAAV,YACAwO,QAAApF,EAAAE,MACAmF,QAAAvF,EAAAI,MACAoF,SAAAtF,EAAAG,MACAoF,SAAAzF,EAAAK,MAEA9K,GAAA0N,oBAAA+B,EAAA,kBAAA,QACAzP,EAAA2N,aAAA8B,EAAA,WAAA,QACAzP,EAAA4N,cAAA6B,EAAA,YAAA,QACAzP,EAAA6N,mBAAA4B,EAAA,iBAAA,QACA,eAAAzP,EAAAgO,WACAyB,EAAA,SAAA,OACA,SAAAzP,EAAAgO,aAAAyB,EAAA,UAAA,QAGAzP,EAAA8J,IAAAqG,WAAA,KAAAV,EAAA,eAAA,SAEA7F,EAAA8F,YAAAD,GAAAlL,SAAAV,KAAA7D,EAAAoQ,cAAApQ,EAAA6E,WACA,KAEA7E,EAAAqQ,YAAA,WACA3T,QAAAgC,QAAAsB,EAAA8J,IAAAgC,aAAA,SAAAwE,GACAA,EAAAC,OAAA,SAIAvQ,EAAAwQ,SAAA,WACAjH,EAAA,aAAAkH,UAGAzQ,EAAA6B,OAAA,aAAA,WACA,mBAAA7B,GAAA8J,KACApN,QAAAgC,QAAAsB,EAAA8J,IAAAgC,aAAA,SAAA4E,GACAA,EAAAC,WAAA3Q,EAAA8N,gBAKA9N,EAAA6B,OAAA,UAAA,WACA7B,EAAA+N,QACAxE,EAAA,aAAAoF,OAEApF,EAAA,aAAAqH,SAIA5Q,EAAA6Q,YAAA,WACA7Q,EAAAgL,gBAGAhL,EAAA8Q,UAAA,WACApU,QAAAgC,QAAAsB,EAAA8J,IAAAmB,QAAA,SAAA7J,GAEA,GAAA,IAAAA,EAAAgB,GAAA,CACApC,EAAAoO,WAAA7M,YAAAvB,EAAA9C,QAAA+E,WAAAV,YAEAvB,EAAAoO,WAAAf,SAAAjM,EAAA2P,cAAAlG,MACA7K,EAAAoO,WAAAd,UAAAlM,EAAA2P,cAAAjG,MACA+E,QAAAC,IAAA9P,EAAAoO,YACAxE,EAAAkH,UAAA9Q,EAAAoO,YAAA7J,SAAAV,KAAA7D,EAAA6Q,YAAA7Q,EAAA6E,SAEAzD,EAAAmP,OAAA,KACA,IAAAS,GAAAhR,EAAA8J,IAAAmB,QAAAgG,OAAAjR,EAAA8J,IAAAmB,QAAAzI,QAAApB,GAAA,EAEA4P,GAAA,SAKAhR,EAAAkR,YAAA,WACAxU,QAAAgC,QAAAsB,EAAA8J,IAAAmB,QAAA,SAAA7J,GAEA,GAAA,IAAAA,EAAAgB,GAAA,CACApC,EAAAmR,aAAA5P,YAAAvB,EAAA9C,QAAA+E,WAAAV,YACAvB,EAAAmR,aAAA9D,SAAAjM,EAAA2P,cAAAlG,MACA7K,EAAAmR,aAAA7D,UAAAlM,EAAA2P,cAAAjG,MACA9K,EAAAmR,aAAA5O,IAAAvC,EAAA9C,QAAAqF,IACAoH,EAAAuH,YAAAlR,EAAA9C,QAAA0S,aAAA5P,EAAAmR,cAAAtN,KACA7D,EAAAqP,cACArP,EAAA6E,SAGAzD,EAAAmP,OAAA,KACA,IAAAS,GAAAhR,EAAA8J,IAAAmB,QAAAgG,OAAAjR,EAAA8J,IAAAmB,QAAAzI,QAAApB,GAAA,EAEA4P,GAAA,SAKAhR,EAAA0L,gBAAA,WACAhP,QAAAgC,QAAAsB,EAAA8J,IAAAmB,QAAA,SAAA7J,GACA,GAAAA,EAAAgB,GAAA,EAAA,CAEAhB,EAAAmP,OAAA,KACA,IAAAS,GAAAhR,EAAA8J,IAAAmB,QAAAgG,OAAAjR,EAAA8J,IAAAmB,QAAAzI,QAAApB,GAAA,EAEA4P,GAAA,QAGAhR,EAAAoO,cACApO,EAAAmR,iBAGAnR,EAAAoR,cAAA,WACA,GAEA,GAFApR,EAAA8J,IAAAmB,QAAAzE,OAAA,SAAA8I,GACA,MAAAA,GAAAlN,GAAA,IACAE,OAAA,CACAtC,EAAAmR,eAEA,IAAA5B,GAAA,GAAA8B,kBACAC,SAAAtR,EAAA8J,IAAAyH,YACAzH,IAAA9J,EAAA8J,IACA0H,MAAA,eACApP,GAAA,GACAqP,cAAA,EACAC,OAAA,KACAC,KAAA3R,EAAA8J,IAAAiC,MAAAS,SACAoF,aAAA,WACAC,YAAA,GAAA7L,QAAA+D,KAAAoC,MAAA,GAAA,IACA2F,WAAA,kBACAC,mBAAA,EACAC,WAAA,GAEAhS,GAAA8J,IAAAmI,oBAAA1C,EACAA,EAAA2C,aAAAlM,OAAA+D,KAAAoI,UAAAC,QAEApS,EAAA4L,kBAAAyG,cACArS,EAAA4L,kBAAA0G,WAAAtS,EAAA6L,mBAAA,GAAA0G,aAEAvS,EAAA4L,kBAAA1H,KAAAlE,EAAA8J,IAAAyF,GAEAvP,EAAA8J,IAAAmB,QAAAxM,KAAA8Q,KAIAvP,EAAAwS,aAAA,WACAxS,EAAAgL,gBAGAhL,EAAAyS,UAAA,WACA,GAEA,GAFAzS,EAAA8J,IAAAmB,QAAAzE,OAAA,SAAA8I,GACA,MAAAA,GAAAlN,GAAA,IACAE,OAAA,CACAtC,EAAAoO,YAAAsE,SAAA,EAEA,IAAAnD,GAAA,GAAA8B,kBACAC,SAAAtR,EAAA8J,IAAAyH,YACAzH,IAAA9J,EAAA8J,IACA0H,MAAA,aACApP,GAAA,GACAqP,cAAA,EACAC,OAAA,KACAC,KAAA3R,EAAA8J,IAAAiC,MAAAQ,YACAqF,aAAA,WACAC,YAAA,GAAA7L,QAAA+D,KAAAoC,MAAA,GAAA,KACA2F,WAAA,kBACAC,mBAAA,EACAC,WAAA,GAEAhS,GAAA8J,IAAA6I,WAAApD,EACAA,EAAA2C,aAAAlM,OAAA+D,KAAAoI,UAAAC,QAEApS,EAAAyL,gBAAA4G,cACArS,EAAAyL,gBAAA6G,WAAAtS,EAAA2L,uBAAA,GAAA4G,aAEAvS,EAAAyL,gBAAAvH,KAAAlE,EAAA8J,IAAAyF,GAEAvP,EAAA8J,IAAAmB,QAAAxM,KAAA8Q,KAIAvP,EAAA4S,UAAA,WACA5S,EAAAsO,eAAA,EACAtO,EAAAmL,aAAA3F,QACAxF,EAAA6S,eAAA,GAAA7M,QAAA+D,KAAA+I,UACArV,MAAA,GAAAuI,QAAA+D,KAAAqD,OAAApN,EAAAqO,YAAAhB,SAAArN,EAAAqO,YAAAf,WAAA,GAAAtH,QAAA+D,KAAAqD,OAAApN,EAAAqO,YAAAhB,SAAArN,EAAAqO,YAAAf,YACAyF,UAAA,EACAC,YAAA,OACAC,cAAA,EACAC,aAAA,EACAnH,QACA4F,MACAlU,KAAAuI,OAAA+D,KAAAoJ,WAAAC,mBACAF,aAAA,KAEAG,OAAA,OACAC,OAAA,WAIAtT,EAAAuT,WAAAvN,OAAA+D,KAAAtI,MAAA6I,YAAAtK,EAAA8J,IAAA,YAAA,SAAA0J,GACAxT,EAAA6S,eAAAY,SAAAD,EAAAE,OAAA,GAAA1N,QAAA+D,KAAAqD,OAAApN,EAAAqO,YAAAhB,SAAArN,EAAAqO,YAAAf,eAGAtN,EAAA6S,eAAAtC,OAAAvQ,EAAA8J,MAIA9J,EAAA2T,WAAA,WACAjX,QAAAgC,QAAAsB,EAAA8J,IAAAmB,QAAA,SAAA7J,GACAA,EAAAgB,KAAApC,EAAAqO,YAAAjM,KACAhB,EAAA8Q,aAAAlM,OAAA+D,KAAAoI,UAAAC,QACAhR,EAAAwS,cAAA,GACA5T,EAAAmL,aAAA3F,YAKAxF,EAAA6T,aAAA,WACA,GAAAzR,GAAApC,EAAA8T,cAAA/S,eAAA,MAAAf,EAAA8T,cAAAC,GAAA/T,EAAA8T,cAAA1R,EACA1F,SAAAgC,QAAAsB,EAAA8J,IAAAmB,QAAA,SAAA7J,GACAA,EAAAgB,KAAA,IAAAA,IACAhB,EAAA8Q,aAAAlM,OAAA+D,KAAAoI,UAAAC,QACAhR,EAAAwS,cAAA,GACA5T,EAAAuL,eAAA/F,YAKAxF,EAAAgU,WAAA,WACApK,EAAAqK,WAAAjU,EAAAqO,aAAA9J,SAAAV,KAAA7D,EAAAwS,aAAAxS,EAAA6E,UAGA7E,EAAAkU,aAAA,WACAvK,EAAAwK,eAAAnU,EAAA9C,QAAA0S,aAAA5P,EAAA8T,eAAAjQ,KAAA7D,EAAAwS,aAAAxS,EAAA6E,UAGA7E,EAAA6B,OAAA,YAAA,WACA7B,EAAA8J,KACA9J,EAAAiN,0BAIAjN,EAAAiN,sBAAA,WACA,GAAA,mBAAAjN,GAAA8J,IAAA,CACA,GAAAsK,KACA1X,SAAAgC,QAAAsB,EAAA8J,IAAAmB,QAAA,SAAAuB,GACA,KAAAA,EAAApK,GAAA,IAEA,GAFApC,EAAAwO,UAAAhI,OAAA,SAAA6N,GACA,MAAAA,GAAAjS,IAAAoK,EAAApK,KACAE,OACA8R,EAAA3V,KAAA+N,GAEA,KAAAA,EAAApK,GAAA,IAAApC,EAAA2O,KAAAnC,UAAA4H,EAAA3V,KAAA+N,KAGA9P,QAAAgC,QAAA0V,EAAA,SAAA5H,GACAA,EAAA+D,OAAA,KACA,IAAAS,GAAAhR,EAAA8J,IAAAmB,QAAAgG,OAAAjR,EAAA8J,IAAAmB,QAAAzI,QAAAgK,GAAA,EACAwE,GAAA,OAGAhR,EAAA2O,KAAAnC,UACA9P,QAAAgC,QAAAsB,EAAAwO,UAAA,SAAAhC,GACA,GAEA,GAFAxM,EAAA8J,IAAAmB,QAAAzE,OAAA,SAAA8I,GACA,MAAAA,GAAAlN,KAAA,IAAAoK,EAAApK,KACAE,QACAkK,EAAAc,UAAA,CACA,GAAAiC,GAAA,GAAA8B,kBACAC,SAAA,GAAAtL,QAAA+D,KAAAqD,OAAAZ,EAAAa,SAAAb,EAAAc,WACAxD,IAAA9J,EAAA8J,IACA1H,GAAA,KAAAoK,EAAAzL,eAAA,MAAAyL,EAAAuH,GAAAvH,EAAApK,IACAoP,MAAAhF,EAAApF,KACAuK,KAAA3R,EAAA8J,IAAAiC,MAAAS,SACAoF,aAAA,GACAC,YAAA,GAAA7L,QAAA+D,KAAAoC,MAAA,GAAA,GACA2F,WAAA,cACAC,mBAAA,EACAC,WAAA,GAEAhS,GAAAuL,eAAA8G,cACArS,EAAAuL,eAAA+G,WAAAtS,EAAAwL,sBAAA,GAAA+G,aAGAvM,OAAA+D,KAAAtI,MAAA6I,YAAAiF,EAAA,QAAA,SAAA/C,EAAA+C,GACA,MAAA,YAEAvP,EAAA8T,cAAAtH,EACAxM,EAAA8T,cAAAQ,UAAA,WAAAtU,EAAA9C,QAAA+E,WAAAZ,WAAA,qBAAArB,EAAA9C,QAAA+E,WAAAZ,YAAAmL,EAAAjL,cAAAvB,EAAA9C,QAAA+E,WAAAV,YAEAvB,EAAAuU,SACAvU,EAAAuL,eAAA/F,QACAxF,EAAAuL,eAAAnB,YAAAkB,SAAA,MACAtL,EAAAuL,eAAArH,KAAAlE,EAAA8J,IAAAyF,KAGA/C,EAAA+C,EAAAvP,IAEAgG,OAAA+D,KAAAtI,MAAA6I,YAAAiF,EAAA,UAAA,WACAM,QAAAC,IAAAP,GACA/C,EAAAa,SAAAkC,EAAAwB,cAAAlG,MACA2B,EAAAc,UAAAiC,EAAAwB,cAAAjG,MACAnB,EAAAwK,eAAAnU,EAAA9C,QAAA0S,aAAApD,GAAA3I,KAAA7D,EAAAwS,aAAAxS,EAAA6E,SACA0K,EAAA2C,aAAA,MACA3C,EAAAqE,cAAA,KAGA5T,EAAA8J,IAAAmB,QAAAxM,KAAA8Q,QAOAvP,EAAA6B,OAAA,gBAAA7B,EAAAiN,uBAAA,GAEAjN,EAAAoQ,cAAA,SAAAtL,GACA9E,EAAAuO,SAAAzJ,EACA+K,QAAAC,IAAA,gBACA9P,EAAAqQ,cACArQ,EAAAwQ,UAKA,IAAA4D,KAEA1X,SAAAgC,QAAAsB,EAAA8J,IAAAmB,QAAA,SAAAC,GACAA,EAAA9I,GAAA,IAGA,GAFA0C,EAAA0B,OAAA,SAAA8I,GACA,MAAAA,GAAAlN,IAAA8I,EAAA9I,IAAA,GAAAkN,EAAAmC,gBACAnP,QAAA4I,EAAAuG,cAAA,IACA2C,EAAA3V,KAAAyM,KAKAxO,QAAAgC,QAAA0V,EAAA,SAAAlJ,GAIAA,EAAAqF,OAAA,KACA,IAAAS,GAAAhR,EAAA8J,IAAAmB,QAAAgG,OAAAjR,EAAA8J,IAAAmB,QAAAzI,QAAA0I,GAAA,EAEA8F,GAAA,OAIAtU,QAAAgC,QAAAsB,EAAAuO,SAAA,SAAArD,GACA,GAEA,GAFAlL,EAAA8J,IAAAmB,QAAAzE,OAAA,SAAA8I,GACA,MAAAA,GAAAlN,IAAA8I,EAAA9I,KACAE,OAAA,CACA,GAAAiN,KAEA,IAAA,GAAArE,EAAAuG,cAAA,CACA,GAAA+C,KAEAA,GADA,GAAAtJ,EAAAuJ,YACAzU,EAAA8J,IAAAiC,MAAAM,YAEA,GAAAnB,EAAAuJ,YACAzU,EAAA8J,IAAAiC,MAAAb,OAEA,GAAAA,EAAAuJ,YACAzU,EAAA8J,IAAAiC,MAAAb,OAEA,GAAAA,EAAAuJ,YACAzU,EAAA8J,IAAAiC,MAAAO,MAEA,GAAApB,EAAAuJ,YACAzU,EAAA8J,IAAAiC,MAAAQ,YAGAvM,EAAA8J,IAAAiC,MAAAb,OAGAqE,EAAA,GAAA8B,kBACAC,SAAA,GAAAtL,QAAA+D,KAAAqD,OAAAlC,EAAAmC,SAAAnC,EAAAoC,WACAxD,IAAA9J,EAAA8J,IACA0H,MAAAtG,EAAArL,KACAuC,GAAA8I,EAAA9I,GACAqP,cAAAvG,EAAAuG,cACAE,KAAA6C,EACA5C,aAAA1G,EAAArL,KACAgS,YAAA,GAAA7L,QAAA+D,KAAAoC,MAAA,GAAA,GACA2F,WAAA,cACAC,mBAAA,EACAC,WAAA,IAEA9G,EAAAwJ,WAAA,IAAAxJ,EAAAyJ,GAAA,GAAA3U,GAAA4U,cAAA,GAAA5O,QAAA+D,KAAAqD,OAAAlC,EAAAmC,SAAAnC,EAAAoC,WAAApC,EAAAwJ,WAAAxJ,EAAAuJ,kBAGAlF,GAAA,GAAA8B,kBACAC,SAAA,GAAAtL,QAAA+D,KAAAqD,OAAAlC,EAAAmC,SAAAnC,EAAAoC,WACAxD,IAAA9J,EAAA8J,IACA1H,GAAA8I,EAAA9I,GACAqP,cAAAvG,EAAAuG,cACAE,KAAA3R,EAAA8J,IAAAiC,MAAAK,QACAwF,aAAA1G,EAAAuG,cAAAoD,WACAhD,YAAA,GAAA7L,QAAA+D,KAAAoC,MAAA,GAAA,IACA2F,WAAA,gBACAC,mBAAA,IAGA7G,EAAAwJ,WAAA,IAAAxJ,EAAAyJ,GAAA,GAAA3U,GAAA4U,cAAA,GAAA5O,QAAA+D,KAAAqD,OAAAlC,EAAAmC,SAAAnC,EAAAoC,WAAApC,EAAAwJ,WAAA,WAGA1U,GAAAmL,aAAAkH,cACArS,EAAAmL,aAAAmH,WAAAtS,EAAAqL,oBAAA,GAAAkH,aAGAvM,OAAA+D,KAAAtI,MAAA6I,YAAAiF,EAAA,QAAA,SAAArE,EAAAqE,GACA,MAAA,YACA,GAAAvP,EAAAsO,eACA,GAAA,GAAApD,EAAAuG,eAAAvG,EAAA9I,KAAApC,EAAAqO,YAAAjM,GAAA,CACA4D,OAAA+D,KAAAtI,MAAAqT,eAAA9U,EAAAuT,YACAvT,EAAAsO,eAAA,EACAtO,EAAA6S,eAAAY,SAAA,GAAAzN,QAAA+D,KAAAqD,OAAAlC,EAAAmC,SAAAnC,EAAAoC,WAAA,GAAAtH,QAAA+D,KAAAqD,OAAApN,EAAAqO,YAAAhB,SAAArN,EAAAqO,YAAAf,YAEA,IAAAc,KACAA,GAAAhM,GAAApC,EAAAqO,YAAAjM,GACAgM,EAAAhG,UAAA8C,EAAA9I,GACApC,EAAAqO,YAAAjG,UAAA8C,EAAA9I,GACAyN,QAAAC,IAAA1B,GACAxE,EAAAqK,WAAA7F,GAAA7J,SAAAV,KAAA7D,EAAAwS,aAAAxS,EAAA6E,cAKA,IAAAqG,EAAAuG,eAGAzR,EAAAqO,YAAAnD,EACAlL,EAAAqO,YAAAiG,UAAA,WAAAtU,EAAA9C,QAAA+E,WAAAZ,WAAA,qBAAArB,EAAA9C,QAAA+E,WAAAZ,YAAA6J,EAAA3J,cAAAvB,EAAA9C,QAAA+E,WAAAV,YAEAvB,EAAAuU,SACAvU,EAAAmL,aAAA3F,QACAxF,EAAAmL,aAAAf,YAAAkB,SAAA,MACAtL,EAAAmL,aAAAjH,KAAAlE,EAAA8J,IAAAyF,KAKAvP,EAAA8J,IAAAqD,UAAAoC,EAAA+B,UACAtR,EAAA8J,IAAAyD,QAAAvN,EAAA8J,IAAAqG,UAAA,MAGAjF,EAAAqE,EAAAvP,IAEAgG,OAAA+D,KAAAtI,MAAA6I,YAAAiF,EAAA,UAAA,SAAArE,EAAAqE,GACA,MAAA,YAGA,GAAA,GAAArE,EAAAuG,cAAA,CACA,GAAArD,KACAA,GAAAhM,GAAA8I,EAAA9I,GACAgM,EAAAf,SAAAkC,EAAAwB,cAAAlG,MACAuD,EAAAd,UAAAiC,EAAAwB,cAAAjG,MACAI,EAAAmC,SAAAe,EAAAf,SACAnC,EAAAoC,UAAAc,EAAAd,UACA1D,EAAAqK,WAAA7F,GAAA7J,SAAAV,KAAA7D,EAAAwS,aAAAxS,EAAA6E,SAEA0K,EAAA2C,aAAA,MACA3C,EAAAqE,cAAA,MAIA1I,EAAAqE,IACAvP,EAAA8J,IAAAmB,QAAAxM,KAAA8Q,GAKA7S,QAAAgC,QAAAwM,EAAA6J,QAAA,SAAAC,GACA,GAAAC,GAAAjV,EAAAuO,SAAA/H,OAAA,SAAA8I,GACA,MAAAA,GAAAlN,IAAA4S,GAEA,IAAAC,EAAA3S,OAAA,EAAA,CACA,GAAA4S,GAAA,GAAAlP,QAAA+D,KAAA+I,UACArV,MAAA,GAAAuI,QAAA+D,KAAAqD,OAAA6H,EAAA,GAAA5H,SAAA4H,EAAA,GAAA3H,WAAA,GAAAtH,QAAA+D,KAAAqD,OAAAlC,EAAAmC,SAAAnC,EAAAoC,YACAyF,UAAA,EACAC,YAAA,OACAC,cAAA,EACAC,aAAA,EACAnH,QACA4F,MACAlU,KAAAuI,OAAA+D,KAAAoJ,WAAAC,mBACAF,aAAA,KAEAG,OAAA,OACAC,OAAA,UAGA4B,GAAA3E,OAAAvQ,EAAA8J,KACA9J,EAAA8J,IAAAgC,aAAArN,KAAAyW,SAWAlV,EAAA4U,cAAA,SAAAO,EAAAC,EAAAhO,GACArH,KAAAsV,KAAA,KACAtV,KAAAwQ,OAAAvQ,EAAA8J,KACA,GAAAsL,IAAAA,EAAA,MAGArV,KAAAuV,MAAA,WACA,GAAAC,GAAAtL,SAAAuL,cAAA,MACAD,GAAAE,UAAA,WACAF,EAAAG,UAAAN,EACArV,KAAAsV,KAAAE,CACA,IAAAI,GAAA5V,KAAA6V,UACAD,GAAAE,mBAAAC,YAAAP,IAIAxV,KAAAqG,KAAA,WACA,GAKA2P,GACAC,EANAT,EAAAxV,KAAAsV,KACAY,EAAAlW,KAAAmW,gBACA5E,EAAA2E,EAAAE,qBAAAhB,EAMA,YAAA/N,GACA2O,EAAA,IACAC,EAAA,GAGA5O,GAAA,GAAA,GAAAA,GACA2O,EAAA,IACAC,EAAA,KAGA,GAAA5O,GACA2O,EAAA,IACAC,EAAA,KAGA5O,GAAA,GACA2O,EAAA,IACAC,EAAA,MAIAD,EAAA,EACAC,EAAA,GAGAT,EAAA7I,MAAA0J,KAAA9E,EAAAyE,EAAAA,EAAA,KACAR,EAAA7I,MAAA2J,IAAA/E,EAAA0E,EAAAA,EAAA,MAGAjW,KAAAuW,SAAA,WACAvW,KAAAsV,KAAAkB,WAAAC,YAAAxW,EAAAqV,MACAtV,KAAAsV,KAAA,OAGArV,EAAA4U,cAAA6B,UAAA,GAAAzQ,QAAA+D,KAAA2M,YAEA1W,EAAA2W,eAAA,WACA,GAAA9H,GAAA7O,EAAA8J,IAAAyH,YACA3C,EAAA5O,EAAA8J,IAAAqG,SAGAnQ,GAAA9C,QAAA+E,WAAA1E,UACA8P,SAAAwB,EAAAhE,MACAyC,UAAAuB,EAAA/D,OAEA9K,EAAA9C,QAAA+E,WAAAwL,cAAAmB,EAGApO,EAAA2I,gBACA5H,YAAAvB,EAAA9C,QAAA+E,WAAAV,YACAoH,SAAA3I,EAAA9C,QAAA+E,WAAA0G,SAAAiO,OACArZ,SAAAyC,EAAA9C,QAAA+E,WAAA1E,SACAkQ,cAAAzN,EAAA9C,QAAA+E,WAAAwL,iBAIAzN,EAAA6W,iBAAA,SAAArK,GACA,GAAAsK,IACAC,MAAAvK,EAAAwK,cACA3T,KAAAmJ,EAAAyK,OAAA5T,KACA6T,iBAAA1K,EAAAyK,OAAAC,iBACAC,YAAA3K,EAAAzL,eAAA,MAAAyL,EAAAuH,GAAAvH,EAAApK,GAGAuH,GAAAyN,sBAAApX,EAAA9C,QAAA0S,aAAAkH,GAAAjT,KAAA7D,EAAAqX,wBAAArX,EAAA6E,SAEA2H,EAAAyK,OAAA5T,KAAA,GACAmJ,EAAAyK,OAAAC,iBAAA,GAIAlX,EAAAqX,wBAAA,SAAAvS,GACAA,EAAAwS,UAAA,EAEA5a,QAAAgC,QAAAsB,EAAAiC,WAAAuM,UAAA,SAAAhC,GACA,GAAApK,GAAAoK,EAAAzL,eAAA,MAAAyL,EAAAuH,GAAAvH,EAAApK,EACAA,IAAA0C,EAAAqS,cACA3K,EAAA+K,yBAAA9Y,KAAAqG,GACA0H,EAAAwK,cAAAlS,EAAAiS,MAAA,MAKA/W,EAAAwX,uBAAA,SAAArQ,GACAwC,EAAA8N,yBAAAzX,EAAA9C,QAAA0S,aAAAzI,GAAAtD,KAAA7D,EAAA0X,yBAAA1X,EAAA6E,ULqjBC2E,EAAQpE,SAAW,SAAU,YAAa,WAAY,kBAAmB,gBAAiB,kBAAmB,YKjjB9G1I,QAAAC,OAAA,uBAAAuC,WAAA,UAAAsK,IACAmO,QCzzBA,WACA,YAEA,SAAAC,GAAA5X,EAAAsF,EAAAuS,EAAApX,EAAAqX,EAAAC,EAAA9a,GACA+C,EAAAgY,SAAA,EACAhY,EAAA8X,YAAAA,EACA9X,EAAA+X,QAAAA,EACA/X,EAAAiY,GAAAhb,EAAAib,aAEAlY,EAAA+X,QAAAxT,SAAAV,KAAA,WACA7D,EAAAgY,SAAA,CAEA,IAAAG,KAAA,SAAA,QAAA,QAAA,YACAzb,SAAAgC,QAAAqZ,EAAAK,MAAA,SAAA/D,EAAA7Q,GACA9G,QAAAgC,QAAAqZ,EAAAM,MAAA,SAAA/H,EAAA0E,GACAA,IAAAxR,GACA9G,QAAAgC,QAAAqZ,EAAAO,gBAAA,SAAAlX,EAAA4T,GACAA,IAAAxR,GAAA2U,EAAA1Z,MAAAuW,EAAA1E,EAAA+D,EAAAjT,UAKApB,EAAAuY,MAAAvS,OAAAC,cAAAuS,iBAAAL,KAGAnY,EAAAyY,aAAA,SAAAhS,GACA,GAAAjC,KAMA,OALA9H,SAAAgC,QAAA+H,EAAA,SAAAxD,EAAAyV,GACAA,GAAAzb,EAAAib,cAAA,SAAAQ,IACAlU,EAAAkU,GAAAzV,KAGAuB,GAGAxE,EAAA2Y,KAAA,WACA3Y,EAAAgY,SAAA,CACA,IAAAY,KACAlc,SAAAgC,SAAA,QAAA,UAAA,SAAA0I,GACApH,EAAA6Y,SAAA9X,eAAAqG,IAAApH,EAAA6Y,SAAAzR,GAAA0R,QAAA,mBAAA9Y,GAAA6Y,SAAAzR,IACAwR,EAAAna,MACA+E,OAAAxD,EAAA9C,QAAAsG,OAAAuV,OAAA,WACAxW,IAAAvC,EAAA9C,QAAAqF,IAAA,IAAAtF,EAAAib,aACAc,oBAAAhZ,EAAA+X,QAAAkB,qBAAA7R,GACA8R,kBAAA,SAAA9R,EACApH,EAAA9C,QAAA+E,WAAAV,YACAvB,EAAA9C,QAAA+E,WAAAG,GACAa,MAAAjD,EAAA6Y,SAAAzR,GAAA+R,gBAKAP,EAAAtW,OAAA,EACAuV,EAAAuB,mBAAAR,EAAA,WACAtT,EAAAE,UAIAF,EAAAI,QAAA,WAIA1F,EAAAwF,MAAA,WACAF,EAAAI,QAAA,WAGA1F,EAAAqZ,oBAAA,SAAA1U,EAAAhC,GACA,GAAAgC,GAAAA,CACAA,GAAA2U,MAAA,UACA7Y,EAAAkH,gBACAC,cAAAjD,EAAAiD,gBACAvG,UAAAsB,GAAA,WACA,WAAAA,GACAgC,EAAA2U,MAAA,UACA3U,EAAA4U,SAAA,IAEA5U,EAAA6U,SAAA,EACA7U,EAAA2U,MAAA,WAEA,iBACA3U,GAAA2U,SNk3CC1B,EAAuBxS,SAAW,SAAU,iBAAkB,qBAAsB,oBAAqB,cAAe,UAAW,YM72CpI1I,QAAAC,OAAA,gCAAAuC,WAAA,yBAAA0Y,MCrFA,WACA,YAEA,SAAA6B,GAAAzZ,EAAAyJ,EAAAnJ,EAAAC,EAAAsX,EAAA5a,GACA+C,EAAA9C,QAAAC,UAAA,EACA6C,EAAAiY,GAAAhb,EAAAib,YAGA,IAAAwB,GAAAxY,EAAAsO,SAAA,WACA,mBAAAxP,GAAA9C,QAAA+E,YAAA,mBAAAjC,GAAA9C,QAAAsG,QAAA,mBAAAxD,GAAA9C,QAAAqF,MACAvC,EAAA9C,QAAAC,UAAA,EACA6C,EAAA2Z,QAAAC,eACA5Z,EAAA4Y,aAAAf,EAAA6B,iBACAnY,YAAAvB,EAAA9C,QAAA+E,WAAAV,YACAgB,IAAAvC,EAAA9C,QAAAqF,IACAiB,OAAAxD,EAAA9C,QAAAsG,OAAAuV,OAAA,YACA,WACA/Y,EAAA9C,QAAAC,UAAA,MAGA,IAEA6C,GAAA6B,OAAA,iCAAA,WACA6X,MAGA1Z,EAAA6B,OAAA,cAAA,WACA6X,MAGA1Z,EAAA6B,OAAA,iBAAA,WACA6X,MAGA1Z,EAAA6Z,SAAA,WACA,MAAA3Y,GAAA+H,MAAAjJ,EAAA4Y,cAAAkB,QAAA,QAAAC,OAAA,UAAAzX,OAAA,GAIAtC,EAAA2Y,KAAA,WACA,GAAAC,KACAlc,SAAAgC,QAAAsB,EAAA4Y,aAAA,SAAAd,GACA,GAAA7U,GAAAjD,EAAA2Z,QAAA7B,EAAAkC,UACA/W,GAAA6V,QAAA7V,EAAAgX,QACAla,KAAAtB,MACA+E,OAAAxD,EAAA9C,QAAAsG,OAAAuV,OAAA,WACAxW,IAAAvC,EAAA9C,QAAAqF,IAAA,IAAAtF,EAAAib,aACAc,oBAAAlB,EAAAmB,qBAAAiB,OACAhB,kBAAAlZ,EAAA9C,QAAA+E,WAAAG,GACAa,MAAAA,EAAAkW,eAGAP,GAEAA,EAAAtW,OAAA,EACAuV,EAAAuB,mBAAAR,EAAA,WACAc,MAIAA,KAIA1Z,EAAAma,uBAAA,SAAArC,GACA,GAAA7T,GAAA1D,EAAA2D,MACAjF,YAAA,qCACAC,WAAA,yBACAiF,UAAA,EACAC,UAAA,EACAC,SACAyT,YAAA,WACA,MAAAA,IAEAC,QAAA,WAEA,MAAAF,GAAAuC,gBACAC,eAAAvC,EAAAuC,eACA9Y,YAAAvB,EAAA9C,QAAA+E,WAAAV,YACAgB,IAAAvC,EAAA9C,QAAAqF,IACAiB,OAAAxD,EAAA9C,QAAAsG,OAAAuV,OAAA,gBAKA9U,GAAAO,OAAAX,KAAA,WACA6V,OP28CCD,EAAiBrU,SAAW,SAAU,YAAa,UAAW,SAAU,qBAAsB,YOt8C/F1I,QAAAC,OAAA,gCAAAuC,WAAA,mBAAAua,MC3FA,WACA,YAEA,SAAAa,GAAAta,EAAAyJ,EAAAoO,GA4FA,QAAA0C,GAAApT,GAEA,GAAAqT,MACApC,EAAA,CAMA,OALA1b,SAAAgC,QAAAyI,EAAA,SAAAsT,GACA,IAAAA,GACAD,EAAA/b,KAAAgc,KAGA,IAAAD,EAAAlY,OAAA,GAEAkY,EAAAlY,OAAA,IAEAkY,EAAAE,KAAA,SAAAxN,EAAAyN,GACA,MAAAzN,GAAAyN,IAIAH,EAAAI,QAGAJ,EAAAK,OAIAne,QAAAgC,QAAA8b,EAAA,SAAAC,GACArC,GAAAqC,IAIAK,KAAAC,MAAA3C,EAAAoC,EAAAlY,OAAA,KAAA,KAzHAtC,EAAA+F,MAAA,GAAAC,QAAAC,cAAAC,UAAA+D,SAAAC,eAAA,kBACAlK,EAAAgb,MAAA,GAAAhV,QAAAC,cAAAgV,MAAAhR,SAAAC,eAAA,iBAGA,IAAAwP,GAAAxY,EAAAsO,SAAA,WACA,mBAAAxP,GAAA9C,QAAA+E,YAAA,mBAAAjC,GAAA9C,QAAAsG,QAAA,mBAAAxD,GAAA9C,QAAAqF,YACAvC,GAAAkb,UACAlb,EAAA9C,QAAAC,UAAA,EACA6C,EAAA4Y,aAAAf,EAAA6B,iBACAnY,YAAAvB,EAAA9C,QAAA+E,WAAAV,YACAgB,IAAAvC,EAAA9C,QAAAqF,IACAiB,OAAAxD,EAAA9C,QAAAsG,OAAAuV,OAAA,WACAoC,YAAA,GACA,WACAnb,EAAA9C,QAAAC,UAAA,CAEA,IAAAie,GAAA,GAAApV,QAAAC,cAAAoV,UACAC,EAAA,GAAAtV,QAAAC,cAAAoV,UACAE,IACAH,GAAAI,UAAA,SAAA,QACA9e,QAAAgC,QAAAsB,EAAAyb,MAAA,SAAApY,EAAAK,GACA6X,EAAA7X,IAAAL,GACA3G,QAAAgC,QAAAsB,EAAA4Y,aAAA,SAAAd,GACA,IAAApU,GACA0X,EAAAI,UAAA,SAAA1D,EAAAjY,MAEA0b,EAAA7X,GAAAjF,KAAAqZ,EAAAM,MAAA/U,QAGA+X,EAAAM,QAAAH,GACAvb,EAAAkb,UAAAE,EAEAE,EAAAE,UAAA,SAAA,eACA9e,QAAAgC,QAAAsB,EAAA4Y,aAAA,SAAAd,EAAApU,GACA,GAAAiY,KACAjf,SAAAgC,QAAAsB,EAAAyb,MAAA,SAAApY,GACA,IAAAK,GAAA4X,EAAAE,UAAA,SAAAnY,GACAsY,EAAAld,KAAAqZ,EAAAM,MAAA/U,MAEA,IAAAK,GAAA4X,EAAAE,UAAA,SAAA,SACAF,EAAAM,QAAA9D,EAAAjY,MAAAoB,OAAA0a,GAAApB,EAAAoB,QAEA3b,EAAA6b,eAAAP,GACA,gBAGA,IAEAtb,GAAA6B,OAAA,iCAAA,WACA6X,MAGA1Z,EAAA6B,OAAA,cAAA,WACA6X,MAGA1Z,EAAA6B,OAAA,iBAAA,SAAA2B,GACA,GAAA,mBAAAA,GAAA,CACAkW,GAIA,KAAA,GAFAvW,GAAAK,EAAAF,QACAmY,KACA5c,EAAA,EAAA,GAAAA,EAAAA,IACA4c,EAAAhd,KAAA0E,EAAAG,QAAAyV,OAAA,YACA5V,EAAAI,SAAA,EAAA,IAEAvD,GAAAyb,MAAAA,EAAAK,aAGA9b,EAAA6B,OAAA,YAAA,SAAAsF,GACA,mBAAAA,IACAnH,EAAA+F,MAAAK,KAAAe,GACA4U,WACA1F,IAAA,GACAD,KAAA,GACA9P,MAAA,MACAC,OAAA,OAEAyV,QACAC,UAAA,QACA3K,SAAA,SAEA4K,YAAA,iBAIAlc,EAAA6B,OAAA,iBAAA,SAAAsF,GACA,mBAAAA,IACAnH,EAAAgb,MAAA5U,KAAAe,QR0kDCmT,EAAYlV,SAAW,SAAU,YAAa,qBAAsB,YQriDrE1I,QAAAC,OAAA,2BAAAuC,WAAA,cAAAob,MCjIA,WACA,YAEA,SAAA7Z,GAAA0b,EAAAlf,GACA,MAAAkf,GAAAlf,EAAA6G,IAAA8U,aAAA,gCAAAhR,cAAA,mBACAwU,eAAAC,OAAA,OACAC,gBAAAD,OAAA,MAAAE,SAAA,GACA5U,gBAAA0U,OAAA,OACA5X,eAAA4X,OAAA,UT8qDC5b,EAAkB2E,SAAW,YAAa,YS1qD3C1I,QAAAC,OAAA,6BAAA6f,QAAA,oBAAA/b,MCZA,WACA,YAEA,SAAAmJ,GAAAuS,EAAAlf,GACA,MAAAkf,GAAAlf,EAAA6G,IAAA8U,aAAA,4BACA6D,WAAAJ,OAAA,OACA3M,aAAA2M,OAAA,MAAAE,SAAA,GACAzL,WAAAuL,OAAA,QACApI,YAAAoI,OAAA,MAAA5M,QAAAiN,UAAA,UV8rDC9S,EAAcxE,SAAW,YAAa,YU1rDvC1I,QAAAC,OAAA,6BAAA6f,QAAA,gBAAA5S,MCZA,WACA,YAEA,SAAAiO,GAAAsE,EAAAlf,GACA,MAAAkf,GAAAlf,EAAA6G,IAAA8U,aAAA,qCACAwB,gBAAAiC,OAAA,OACA3C,iBAAA2C,OAAA,MAAAE,SAAA,EAAA9M,QAAAkN,OAAA1f,EAAAib,eACAkB,iBAAAiD,OAAA,UX8sDCxE,EAAmBzS,SAAW,YAAa,YW1sD5C1I,QAAAC,OAAA,6BAAA6f,QAAA,qBAAA3E;ICXA,WACA,YAEA,SAAAhR,GAAAsV,EAAAlf,GACA,MAAAkf,GAAAlf,EAAA6G,IAAA8U,aAAA,+CACAgE,oBAAAP,OAAA,OACAnV,qBAAAmV,OAAA,MAAAE,SAAA,GACAM,qBAAAR,OAAA,OACA5T,oBAAA4T,OAAA,UZ6tDCxV,EAAuBzB,SAAW,YAAa,YYztDhD1I,QAAAC,OAAA,6BAAA6f,QAAA,yBAAA3V,MCZA,WACA,YAEA,SAAArG,GAAA2b,EAAAlf,GACA,MAAAkf,GAAAlf,EAAA6G,IAAA8U,aAAA,gCACA5R,aAAAqV,OAAA,OACA/X,eAAA+X,OAAA,MAAAE,SAAA,GACApT,gBAAAkT,OAAA,MAAA5M,QAAAlO,YAAA,iBACA8G,gBAAAgU,OAAA,Ub6uDC7b,EAAgB4E,SAAW,YAAa,YazuDzC1I,QAAAC,OAAA,6BAAA6f,QAAA,kBAAAhc,MCZA,WACA,YAEA,SAAAxD,GAAAH,EAAA4C,EAAAqd,EAAA/f,EAAA2D,EAAAzD,GACA,GAAA8f,GAGAlf,EAAA,SAAAC,GACA,MAAA,UAAAA,GACAV,OAAAG,SAAAN,EAAA6G,IAAAkZ,OACA,GAEAvd,EAAAE,IAAA,SAAAA,IAAA1C,EAAA6G,IAAA8U,aAAA,WAAAnJ,QAAAwN,GAAAnf,KACA+F,KAAA,SAAAiB,GAYA,MAXAjI,GAAAK,QAAAyH,KAAAG,EAAAqC,KAAAxC,KACA9H,EAAAK,QAAA0S,aAAA9K,EAAAqC,KAAA+V,eACAH,EAAAjY,EAAAqC,KAAA+V,eACA,gBAAApY,GAAAqC,KAAAxF,YACA9E,EAAAK,QAAAyE,YAAAmD,EAAAqC,KAAAxF,kBAEA9E,GAAAK,QAAAyE,YAGA9E,EAAAsgB,WAAA,eAAArY,EAAAqC,MAEArC,EAAAqC,OAIA,QACAtJ,aAAA,SAAAC,GACAD,EAAAC,IAEA8F,OAAA,WACA,MAAAnE,GAAAE,IAAA,SAAAF,UAAAxC,EAAA6G,IAAA8U,aAAA,YAGAwE,QAAA,SAAArf,GAYA,MAXA,KAAAA,EAAAsf,IAAA7a,QAAAvF,EAAA6G,IAAA8U,kBAEA7a,EAAAuf,iBAAA,EAGA,mBAAAP,KACAhf,EAAAwf,QAAA,cAAA,UAAAR,GAGAhf,EAAAyf,SAAA,gBAAAzf,GAAAyf,SAAAzf,EAAAyf,SAAA,EAAA,GAEAzf,GAGA0f,cAAA,SAAA3Y,GACA,GAAA,KAAAA,EAAA4Y,QAAA,KAAA5Y,EAAA/G,OAAAsf,IAAA7a,QAAAvF,EAAA6G,IAAA8U,iBAAA9T,EAAA/G,OAAAyf,SAAA,EAAA,CACA9c,EAAAqB,MAAA+C,EAEA,IAAA6Y,GAAAb,EAAAc,OAmBA,OAlBAne,GAAAE,IAAA,SAAAA,IAAA1C,EAAA6G,IAAA+Z,SAAAP,iBAAA,IAAAzZ,KAAA,SAAAia,GACAA,EAAA3W,KAEAtJ,EAAAigB,EAAA3W,KAAA4W,gBAAAla,KAAA,WAEApE,EAAAE,IAAA,SAAAmF,EAAA/G,QAAA8F,KAAA,SAAAiB,GACA6Y,EAAAtZ,QAAAS,IACA,WACA6Y,EAAAK,aAIAL,EAAAK,UAEA,WACAL,EAAAK,WAGAL,EAAAM,QAEA,MAAAnB,GAAAkB,OAAAlZ,Kd+vDC9H,EAAeoI,SAAW,aAAc,YAAa,KAAM,YAAa,OAAQ,Yc1vDjF1I,QAAAC,OAAA,6BAAA6f,QAAA,iBAAAxf,MClFA,WACA,YAEA,SAAA2M,GAAAuU,EAAAjhB,GACA,QAAAkhB,GAAAC,GACA,GAAAC,GAAA,CACA,KAAAD,EAAA,MAAA,EACA,KAAA,GAAAvf,GAAA,EAAAA,EAAAuf,EAAA9b,OAAAzD,IACAuf,EAAAvf,GAAAkY,OAAAsH,GAAA,KACAA,EAAAD,EAAAvf,GAAAkY,MAIA,OAAAsH,GAGA,QAAAC,GAAAF,GAEA,IAAA,GADAC,GAAA,EACAxf,EAAA,EAAAA,EAAAuf,EAAA9b,OAAAzD,IACAuf,EAAAvf,GAAAqY,kBAAAmH,GAAA,KACAA,EAAAD,EAAAvf,GAAAqY,iBAIA,OAAAmH,GAGA,OACA1O,aAAA,SAAAuN,EAAA3b,EAAAgB,EAAA2L,EAAAC,GACA,MAAA+P,GACAve,IAAA1C,EAAA6G,IAAA8U,aAAA,cACAnJ,QACAlO,YAAAA,EACA2M,SAAAA,EACAC,UAAAA,EACA5L,IAAAA,KAGAsB,KAAA,SAAAiB,GAQA,MANApI,SAAAgC,QAAAoG,EAAAqC,KAAA,SAAAqF,GACAA,EAAAwK,cAAAmH,EAAA3R,EAAA+K,0BAAA,EACA/K,EAAA+R,gBAAAD,EAAA9R,EAAA+K,0BACA/K,EAAA8K,UAAA,IAGAxS,EAAAqC,QAGAgN,eAAA,SAAA+I,EAAA1Q,GACA,GAAApK,GAAAoK,EAAAzL,eAAA,MAAAyL,EAAAuH,GAAAvH,EAAApK,EACA,OAAA8b,GAAAM,IAAAvhB,EAAA6G,IAAA8U,aAAA,aAAAxW,GAAAoK,GACA3I,KAAA,SAAAiB,GACA,MAAAA,GAAAqC,QAGA+J,YAAA,SAAAgM,EAAA1Q,GACA,MAAA0R,GAAAO,KAAAxhB,EAAA6G,IAAA8U,aAAA,aAAApM,GACA3I,KAAA,SAAAiB,GACA,MAAAA,GAAAqC,QAGAuX,eAAA,SAAAxB,EAAA1Q,GACA,GAAApK,GAAAoK,EAAAzL,eAAA,MAAAyL,EAAAuH,GAAAvH,EAAApK,EACA,OAAA8b,GAAAA,UAAAjhB,EAAA6G,IAAA8U,aAAA,aAAAxW,IACAyB,KAAA,eAIAuT,sBAAA,SAAA8F,EAAAyB,GACA,MAAAT,GAAAO,KAAAxhB,EAAA6G,IAAA8U,aAAA,wBAAA+F,GACA9a,KAAA,SAAAiB,GACA,MAAAA,GAAAqC,QAGAsQ,yBAAA,SAAAyF,EAAAyB,GACA,GAAAvc,GAAAuc,EAAA5d,eAAA,MAAA4d,EAAA5K,GAAA4K,EAAAvc,EACA,OAAA8b,GAAAM,IAAAvhB,EAAA6G,IAAA8U,aAAA,wBAAAxW,GAAAuc,GACA9a,KAAA,SAAAiB,GACA,MAAAA,GAAAqC,QAGAyX,yBAAA,SAAA1B,EAAAyB,GACA,GAAAvc,GAAAuc,EAAA5d,eAAA,MAAA4d,EAAA5K,GAAA4K,EAAAvc,EACA,OAAA8b,GAAAA,UAAAjhB,EAAA6G,IAAA8U,aAAA,wBAAAxW,IACAyB,KAAA,gBfu1DC8F,EAAgBvE,SAAW,QAAS,Yeh1DrC1I,QAAAC,OAAA,6BAAA6f,QAAA,kBAAA7S,MC5FA,WACA,YAEA,SAAAkV,KA2BA,QAAAC,GAAAC,EAAAthB,GACA,MAAA,mBAAAA,GAAAshB,EACA,IAAAthB,EAAA+E,QAAA,KACAuc,EAAAthB,EACAshB,EAAA,IAAAthB,EA9BA,GAAAM,MACAyD,IAEAzB,MAAA1B,UAAA,SAAAiR,GACAvR,EAAAuR,EAGA,IAAArD,GAAA,SAAAxO,GACA,MAAA,KAAAA,EAAA+E,QAAA,KACA/E,EAAA,QAAAM,EAAAihB,QACAvhB,EAAA,QAAAM,EAAAihB,SAGAC,EAAA,SAAAxhB,EAAAuhB,GACAA,EAAA,mBAAAA,IAAA,EAAAA,CACA,IAAA3B,GAAAyB,EAAA/gB,EAAAkhB,OAAAxhB,EACA,OAAAuhB,GACA/S,EAAAoR,GAEAA,GAGA6B,EAAA,SAAAzhB,GACA,MAAAqhB,GAAA/gB,EAAA+F,IAAA8U,aAAAnb,GAeAsC,MAAApB,OAAA,WAyCA,MAxCAjC,SAAAgC,QAAAX,EAAAyD,KAAA,SAAA2d,GACA,OAAAA,GACA,IAAA,MACApf,KAAAtB,MACAoB,KAAA,SACApC,KAAA,OACAwB,YAAA,wBACAC,WAAA,UACAkgB,eAAA,gBAAA,SAAA,mBAAA,WAEA,MACA,KAAA,eACArf,KAAAtB,MACAoB,KAAA,eACApC,KAAA,gBACAwB,YAAA,0CACAC,WAAA,mBACAkgB,eAAA,gBAAA,SAAA,mBAAA,WAEA,MACA,KAAA,UACArf,KAAAtB,MACAoB,KAAA,UACApC,KAAA,WACAwB,YAAA,gCACAC,WAAA,cACAkgB,eAAA,mBAAA,WAEA,MACA,KAAA,QACArf,KAAAtB,MACAoB,KAAA,QACApC,KAAA,SACAwB,YAAA,4BACAC,WAAA,YACAkgB,eAAA,SAAA,wBAIA5d,GACAA,GAGAzB,KAAAsf,KAAA,WACA,OACAJ,OAAAA,EACAhT,WAAAA,EACAnO,OAAAC,EAAAD,OACAgG,KACA8U,aAAAsG,EACArB,QAAA9f,EAAA+F,IAAA+Z,QACAja,OAAA7F,EAAA+F,IAAAF,OACAoZ,MAAAjf,EAAA+F,IAAAkZ,OAEA7X,WAAA,mBAAApH,GAAAuhB,YAAAvhB,EAAAuhB,WAAAhd,OAAA,EAAAvE,EAAAuhB,YAAA,EACApH,aAAAna,EAAAwhB,UACA/d,KAAAA,IAKA9E,QAAAC,OAAA,yBAAA6iB,SAAA,WAAAX","file":"application.min.js","sourcesContent":["(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma', [\n\t\t'ngRoute',\n\t\t'ui.bootstrap',\n\t\t'ngResource',\n\t\t'gma.controllers',\n\t\t'gma.directives',\n\t\t'gma.filters',\n\t\t'gma.services'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers', [\n\t\t'gma.controllers.admin',\n\t\t'gma.controllers.map',\n\t\t'gma.controllers.measurements',\n\t\t'gma.controllers.reports'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.directives', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.filters', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services', [\n\t\t'gma.services.measurements',\n\t\t'gma.services.settings'\n\t] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.admin', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.map', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.measurements', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.controllers.reports', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services.measurements', [] );\n})( angular );\n","(function ( angular ) {\n\t'use strict';\n\tangular.module( 'gma.services.settings', [] );\n})( angular );\n","(function () {\n\t'use strict';\n\tangular.module( 'gma' )\n\t\t.run( function ( $rootScope, $route, $location, sessionService, settings ) {\n\t\t\t// Object to hold current values: assignments, assignment, user ...\n\t\t\t$rootScope.current = {\n\t\t\t\tisLoaded: false\n\t\t\t};\n\n\t\t\t// Support application inside an iframe, sync parent hash.\n\t\t\tif ( typeof window.parent !== 'undefined' ) {\n\t\t\t\tvar parentHash = window.parent.location.hash;\n\t\t\t\tif ( parentHash ) {\n\t\t\t\t\t$location.path( parentHash.slice( 1 ) );\n\t\t\t\t}\n\n\t\t\t\t$rootScope.$on( '$locationChangeSuccess', function () {\n\t\t\t\t\twindow.parent.location.hash = '#' + $location.path();\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Reload the route since ng-view directive is inside a template.\n\t\t\t$route.reload();\n\n\t\t\t// Start the session with the API\n\t\t\t//TODO fetch a ticket from refresh to start session\n\t\t\tsessionService.startSession( settings.ticket );\n\t\t} )\n\t\t.config( function ( $routeProvider, $httpProvider, $compileProvider, settingsProvider, $provide ) {\n\t\t\t// Initialize Settings from wrapper provided config\n\t\t\tsettingsProvider.setConfig( window.gma.config );\n\n\t\t\t// Add itms-services scheme to safe aHref protocols\n\t\t\t$compileProvider.aHrefSanitizationWhitelist( /^\\s*(https?|ftp|mailto|tel|file|itms-services):/ );\n\n\t\t\t// Register sessionService as an http interceptor\n\t\t\t$httpProvider.interceptors.push( 'sessionService' );\n\n\t\t\t// Setup application routes\n\t\t\t// angularAMD is used to provide on demand controller loading\n\t\t\tangular.forEach( settingsProvider.routes(), function ( route, i ) {\n\t\t\t\tif ( i === 0 ) {\n\t\t\t\t\t$routeProvider.otherwise( {redirectTo: route.path} );\n\t\t\t\t}\n\t\t\t\t$routeProvider\n\t\t\t\t\t.when( route.path, {\n\t\t\t\t\t\ttemplateUrl: route.templateUrl,\n\t\t\t\t\t\tcontroller:  route.controller\n\t\t\t\t\t} );\n\t\t\t} );\n\n\t\t\t// https://github.com/angular/angular.js/issues/1404\n\t\t\t// Source: http://plnkr.co/edit/hSMzWC?p=preview\n\t\t\t$provide.decorator( 'ngModelDirective', function ( $delegate ) {\n\t\t\t\tvar ngModel = $delegate[0], controller = ngModel.controller;\n\t\t\t\tngModel.controller = ['$scope', '$element', '$attrs', '$injector', function ( scope, element, attrs, $injector ) {\n\t\t\t\t\tvar $interpolate = $injector.get( '$interpolate' );\n\t\t\t\t\tattrs.$set( 'name', $interpolate( attrs.name || '' )( scope ) );\n\t\t\t\t\t$injector.invoke( controller, this, {\n\t\t\t\t\t\t'$scope':   scope,\n\t\t\t\t\t\t'$element': element,\n\t\t\t\t\t\t'$attrs':   attrs\n\t\t\t\t\t} );\n\t\t\t\t}];\n\t\t\t\treturn $delegate;\n\t\t\t} );\n\n\t\t\t$provide.decorator( 'formDirective', function ( $delegate ) {\n\t\t\t\tvar form = $delegate[0], controller = form.controller;\n\t\t\t\tform.controller = ['$scope', '$element', '$attrs', '$injector', function ( scope, element, attrs, $injector ) {\n\t\t\t\t\tvar $interpolate = $injector.get( '$interpolate' );\n\t\t\t\t\tattrs.$set( 'name', $interpolate( attrs.name || attrs.ngForm || '' )( scope ) );\n\t\t\t\t\t$injector.invoke( controller, this, {\n\t\t\t\t\t\t'$scope':   scope,\n\t\t\t\t\t\t'$element': element,\n\t\t\t\t\t\t'$attrs':   attrs\n\t\t\t\t\t} );\n\t\t\t\t}];\n\t\t\t\treturn $delegate;\n\t\t\t} );\n\t\t} );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction GMACtrl( $scope, $filter, $location, $modal, sessionService, ministryService, assignmentService, settings, $log ) {\n\t\t// Attach $location provider to scope, this is used to set active tabs\n\t\t$scope.$location = $location;\n\n\t\t$scope.tabs = settings.tabs;\n\n\t\t//---------------------------------------\n\t\t// Assignments\n\t\t//---------------------------------------\n\n\t\t$scope.$on( 'sessionStart', function ( event, session ) {\n\t\t\tif ( typeof session.assignments === 'undefined' ) {\n\t\t\t\t//Open Modal if user has no assignment\n\t\t\t\t$scope.joinMinistry( false );\n\t\t\t}\n\t\t} );\n\n\t\t// Update current assignment when assignments is set - this occurs after a session is established\n\t\t$scope.$watch( 'current.assignments', function ( assignments, oldVal ) {\n\t\t\tif ( assignments === oldVal ) return;\n\n\t\t\t$log.debug( 'Assignments Changed' );\n\n\t\t\tif ( typeof assignments === 'object' ) {\n\t\t\t\tif ( angular.isUndefined( $scope.current.assignment ) || !_.contains( _.pluck( assignments, 'id' ), $scope.current.assignment.id ) ) {\n\t\t\t\t\t$scope.current.assignment = $filter( 'orderBy' )( assignments, 'name' )[0];\n\t\t\t\t}\n\t\t\t\t$scope.current.ministries = flattenMinistries( assignments );\n\t\t\t} else {\n\t\t\t\tdelete $scope.current.assignment;\n\t\t\t\t$scope.current.ministries = [];\n\t\t\t}\n\t\t} );\n\n\t\t// Update assignment and mcc when assignment changes\n\t\t$scope.$watch( 'current.assignment', function ( assignment, oldVal ) {\n\t\t\tif ( assignment === oldVal ) return;\n\n\t\t\t$log.debug( 'Assignment Changed: ' + assignment.name );\n\n\t\t\tif ( typeof assignment === 'object' ) {\n\n\t\t\t\tif ( assignment.mccs.length > 0 ) {\n\t\t\t\t\t// Set mcc if none is currently set or new assignment does not include current mcc\n\t\t\t\t\tif ( typeof $scope.current.mcc === 'undefined' || assignment.mccs.indexOf( $scope.current.mcc ) < 0 ) {\n\t\t\t\t\t\t$scope.current.mcc = $filter( 'orderBy' )( assignment.mccs, $scope.mccSort )[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Delete current mcc if assignment has no mccs\n\t\t\t\t\tdelete $scope.current.mcc;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t$scope.current.hasRole = function ( role ) {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' || typeof $scope.current.assignment.team_role === 'undefined' ) return false;\n\t\t\treturn (typeof role === 'string') ? role == $scope.current.assignment.team_role : _.contains( role, $scope.current.assignment.team_role );\n\t\t};\n\n\t\tfunction flattenMinistries( arr ) {\n\t\t\tvar ministries = [];\n\t\t\tangular.forEach( arr, function ( ministry ) {\n\t\t\t\tministries.push( ministry );\n\t\t\t\tif ( ministry.hasOwnProperty( 'sub_ministries' ) && typeof ministry.sub_ministries === 'object' ) {\n\t\t\t\t\tministries = ministries.concat( flattenMinistries( ministry.sub_ministries ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t//sort by team role\n\t\t\tministries = _.sortBy( ministries, function ( m ) {\n\t\t\t\treturn (m.team_role === 'leader' ? 0 : 1);\n\t\t\t} );\n\t\t\t//remove duplicates\n\t\t\treturn _.uniq( ministries, false, function ( m ) {\n\t\t\t\treturn m.ministry_id;\n\t\t\t} );\n\t\t}\n\n\t\t//---------------------------------------\n\t\t// Mission Critical Components (MCC)\n\t\t//---------------------------------------\n\n\t\t// MCC labels, this should be done in localization in the future.\n\t\t$scope.mccLabels = {\n\t\t\tds:  'Digital Strategies',\n\t\t\tgcm: 'Global Church Movements',\n\t\t\tllm: 'Leader Led',\n\t\t\tslm: 'Student Led'\n\t\t};\n\n\t\t$scope.mccSort = function ( value ) {\n\t\t\treturn $scope.mccLabels[value];\n\t\t};\n\n\t\t//---------------------------------------\n\t\t// Periods\n\t\t//---------------------------------------\n\t\tvar periods = [], now = moment().date( 1 );\n\t\tfor ( var i = 0; i < 12; i++ ) {\n\t\t\tperiods.push( now.clone() );\n\t\t\tnow.subtract( 1, 'M' );\n\t\t}\n\t\t$scope.periods = periods;\n\t\t$scope.current.period = periods[0];\n\n\t\t$scope.prevPeriod = function () {\n\t\t\tvar index = $scope.periods.indexOf( $scope.current.period );\n\t\t\tindex = ( ( index + 1 ) >= $scope.periods.length ) ? 0 : index + 1;\n\t\t\t$scope.current.period = $scope.periods[index];\n\t\t};\n\n\t\t$scope.nextPeriod = function () {\n\t\t\tvar index = $scope.periods.indexOf( $scope.current.period );\n\t\t\tindex = ( ( index - 1 ) < 0 ) ? $scope.periods.length - 1 : index - 1;\n\t\t\t$scope.current.period = $scope.periods[index];\n\t\t};\n\n\t\t//---------------------------------------\n\t\t// Session\n\t\t//---------------------------------------\n\n\t\t$scope.logout = function () {\n\t\t\tsessionService.logout().then( function () {\n\t\t\t\twindow.location = settings.api.logout;\n\t\t\t} );\n\t\t};\n\n\t\t$scope.invalidateSession = function () {\n\t\t\tsessionService.logout();\n\t\t};\n\n\t\t$scope.joinMinistry = function ( allowClose ) {\n\t\t\tallowClose = typeof allowClose !== 'undefined' ? allowClose : true;\n\t\t\tvar instance = $modal.open( {\n\t\t\t\ttemplateUrl: 'partials/join-ministry.html',\n\t\t\t\tcontroller:  'JoinMinistryCtrl',\n\t\t\t\tkeyboard:    allowClose,\n\t\t\t\tbackdrop:    allowClose ? true : 'static',\n\t\t\t\tresolve:     {\n\t\t\t\t\t'ministries': function () {\n\t\t\t\t\t\treturn ministryService.getMinistries().$promise;\n\t\t\t\t\t},\n\t\t\t\t\t'allowClose': function () {\n\t\t\t\t\t\treturn allowClose;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tinstance.result.then( function ( ministry ) {\n\t\t\t\tassignmentService.addTeamMember( {\n\t\t\t\t\tusername:    $scope.current.user.cas_username,\n\t\t\t\t\tministry_id: ministry.ministry_id,\n\t\t\t\t\tteam_role:   'self_assigned'\n\t\t\t\t}, function ( assignment ) {\n\t\t\t\t\tif ( typeof $scope.current.assignments === 'undefined' ) {\n\t\t\t\t\t\t// If assignments is empty, setting the array will also set the current assignment\n\t\t\t\t\t\t$scope.current.assignments = [assignment];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Add new assignment\n\t\t\t\t\t\t$scope.current.assignments.push( assignment );\n\n\t\t\t\t\t\t// Set new assignment as current\n\t\t\t\t\t\t$scope.current.assignment = assignment;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t};\n\n\t\t$scope.onError = function ( response, code ) {\n\t\t\tif ( code == 401 && response.hasOwnProperty( 'reason' ) ) {\n\t\t\t\tif ( response.reason == 'SESSION_INVALID' ) {\n\t\t\t\t\twindow.location = window.location.pathname;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$scope.error = response.reason;\n\t\t};\n\n\t\t$scope.mobileApps = settings.mobileApps;\n\t}\n\n\tangular.module( 'gma.controllers' ).controller( 'GMACtrl', GMACtrl );\n})();\n",null,"(function () {\n\t'use strict';\n\n\tfunction JoinMinistryCtrl( $scope, $modalInstance, ministries, allowClose ) {\n\t\t$scope.ministries = ministries;\n\t\t$scope.allowClose = allowClose;\n\n\t\t$scope.join = function () {\n\t\t\t$modalInstance.close( $scope.ministry );\n\t\t};\n\n\t\t$scope.cancel = function () {\n\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers' ).controller( 'JoinMinistryCtrl', JoinMinistryCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma.directives' )\n\t\t.directive( 'gmaTrend', [function () {\n\t\t\treturn {\n\t\t\t\trestrict: 'A',\n\t\t\t\trequire:  'ngModel',\n\t\t\t\tlink:     function ( $scope, $element, $attrs, ngModel ) {\n\t\t\t\t\tif ( !ngModel ) return;\n\t\t\t\t\tvar chart = new google.visualization.LineChart( $element.get( 0 ) );\n\n\t\t\t\t\tngModel.$render = function () {\n\t\t\t\t\t\tchart.draw( ngModel.$viewValue, {width: 550, height: 200} );\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.$on( '$destroy', function () {\n\t\t\t\t\t\tchart = null;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}] )\n})();\n","(function () {\n\t'use strict';\n\n\tangular.module( 'gma' )\n\t\t.filter( 'roleFilter', [function () {\n\t\t\treturn function ( items, role ) {\n\t\t\t\tvar filtered = [];\n\t\t\t\tangular.forEach( items, function ( item ) {\n\t\t\t\t\tif ( typeof role === 'string' && role == item.team_role ) {\n\t\t\t\t\t\tfiltered.push( item );\n\t\t\t\t\t} else if ( typeof role === 'object' && _.contains( role, item.team_role ) ) {\n\t\t\t\t\t\tfiltered.push( item );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn filtered;\n\t\t\t};\n\t\t}] );\n})();\n","(function () {\n\t'use strict';\n\t\n\tfunction AdminCtrl( $scope, $modal, $filter, assignmentService, ministryService, measurementTypeService ) {\n\t\t$scope.current.isLoaded = false;\n\n\t\t$scope.roles = [\n\t\t\t{value: \"leader\", text: 'Leader'},\n\t\t\t{value: \"inherited_leader\", text: \"Leader (inherited)\"},\n\t\t\t{value: \"member\", text: 'Member'},\n\t\t\t{value: \"blocked\", text: 'Blocked'},\n\t\t\t{value: \"self_assigned\", text: 'Self Assigned'}\n\t\t];\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function ( ministry_id ) {\n\t\t\tif ( typeof ministry_id === 'undefined' ) return;\n\t\t\t$scope.ministry = ministryService.getMinistry( {ministry_id: ministry_id}, function () {\n\t\t\t\t$scope.current.isLoaded = true;\n\n\t\t\t\t$scope.measurementTypes = [];\n\t\t\t\tmeasurementTypeService.getMeasurementTypes().$promise.then( function ( data ) {\n\t\t\t\t\tangular.forEach( data, function ( type ) {\n\t\t\t\t\t\tif ( type.is_custom && _.contains( $scope.ministry.lmi_show, type.perm_link_stub ) ) {\n\t\t\t\t\t\t\ttype.visible = true;\n\t\t\t\t\t\t} else if ( !type.is_custom && !_.contains( $scope.ministry.lmi_hide, type.perm_link_stub ) ) {\n\t\t\t\t\t\t\ttype.visible = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype.visible = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.measurementTypes.push( type );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\n\t\t$scope.saveRole = function ( assignment ) {\n\t\t\tassignmentService.saveAssignment( {\n\t\t\t\tassignment_id: assignment.assignment_id\n\t\t\t}, {team_role: assignment.team_role} );\n\t\t};\n\n\t\t$scope.ableToChangeParentMinistry = function ( parentToFind ) {\n\t\t\tvar availableMinIds = _.pluck( $filter( 'roleFilter' )( $scope.current.ministries, ['leader', 'inherited_leader'] ), 'ministry_id' )\n\t\t\treturn _.contains( availableMinIds, parentToFind );\n\t\t};\n\n\t\t$scope.addTeamMember = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-team-member.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance, roles ) {\n\t\t\t\t\t$scope.roles = roles;\n\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMember );\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tresolve:     {\n\t\t\t\t\t'roles': function () {\n\t\t\t\t\t\treturn $scope.roles;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMember ) {\n\t\t\t\t\tnewMember.ministry_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\tassignmentService.addTeamMember( newMember, function () {\n\t\t\t\t\t\t$scope.ministry = ministryService.getMinistry( {ministry_id: $scope.current.assignment.ministry_id} );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.addSubMinistry = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-sub-ministry.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance ) {\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMinistry );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMinistry ) {\n\t\t\t\t\tnewMinistry.parent_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\tministryService.createMinistry( newMinistry, function () {\n\t\t\t\t\t\tif ( angular.isDefined( $scope.current.assignment.sub_ministries ) ) {\n\t\t\t\t\t\t\t$scope.current.assignment.sub_ministries.push( newMinistry );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.current.assignment.sub_ministries = [newMinistry];\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.addMeasurement = function () {\n\t\t\t$modal.open( {\n\t\t\t\ttemplateUrl: 'partials/admin/add-measurement-type.html',\n\t\t\t\tcontroller:  function ( $scope, $modalInstance ) {\n\t\t\t\t\t$scope.close = function () {\n\t\t\t\t\t\t$modalInstance.dismiss();\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.add = function () {\n\t\t\t\t\t\t$modalInstance.close( $scope.newMeasurement );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} ).result.then( function ( newMeasurement ) {\n\t\t\t\t\tnewMeasurement.perm_link_stub = 'custom_' + newMeasurement.perm_link_stub;\n\t\t\t\t\tmeasurementTypeService.addMeasurementType( newMeasurement, function () {\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t};\n\n\t\t$scope.saveDetails = function () {\n\t\t\tvar ministry = {\n\t\t\t\tministry_id: $scope.ministry.ministry_id,\n\t\t\t\tmin_code:    $scope.ministry.min_code,\n\t\t\t\tname:        $scope.ministry.name,\n\t\t\t\thas_ds:      $scope.ministry.has_ds,\n\t\t\t\thas_gcm:     $scope.ministry.has_gcm,\n\t\t\t\thas_llm:     $scope.ministry.has_llm,\n\t\t\t\thas_slm:     $scope.ministry.has_slm,\n\t\t\t\tprivate:     $scope.ministry.private,\n\t\t\t\tlmi_hide:    _.pluck( _.where( $scope.measurementTypes, {\n\t\t\t\t\tis_custom: false,\n\t\t\t\t\tvisible:   false\n\t\t\t\t} ), 'perm_link_stub' ),\n\t\t\t\tlmi_show:    _.pluck( _.where( $scope.measurementTypes, {\n\t\t\t\t\tis_custom: true,\n\t\t\t\t\tvisible:   true\n\t\t\t\t} ), 'perm_link_stub' )\n\t\t\t};\n\t\t\tif ( $scope.ministry.hasOwnProperty( 'parent_id' ) && typeof $scope.ministry.parent_id === \"string\" ) {\n\t\t\t\tministry.parent_id = $scope.ministry.parent_id;\n\t\t\t}\n\t\t\t$scope.saveDetailsResource = ministryService.updateMinistry( ministry,\n\t\t\t\tfunction () {\n\t\t\t\t\t$scope.saveDetailsAlert = {\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmsg:  'Your changes have been saved.'\n\t\t\t\t\t};\n\t\t\t\t}, function ( response ) {\n\t\t\t\t\t$scope.saveDetailsAlert = {\n\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\tmsg:  response.Message || 'An error occurred while saving.'\n\t\t\t\t\t};\n\t\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.admin' ).controller( 'AdminCtrl', AdminCtrl );\n}());\n","(function ( $ ) {\n\t'use strict';\n\n\tfunction MapCtrl( $scope, $document, $compile, trainingService, churchService, ministryService, settings ) {\n\t\t$scope.current.isLoaded = false;\n\t\t$scope.versionUrl = settings.versionUrl;\n\t\t$scope.show_target_point = true;\n\t\t$scope.show_group = true;\n\t\t$scope.show_church = true;\n\t\t$scope.show_mult_church = true;\n\t\t$scope.show_lines = true;\n\t\t$scope.show_lines = true;\n\t\t$scope.show_jf = true;\n\t\t$scope.map_filter = 'min_only';\n\t\t$scope.icon_add_mode = false;\n\t\t$scope.show_all = \"year\";\n\t\t$scope.show_tree = false;\n\t\t$scope.new_church = {};\n\t\t$scope.edit_church = {};\n\t\t$scope.SetParentMode = false;\n\t\t$scope.church_lines = [];\n\t\t$scope.churches = [];\n\t\t$scope.trainings = [];\n\t\t$scope.allChurches = [];\n\t\t$scope.training_types = [\n\t\t\t{value: \"MC2\", text: 'MC2'},\n\t\t\t{value: \"T4T\", text: 'T4T'},\n\t\t\t{value: \"CPMI\", text: 'CPMI'},\n\t\t\t{value: \"\", text: 'Other'}\n\t\t];\n\t\t$scope.show = {\n\t\t\ttraining: true\n\t\t};\n\t\t$scope.mapOptions = {\n\t\t\tzoom:               3,\n\t\t\tcenter:             new google.maps.LatLng( 0, 0 ),\n\t\t\tpanControl:         true,\n\t\t\tzoomControl:        true,\n\t\t\tmapTypeControl:     true,\n\t\t\tstreetViewControl:  false,\n\t\t\toverviewMapControl: false\n\t\t};\n\t\tsetTimeout( initialize, 0 );\n\n\t\tfunction initialize() {\n\t\t\t$scope.map = new google.maps.Map( document.getElementById( 'map_canvas' ), $scope.mapOptions );\n\t\t\t$scope.map.setOptions( {draggableCursor: ''} );\n\n\t\t\tgoogle.maps.event.addListener( $scope.map, \"idle\", function () {\n\t\t\t\t$scope.current.isLoaded = true;\n\t\t\t\tvar bounds = $scope.map.getBounds(),\n\t\t\t\t\tne = bounds.getNorthEast(),\n\t\t\t\t\tsw = bounds.getSouthWest();\n\n\t\t\t\tif ( ne.lat() == sw.lat() && ne.lng() == sw.lng() ) {\n\t\t\t\t\t// Trigger a resize if bounds have 0 area\n\t\t\t\t\tgoogle.maps.event.trigger( $scope.map, 'resize' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$scope.loadChurches();\n\t\t\t\t}\n\t\t\t} );\n\t\t\t$scope.map.markers = [];\n\t\t\t$scope.church = {name: \"\"};\n\n\t\t\t$scope.churchWindow = new google.maps.InfoWindow();\n\t\t\t$scope.churchWindowContent = $compile( '<div id=\"church_window_content\" ng-include=\"\\'partials/map/edit-church.html\\'\"></div>' )( $scope )\n\t\t\t$scope.churchWindow.setOptions( {maxWidth: 300} );\n\t\t\t$scope.trainingWindow = new google.maps.InfoWindow();\n\t\t\t$scope.trainingWindowContent = $compile( '<div id=\"training_window_content\" ng-include=\"\\'partials/map/edit-training.html\\'\"></div>' )( $scope )\n\t\t\t$scope.trainingWindow.setOptions( {maxWidth: 400} );\n\n\t\t\t$scope.newChurchWindow = new google.maps.InfoWindow();\n\t\t\tgoogle.maps.event.addListener( $scope.newChurchWindow, 'closeclick', function () {\n\t\t\t\t$scope.cancelAddChurch();\n\t\t\t} );\n\t\t\t$scope.newChurchWindowContent = $compile( '<div id=\"new_church_window_content\" ng-include=\"\\'partials/map/new-church.html\\'\"></div>' )( $scope );\n\n\n\t\t\t$scope.newTrainingWindow = new google.maps.InfoWindow();\n\t\t\tgoogle.maps.event.addListener( $scope.newTrainingWindow, 'closeclick', function () {\n\t\t\t\t$scope.cancelAddChurch();\n\t\t\t} );\n\t\t\t$scope.newTrainingContent = $compile( '<div id=\"new_training_window_content\" ng-include=\"\\'partials/map/new-training.html\\'\"></div>' )( $scope );\n\n\t\t\t$scope.map.church_lines = [];\n\t\t\t$scope.map.icons = {};\n\t\t\t$scope.map.icons.church = new google.maps.MarkerImage(\n\t\t\t\tsettings.versionUrl( 'img/icon/church.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 58 )\n\t\t\t);\n\t\t\t$scope.map.icons.cluster = new google.maps.MarkerImage(\n\t\t\t\tsettings.versionUrl( 'img/icon/cluster.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 31 )\n\t\t\t);\n\t\t\t$scope.map.icons.multiplying = new google.maps.MarkerImage(\n\t\t\t\tsettings.versionUrl( 'img/icon/multiplying.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 53 )\n\t\t\t);\n\t\t\t$scope.map.icons.group = new google.maps.MarkerImage(\n\t\t\t\tsettings.versionUrl( 'img/icon/group.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 55 )\n\t\t\t);\n\t\t\t$scope.map.icons.targetpoint = new google.maps.MarkerImage(\n\t\t\t\tsettings.versionUrl( 'img/icon/target.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 32, 56 )\n\t\t\t);\n\t\t\t$scope.map.icons.training = new google.maps.MarkerImage(\n\t\t\t\tsettings.versionUrl( 'img/icon/training.png' ),\n\t\t\t\tnew google.maps.Size( 60, 60 ),\n\t\t\t\tnew google.maps.Point( 0, 0 ),\n\t\t\t\tnew google.maps.Point( 30, 43 )\n\t\t\t);\n\n\t\t\t$scope.map.side = document.getElementById( 'side' );\n\t\t\t$scope.map.side.index = -1;\n\t\t\t$scope.map.side.style.display = 'block';\n\t\t\t$scope.map.search = document.getElementById( 'map_controls' );\n\t\t\t$scope.map.search.index = 3;\n\t\t\t$scope.map.search.style.display = 'block';\n\n\t\t\t$scope.map.controls[google.maps.ControlPosition.TOP_RIGHT].push( $scope.map.side );\n\t\t\t$scope.map.controls[google.maps.ControlPosition.TOP_LEFT].push( $scope.map.search );\n\t\t\tif ( $scope.current.assignment )$scope.load_training_markers();\n\n\t\t\t$scope.$watch( 'current.assignment', function ( a, oldVal ) {\n\t\t\t\tif ( typeof a !== 'undefined' ) {\n\n\t\t\t\t\tif ( a && a.hasOwnProperty( 'location' ) ) {\n\t\t\t\t\t\t$scope.map.setCenter( new google.maps.LatLng( a.location.latitude, a.location.longitude ) );\n\t\t\t\t\t}\n\t\t\t\t\tif ( a && a.hasOwnProperty( 'location_zoom' ) ) {\n\t\t\t\t\t\t$scope.map.setZoom( parseInt( a.location_zoom ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, true );\n\t\t}\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function ( ministry_id ) {\n\t\t\tif ( typeof ministry_id === 'undefined' ) {\n\t\t\t\t$scope.allChurches = [];\n\t\t\t\t$scope.trainings = [];\n\t\t\t} else {\n\t\t\t\t$scope.loadAllChurches();\n\t\t\t\t$scope.loadTrainings();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.$watch( 'searchedChurch', function ( church ) {\n\t\t\tif ( typeof church === 'undefined' || church == '' ) return;\n\t\t\tvar markers = $scope.map.markers.filter( function ( c ) {\n\t\t\t\treturn c.id == church.id\n\t\t\t} );\n\t\t\tif ( markers.length > 0 ) {\n\t\t\t\tvar marker = markers[0];\n\t\t\t\tgoogle.maps.event.trigger( marker, 'click' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$scope.map.setCenter( new google.maps.LatLng( church.latitude, church.longitude ) );\n\t\t\t}\n\t\t} );\n\n\t\t$scope.$watch( 'map_filter', function ( filter ) {\n\t\t\t$scope.loadAllChurches();\n\t\t\t$scope.loadTrainings();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function ( mcc ) {\n\t\t\tif ( typeof mcc === 'undefined' ) {\n\t\t\t\t$scope.trainings = [];\n\t\t\t} else {\n\t\t\t\t$scope.loadTrainings();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.loadAllChurches = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' ) return;\n\t\t\tvar params = {\n\t\t\t\tministry_id: $scope.current.assignment.ministry_id\n\t\t\t};\n\t\t\tif ( $scope.map_filter === 'everything' ) {\n\t\t\t\tparams['show_all'] = 'true';\n\t\t\t} else if ( $scope.map_filter === 'tree' ) params['show_tree'] = 'true';\n\n\t\t\t$scope.allChurches = churchService.getChurches( params );\n\t\t}, 500 );\n\n\t\t$scope.loadTrainings = _.debounce( function () {\n\t\t\t// Member, Leader and Inherited can view trainings\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && $scope.current.hasRole( ['leader', 'inherited_leader'] ) ) {\n\t\t\t\ttrainingService.getTrainings( $scope.current.sessionToken, $scope.current.assignment.ministry_id, $scope.current.mcc, $scope.show_all == \"all\", $scope.show_tree ).then( function ( trainings ) {\n\t\t\t\t\t$scope.trainings = trainings;\n\t\t\t\t}, $scope.onError );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$scope.trainings = [];\n\t\t\t}\n\t\t}, 500 );\n\n\t\t$scope.loadChurches = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment === 'undefined' ) return;\n\n\t\t\tconsole.log( 'loading churches' );\n\t\t\tvar bounds = $scope.map.getBounds(),\n\t\t\t\tne = bounds.getNorthEast(),\n\t\t\t\tsw = bounds.getSouthWest(),\n\t\t\t\tparams = {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tlat_min:     sw.lat(),\n\t\t\t\t\tlat_max:     ne.lat(),\n\t\t\t\t\tlong_min:    sw.lng(),\n\t\t\t\t\tlong_max:    ne.lng()\n\t\t\t\t};\n\t\t\tif ( !$scope.show_target_point ) params['hide_target_point'] = 'true';\n\t\t\tif ( !$scope.show_group ) params['hide_group'] = 'true';\n\t\t\tif ( !$scope.show_church ) params['hide_church'] = 'true';\n\t\t\tif ( !$scope.show_mult_church ) params['hide_mult_church'] = 'true';\n\t\t\tif ( $scope.map_filter === 'everything' ) {\n\t\t\t\tparams['show_all'] = 'true';\n\t\t\t} else if ( $scope.map_filter === 'tree' ) params['show_tree'] = 'true';\n\n\t\t\t// Disable clustering at Zoom 14 and higher\n\t\t\tif ( $scope.map.getZoom() >= 14 ) params['should_cluster'] = 'false';\n\n\t\t\tchurchService.getChurches( params ).$promise.then( $scope.onGetChurches, $scope.onError );\n\t\t}, 500 );\n\n\t\t$scope.removeLines = function () {\n\t\t\tangular.forEach( $scope.map.church_lines, function ( l ) {\n\t\t\t\tl.setMap( null );\n\t\t\t} );\n\t\t};\n\n\t\t$scope.removeJF = function () {\n\t\t\t$( '.jf_label' ).remove();\n\t\t};\n\n\t\t$scope.$watch( 'show_lines', function () {\n\t\t\tif ( typeof $scope.map !== 'undefined' ) {\n\t\t\t\tangular.forEach( $scope.map.church_lines, function ( line ) {\n\t\t\t\t\tline.setVisible( $scope.show_lines );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t$scope.$watch( 'show_jf', function () {\n\t\t\tif ( $scope.show_jf ) {\n\t\t\t\t$( '.jf_label' ).show();\n\t\t\t} else {\n\t\t\t\t$( '.jf_label' ).hide();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.onAddChurch = function () {\n\t\t\t$scope.loadChurches();\n\t\t};\n\n\t\t$scope.addChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\n\t\t\t\tif ( m.id == -1 ) {\n\t\t\t\t\t$scope.new_church.ministry_id = $scope.current.assignment.ministry_id;\n\n\t\t\t\t\t$scope.new_church.latitude = m.getPosition().lat();\n\t\t\t\t\t$scope.new_church.longitude = m.getPosition().lng();\n\t\t\t\t\tconsole.log( $scope.new_church );\n\t\t\t\t\tchurchService.addChurch( $scope.new_church ).$promise.then( $scope.onAddChurch, $scope.onError );\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.addTraining = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\n\t\t\t\tif ( m.id == -2 ) {\n\t\t\t\t\t$scope.new_training.ministry_id = $scope.current.assignment.ministry_id;\n\t\t\t\t\t$scope.new_training.latitude = m.getPosition().lat();\n\t\t\t\t\t$scope.new_training.longitude = m.getPosition().lng();\n\t\t\t\t\t$scope.new_training.mcc = $scope.current.mcc;\n\t\t\t\t\ttrainingService.addTraining( $scope.current.sessionToken, $scope.new_training ).then(\n\t\t\t\t\t\t$scope.loadTrainings,\n\t\t\t\t\t\t$scope.onError\n\t\t\t\t\t);\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.cancelAddChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id < 0 ) {\n\n\t\t\t\t\tm.setMap( null );\n\t\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( m ), 1 );\n\n\t\t\t\t\tremovedObject = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t\t$scope.new_church = {};\n\t\t\t$scope.new_training = {};\n\t\t};\n\n\t\t$scope.onAddTraining = function () {\n\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\treturn c.id < 0\n\t\t\t\t} ).length == 0 ) {\n\t\t\t\t$scope.new_training = {};\n\n\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\tposition:          $scope.map.getCenter(),\n\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\ttitle:             \"new_training\",\n\t\t\t\t\tid:                -2,\n\t\t\t\t\tcluster_count:     1,\n\t\t\t\t\tzIndex:            9999,\n\t\t\t\t\ticon:              $scope.map.icons.training,\n\t\t\t\t\tlabelContent:      'MOVE ME!',\n\t\t\t\t\tlabelAnchor:       new google.maps.Point( 50, -5 ),\n\t\t\t\t\tlabelClass:        \"labelMoveMarker\", // the CSS class for the label\n\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\tdraggable:         true\n\t\t\t\t} );\n\t\t\t\t$scope.map.new_training_marker = marker;\n\t\t\t\tmarker.setAnimation( google.maps.Animation.BOUNCE );\n\n\t\t\t\tif ( !$scope.newTrainingWindow.getContent() ) {\n\t\t\t\t\t$scope.newTrainingWindow.setContent( $scope.newTrainingContent[0].nextSibling );\n\t\t\t\t}\n\t\t\t\t$scope.newTrainingWindow.open( $scope.map, marker );\n\n\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t}\n\t\t};\n\n\t\t$scope.onSaveChurch = function ( response ) {\n\t\t\t$scope.loadChurches();\n\t\t};\n\n\t\t$scope.onAddIcon = function () {\n\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\treturn c.id < 0\n\t\t\t\t} ).length == 0 ) {\n\t\t\t\t$scope.new_church = {security: 2};\n\n\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\tposition:          $scope.map.getCenter(),\n\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\ttitle:             \"new church\",\n\t\t\t\t\tid:                -1,\n\t\t\t\t\tcluster_count:     1,\n\t\t\t\t\tzIndex:            9999,\n\t\t\t\t\ticon:              $scope.map.icons.targetpoint,\n\t\t\t\t\tlabelContent:      'Move me!',\n\t\t\t\t\tlabelAnchor:       new google.maps.Point( 50, -20 ),\n\t\t\t\t\tlabelClass:        \"labelMoveMarker\", // the CSS class for the label\n\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\tdraggable:         true\n\t\t\t\t} );\n\t\t\t\t$scope.map.new_marker = marker;\n\t\t\t\tmarker.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t//$scope.$apply();\n\t\t\t\tif ( !$scope.newChurchWindow.getContent() ) {\n\t\t\t\t\t$scope.newChurchWindow.setContent( $scope.newChurchWindowContent[0].nextSibling );\n\t\t\t\t}\n\t\t\t\t$scope.newChurchWindow.open( $scope.map, marker );\n\n\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t}\n\t\t};\n\n\t\t$scope.SetParent = function () {\n\t\t\t$scope.SetParentMode = true;\n\t\t\t$scope.churchWindow.close();\n\t\t\t$scope.new_parentLine = new google.maps.Polyline( {\n\t\t\t\tpath:          [new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude ), new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )],\n\t\t\t\tgeodesic:      true,\n\t\t\t\tstrokeColor:   '#777',\n\t\t\t\tstrokeOpacity: 1.0,\n\t\t\t\tstrokeWeight:  2,\n\t\t\t\ticons:         [{\n\t\t\t\t\t\t\t\t\ticon:   {\n\t\t\t\t\t\t\t\t\t\tpath:         google.maps.SymbolPath.FORWARD_OPEN_ARROW,\n\t\t\t\t\t\t\t\t\t\tstrokeWeight: 1.5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\toffset: '12px',\n\t\t\t\t\t\t\t\t\trepeat: '25px'\n\t\t\t\t\t\t\t\t}]\n\t\t\t} );\n\n\t\t\t$scope.move_event = google.maps.event.addListener( $scope.map, 'mousemove', function ( e ) {\n\t\t\t\t$scope.new_parentLine.setPath( [e.latLng, new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )] );\n\t\t\t} );\n\n\t\t\t$scope.new_parentLine.setMap( $scope.map );\n\t\t\t//   $scope.map.church_lines.push(parentLine);\n\t\t};\n\n\t\t$scope.MoveChurch = function () {\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id === $scope.edit_church.id ) {\n\t\t\t\t\tm.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t\tm.setDraggable( true );\n\t\t\t\t\t$scope.churchWindow.close();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.MoveTraining = function () {\n\t\t\tvar id = $scope.edit_training.hasOwnProperty( 'Id' ) ? $scope.edit_training.Id : $scope.edit_training.id;\n\t\t\tangular.forEach( $scope.map.markers, function ( m ) {\n\t\t\t\tif ( m.id === 't' + id ) {\n\t\t\t\t\tm.setAnimation( google.maps.Animation.BOUNCE );\n\t\t\t\t\tm.setDraggable( true );\n\t\t\t\t\t$scope.trainingWindow.close();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.SaveChurch = function () {\n\t\t\tchurchService.saveChurch( $scope.edit_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.SaveTraining = function () {\n\t\t\ttrainingService.updateTraining( $scope.current.sessionToken, $scope.edit_training ).then( $scope.onSaveChurch, $scope.onError );\n\t\t};\n\n\t\t$scope.$watch( 'trainings', function () {\n\t\t\tif ( $scope.map ) {\n\t\t\t\t$scope.load_training_markers();\n\t\t\t}\n\t\t} );\n\n\t\t$scope.load_training_markers = function () {\n\t\t\tif ( typeof $scope.map === 'undefined' ) return;\n\t\t\tvar toDelete = [];\n\t\t\tangular.forEach( $scope.map.markers, function ( training ) {\n\t\t\t\tif ( training.id[0] == 't' && $scope.trainings.filter( function ( t ) {\n\t\t\t\t\t\treturn t.id == training.id\n\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\ttoDelete.push( training );\n\t\t\t\t}\n\t\t\t\telse if ( training.id[0] == 't' && !$scope.show.training ) toDelete.push( training );\n\t\t\t} );\n\n\t\t\tangular.forEach( toDelete, function ( training ) {\n\t\t\t\ttraining.setMap( null );\n\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( training ), 1 );\n\t\t\t\tremovedObject = null;\n\t\t\t} );\n\n\t\t\tif ( $scope.show.training ) {\n\t\t\t\tangular.forEach( $scope.trainings, function ( training ) {\n\t\t\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\t\t\treturn c.id === 't' + training.id\n\t\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\t\tif ( training.longitude ) {\n\t\t\t\t\t\t\tvar marker = new MarkerWithLabel( {\n\t\t\t\t\t\t\t\tposition:          new google.maps.LatLng( training.latitude, training.longitude ),\n\t\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\t\tid:                't' + ( training.hasOwnProperty( 'Id' ) ? training.Id : training.id ),\n\t\t\t\t\t\t\t\ttitle:             training.type,\n\t\t\t\t\t\t\t\ticon:              $scope.map.icons.training,\n\t\t\t\t\t\t\t\tlabelContent:      '', //training.type + '<span class=\"map-trained-count\">' + training.leaders_trained + '</span>',\n\t\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 0 ),\n\t\t\t\t\t\t\t\tlabelClass:        \"labelMarker\", // the CSS class for the label\n\t\t\t\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\t\t\t\tdraggable:         false\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tif ( !$scope.trainingWindow.getContent() ) {\n\t\t\t\t\t\t\t\t$scope.trainingWindow.setContent( $scope.trainingWindowContent[0].nextSibling );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgoogle.maps.event.addListener( marker, 'click', (function ( training, marker ) {\n\t\t\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\t\t\t//$scope.church = marker;\n\t\t\t\t\t\t\t\t\t$scope.edit_training = training;\n\t\t\t\t\t\t\t\t\t$scope.edit_training.editable = (($scope.current.assignment.team_role === 'leader' || $scope.current.assignment.team_role === 'inherited_leader') && training.ministry_id === $scope.current.assignment.ministry_id);\n\n\t\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.close();\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.setOptions( {maxWidth: 400} );\n\t\t\t\t\t\t\t\t\t$scope.trainingWindow.open( $scope.map, marker );\n\t\t\t\t\t\t\t\t\t// $scope.churchWindow.open($scope.map, marker);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}( training, marker, $scope )) );\n\n\t\t\t\t\t\t\tgoogle.maps.event.addListener( marker, 'dragend', (function () {\n\t\t\t\t\t\t\t\tconsole.log( marker );\n\t\t\t\t\t\t\t\ttraining.latitude = marker.getPosition().lat();\n\t\t\t\t\t\t\t\ttraining.longitude = marker.getPosition().lng();\n\t\t\t\t\t\t\t\ttrainingService.updateTraining( $scope.current.sessionToken, training ).then( $scope.onSaveChurch, $scope.onError );\n\t\t\t\t\t\t\t\tmarker.setAnimation( null );\n\t\t\t\t\t\t\t\tmarker.setDraggable( false );\n\t\t\t\t\t\t\t}) );\n\n\t\t\t\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\n\t\t$scope.$watch( 'show.training', $scope.load_training_markers, true );\n\n\t\t$scope.onGetChurches = function ( response ) {\n\t\t\t$scope.churches = response;\n\t\t\tconsole.log( 'got churches' );\n\t\t\t$scope.removeLines();\n\t\t\t$scope.removeJF();\n\t\t\t// $scope.map.markers = [];\n\n\t\t\t// do more intelligent replace\n\t\t\t//remove elements that are not in the new one.\n\t\t\tvar toDelete = [];\n\n\t\t\tangular.forEach( $scope.map.markers, function ( church ) {\n\t\t\t\tif ( church.id > 0 ) {\n\t\t\t\t\tif ( response.filter( function ( c ) {\n\t\t\t\t\t\t\treturn c.id == church.id && c.cluster_count == 1\n\t\t\t\t\t\t} ).length == 0 || church.cluster_count > 1 ) {\n\t\t\t\t\t\ttoDelete.push( church );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tangular.forEach( toDelete, function ( church ) {\n\t\t\t\t//console.log(toDelete)\n\t\t\t\t//var church = $scope.map.markers.filter(function (c) { return c.id == toDelete[i] });\n\t\t\t\t//console.log(church.length);\n\t\t\t\tchurch.setMap( null );\n\t\t\t\tvar removedObject = $scope.map.markers.splice( $scope.map.markers.indexOf( church ), 1 );\n\n\t\t\t\tremovedObject = null;\n\t\t\t} );\n\n\n\t\t\tangular.forEach( $scope.churches, function ( church ) {\n\t\t\t\tif ( $scope.map.markers.filter( function ( c ) {\n\t\t\t\t\t\treturn c.id == church.id\n\t\t\t\t\t} ).length == 0 ) {\n\t\t\t\t\tvar marker = {};\n\n\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\tvar churchIconToUse = {}\n\t\t\t\t\t\tif ( church.development == 5 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.multiplying;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 4 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 3 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 2 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.group;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( church.development == 1 ) {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.targetpoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchurchIconToUse = $scope.map.icons.church;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmarker = new MarkerWithLabel( {\n\t\t\t\t\t\t\tposition:          new google.maps.LatLng( church.latitude, church.longitude ),\n\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\ttitle:             church.name,\n\t\t\t\t\t\t\tid:                church.id,\n\t\t\t\t\t\t\tcluster_count:     church.cluster_count,\n\t\t\t\t\t\t\ticon:              churchIconToUse,\n\t\t\t\t\t\t\tlabelContent:      church.name,\n\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 0 ),\n\t\t\t\t\t\t\tlabelClass:        \"labelMarker\", // the CSS class for the label\n\t\t\t\t\t\t\tlabelInBackground: false,\n\t\t\t\t\t\t\tdraggable:         false\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( church.jf_contrib > 0 ) church.jf = new $scope.jesusFilmSign( new google.maps.LatLng( church.latitude, church.longitude ), church.jf_contrib, church.development );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmarker = new MarkerWithLabel( {\n\t\t\t\t\t\t\tposition:          new google.maps.LatLng( church.latitude, church.longitude ),\n\t\t\t\t\t\t\tmap:               $scope.map,\n\t\t\t\t\t\t\tid:                church.id,\n\t\t\t\t\t\t\tcluster_count:     church.cluster_count,\n\t\t\t\t\t\t\ticon:              $scope.map.icons.cluster,\n\t\t\t\t\t\t\tlabelContent:      church.cluster_count.toString(),\n\t\t\t\t\t\t\tlabelAnchor:       new google.maps.Point( 30, 15 ),\n\t\t\t\t\t\t\tlabelClass:        \"clusterMarker\", // the CSS class for the label\n\t\t\t\t\t\t\tlabelInBackground: false\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( church.jf_contrib > 0 ) church.jf = new $scope.jesusFilmSign( new google.maps.LatLng( church.latitude, church.longitude ), church.jf_contrib, 'cluster' );\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( !$scope.churchWindow.getContent() ) {\n\t\t\t\t\t\t$scope.churchWindow.setContent( $scope.churchWindowContent[0].nextSibling );\n\t\t\t\t\t}\n\n\t\t\t\t\tgoogle.maps.event.addListener( marker, 'click', (function ( church, marker ) {\n\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\tif ( $scope.SetParentMode ) {\n\t\t\t\t\t\t\t\tif ( church.cluster_count == 1 && church.id !== $scope.edit_church.id ) {\n\t\t\t\t\t\t\t\t\tgoogle.maps.event.removeListener( $scope.move_event );\n\t\t\t\t\t\t\t\t\t$scope.SetParentMode = false;\n\t\t\t\t\t\t\t\t\t$scope.new_parentLine.setPath( [new google.maps.LatLng( church.latitude, church.longitude ), new google.maps.LatLng( $scope.edit_church.latitude, $scope.edit_church.longitude )] );\n\t\t\t\t\t\t\t\t\t//update church's parent\n\t\t\t\t\t\t\t\t\tvar new_church = {};\n\t\t\t\t\t\t\t\t\tnew_church.id = $scope.edit_church.id;\n\t\t\t\t\t\t\t\t\tnew_church.parent_id = church.id;\n\t\t\t\t\t\t\t\t\t$scope.edit_church.parent_id = church.id;\n\t\t\t\t\t\t\t\t\tconsole.log( new_church );\n\t\t\t\t\t\t\t\t\tchurchService.saveChurch( new_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//google.maps.event.addListener(marker, 'click', function () {\n\t\t\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\t\t\t//$scope.church = marker;\n\n\t\t\t\t\t\t\t\t$scope.edit_church = church;\n\t\t\t\t\t\t\t\t$scope.edit_church.editable = (($scope.current.assignment.team_role === 'leader' || $scope.current.assignment.team_role === 'inherited_leader') && church.ministry_id === $scope.current.assignment.ministry_id);\n\n\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t$scope.churchWindow.close();\n\t\t\t\t\t\t\t\t$scope.churchWindow.setOptions( {maxWidth: 300} );\n\t\t\t\t\t\t\t\t$scope.churchWindow.open( $scope.map, marker );\n\n\t\t\t\t\t\t\t\t// $scope.churchWindow.open($scope.map, marker);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t$scope.map.setCenter( marker.position );\n\t\t\t\t\t\t\t\t$scope.map.setZoom( $scope.map.getZoom() + 2 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}( church, marker, $scope )) );\n\n\t\t\t\t\tgoogle.maps.event.addListener( marker, 'dragend', (function ( church, marker ) {\n\t\t\t\t\t\treturn function () {\n\n\t\t\t\t\t\t\t//google.maps.event.addListener(marker, 'click', function () {\n\t\t\t\t\t\t\tif ( church.cluster_count == 1 ) {\n\t\t\t\t\t\t\t\tvar new_church = {};\n\t\t\t\t\t\t\t\tnew_church.id = church.id;\n\t\t\t\t\t\t\t\tnew_church.latitude = marker.getPosition().lat();\n\t\t\t\t\t\t\t\tnew_church.longitude = marker.getPosition().lng();\n\t\t\t\t\t\t\t\tchurch.latitude = new_church.latitude;\n\t\t\t\t\t\t\t\tchurch.longitude = new_church.longitude;\n\t\t\t\t\t\t\t\tchurchService.saveChurch( new_church ).$promise.then( $scope.onSaveChurch, $scope.onError );\n\n\t\t\t\t\t\t\t\tmarker.setAnimation( null );\n\t\t\t\t\t\t\t\tmarker.setDraggable( false );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}( church, marker )) );\n\t\t\t\t\t$scope.map.markers.push( marker );\n\t\t\t\t}\n\n\n\t\t\t\t//now create the parent lines\n\t\t\t\tangular.forEach( church.parents, function ( p ) {\n\t\t\t\t\tvar par = $scope.churches.filter( function ( c ) {\n\t\t\t\t\t\treturn c.id == p\n\t\t\t\t\t} );\n\t\t\t\t\tif ( par.length > 0 ) {\n\t\t\t\t\t\tvar parentLine = new google.maps.Polyline( {\n\t\t\t\t\t\t\tpath:          [new google.maps.LatLng( par[0].latitude, par[0].longitude ), new google.maps.LatLng( church.latitude, church.longitude )],\n\t\t\t\t\t\t\tgeodesic:      true,\n\t\t\t\t\t\t\tstrokeColor:   '#777',\n\t\t\t\t\t\t\tstrokeOpacity: 1.0,\n\t\t\t\t\t\t\tstrokeWeight:  2,\n\t\t\t\t\t\t\ticons:         [{\n\t\t\t\t\t\t\t\t\t\t\t\ticon:   {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpath:         google.maps.SymbolPath.FORWARD_OPEN_ARROW,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWeight: 1.5\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\toffset: '12px',\n\t\t\t\t\t\t\t\t\t\t\t\trepeat: '25px'\n\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tparentLine.setMap( $scope.map );\n\t\t\t\t\t\t$scope.map.church_lines.push( parentLine );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\n\t\t\t} );\n\n\n\t\t};\n\n\n\t\t$scope.jesusFilmSign = function ( coordinates, n, type ) {\n\t\t\tthis.div_ = null;\n\t\t\tthis.setMap( $scope.map );\n\t\t\tif ( n == 1 ) n = \"JF\";\n\n\t\t\t// onADD\n\t\t\tthis.onAdd = function () {\n\t\t\t\tvar div = document.createElement( 'div' );\n\t\t\t\tdiv.className = 'jf_label';\n\t\t\t\tdiv.innerHTML = n;\n\t\t\t\tthis.div_ = div;\n\t\t\t\tvar panes = this.getPanes();\n\t\t\t\tpanes.overlayMouseTarget.appendChild( div );\n\t\t\t};\n\n\t\t\t// draw\n\t\t\tthis.draw = function () {\n\t\t\t\tvar div = this.div_;\n\t\t\t\tvar overlayProjection = this.getProjection();\n\t\t\t\tvar position = overlayProjection.fromLatLngToDivPixel( coordinates );\n\n\t\t\t\t// displacement of sign\n\t\t\t\tvar x;\n\t\t\t\tvar y;\n\n\t\t\t\tif ( type == 'cluster' ) {\n\t\t\t\t\tx = -20;\n\t\t\t\t\ty = 8;\n\t\t\t\t}\n\n\t\t\t\telse if ( type >= 0 && type <= 1 ) {\n\t\t\t\t\tx = -23;\n\t\t\t\t\ty = -12;\n\t\t\t\t}\n\n\t\t\t\telse if ( type == 2 ) {\n\t\t\t\t\tx = -22;\n\t\t\t\t\ty = -13;\n\t\t\t\t}\n\n\t\t\t\telse if ( type >= 3 ) {\n\t\t\t\t\tx = -20;\n\t\t\t\t\ty = -13;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\n\t\t\t\tdiv.style.left = position.x + x + \"px\";\n\t\t\t\tdiv.style.top = position.y + y + \"px\";\n\t\t\t};\n\n\t\t\tthis.onRemove = function () {\n\t\t\t\tthis.div_.parentNode.removeChild( $scope.div_ );\n\t\t\t\tthis.div_ = null;\n\t\t\t}\n\t\t};\n\t\t$scope.jesusFilmSign.prototype = new google.maps.OverlayView();\n\n\t\t$scope.setDefaultView = function () {\n\t\t\tvar center = $scope.map.getCenter(),\n\t\t\t\tzoom = $scope.map.getZoom();\n\n\t\t\t// Update current assignment location/zoom\n\t\t\t$scope.current.assignment.location = {\n\t\t\t\tlatitude:  center.lat(),\n\t\t\t\tlongitude: center.lng()\n\t\t\t};\n\t\t\t$scope.current.assignment.location_zoom = zoom;\n\n\t\t\t// Save changes to API\n\t\t\tministryService.updateMinistry( {\n\t\t\t\tministry_id:   $scope.current.assignment.ministry_id,\n\t\t\t\tmin_code:      $scope.current.assignment.min_code.trim(),\n\t\t\t\tlocation:      $scope.current.assignment.location,\n\t\t\t\tlocation_zoom: $scope.current.assignment.location_zoom\n\t\t\t} );\n\t\t};\n\n\t\t$scope.addTrainingStage = function ( training ) {\n\t\t\tvar newPhase = {\n\t\t\t\tphase:            training.current_stage,\n\t\t\t\tdate:             training.insert.date,\n\t\t\t\tnumber_completed: training.insert.number_completed,\n\t\t\t\ttraining_id:      training.hasOwnProperty( 'Id' ) ? training.Id : training.id\n\n\t\t\t};\n\t\t\ttrainingService.addTrainingCompletion( $scope.current.sessionToken, newPhase ).then( $scope.onAddTrainingCompletion, $scope.onError );\n\n\t\t\ttraining.insert.date = \"\";\n\t\t\ttraining.insert.number_completed = 0;\n\n\t\t};\n\n\t\t$scope.onAddTrainingCompletion = function ( response ) {\n\t\t\tresponse.editMode = false;\n\n\t\t\tangular.forEach( $scope.assignment.trainings, function ( training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\tif ( id == response.training_id ) {\n\t\t\t\t\ttraining.gcm_training_completions.push( response );\n\t\t\t\t\ttraining.current_stage = response.phase + 1;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\t$scope.saveTrainingCompletion = function ( data ) {\n\t\t\ttrainingService.updateTrainingCompletion( $scope.current.sessionToken, data ).then( $scope.onSaveTrainingCompletion, $scope.onError );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.map' ).controller( 'MapCtrl', MapCtrl );\n})( jQuery );\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementDetailsCtrl( $scope, $modalInstance, measurementService, assignmentService, measurement, details, settings ) {\n\t\t$scope.spinner = true;\n\t\t$scope.measurement = measurement;\n\t\t$scope.details = details;\n\t\t$scope.ns = settings.gmaNamespace;\n\n\t\t$scope.details.$promise.then( function () {\n\t\t\t$scope.spinner = false;\n\n\t\t\tvar da = [['Period', 'Local', 'Total', 'Personal']];\n\t\t\tangular.forEach( details.total, function ( t, period ) {\n\t\t\t\tangular.forEach( details.local, function ( l, p ) {\n\t\t\t\t\tif ( p === period ) {\n\t\t\t\t\t\tangular.forEach( details.my_measurements, function ( m, p ) {\n\t\t\t\t\t\t\tif ( p === period ) da.push( [p, l, t, m] )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t$scope.trend = google.visualization.arrayToDataTable( da );\n\t\t} );\n\n\t\t$scope.filterSource = function ( items ) {\n\t\t\tvar result = {};\n\t\t\tangular.forEach( items, function ( value, key ) {\n\t\t\t\tif ( key != settings.gmaNamespace && key != 'total' ) {\n\t\t\t\t\tresult[key] = value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn result;\n\t\t};\n\n\t\t$scope.save = function () {\n\t\t\t$scope.spinner = true;\n\t\t\tvar measurements = [];\n\t\t\tangular.forEach( ['local', 'person'], function ( type ) {\n\t\t\t\tif ( $scope.editForm.hasOwnProperty( type ) && $scope.editForm[type].$dirty && typeof $scope.editForm[type] !== 'undefined' ) {\n\t\t\t\t\tmeasurements.push( {\n\t\t\t\t\t\tperiod:              $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\t\tmcc:                 $scope.current.mcc + '_' + settings.gmaNamespace,\n\t\t\t\t\t\tmeasurement_type_id: $scope.details.measurement_type_ids[type],\n\t\t\t\t\t\trelated_entity_id:   type == 'local'\n\t\t\t\t\t\t\t? $scope.current.assignment.ministry_id\n\t\t\t\t\t\t\t: $scope.current.assignment.id,\n\t\t\t\t\t\tvalue:               $scope.editForm[type].$modelValue\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( measurements.length > 0 ) {\n\t\t\t\tmeasurementService.saveMeasurement( {}, measurements, function () {\n\t\t\t\t\t$modalInstance.close();\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t\t}\n\t\t};\n\n\t\t$scope.close = function () {\n\t\t\t$modalInstance.dismiss( 'cancel' );\n\t\t};\n\n\t\t$scope.approveSelfAssigned = function ( user, role ) {\n\t\t\tvar user = user;\n\t\t\tuser.state = 'pending';\n\t\t\tassignmentService.saveAssignment( {\n\t\t\t\tassignment_id: user.assignment_id\n\t\t\t}, {team_role: role}, function () {\n\t\t\t\tif ( role == 'blocked' ) {\n\t\t\t\t\tuser.state = 'blocked';\n\t\t\t\t\tuser.blocked = true;\n\t\t\t\t} else {\n\t\t\t\t\tuser.success = true;\n\t\t\t\t\tuser.state = 'member';\n\t\t\t\t}\n\t\t\t}, function () {\n\t\t\t\tdelete user.state;\n\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.measurements' ).controller( 'MeasurementDetailsCtrl', MeasurementDetailsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction MeasurementsCtrl( $scope, $document, $filter, $modal, measurementService, settings ) {\n\t\t$scope.current.isLoaded = false;\n\t\t$scope.ns = settings.gmaNamespace;\n\n\t\t// Debounced method to fetch Measurements at most once every 100 milliseconds\n\t\tvar getMeasurements = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && typeof $scope.current.period !== 'undefined' && typeof $scope.current.mcc !== 'undefined' ) {\n\t\t\t\t$scope.current.isLoaded = false;\n\t\t\t\t$scope.lmiForm.$setPristine();\n\t\t\t\t$scope.measurements = measurementService.getMeasurements( {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tmcc:         $scope.current.mcc,\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t}, function () {\n\t\t\t\t\t$scope.current.isLoaded = true;\n\t\t\t\t} );\n\t\t\t}\n\t\t}, 100 );\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.period', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.hasOther = function () {\n\t\t\treturn _.where( $scope.measurements, {section: 'other', column: 'other'} ).length > 0;\n\t\t};\n\n\t\t// Method used to save measurements for self_assigned role.\n\t\t$scope.save = function () {\n\t\t\tvar measurements = [];\n\t\t\tangular.forEach( $scope.measurements, function ( measurement ) {\n\t\t\t\tvar value = $scope.lmiForm[measurement.perm_link];\n\t\t\t\tif ( value.$dirty && value.$valid ) {\n\t\t\t\t\tthis.push( {\n\t\t\t\t\t\tperiod:              $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\t\tmcc:                 $scope.current.mcc + '_' + settings.gmaNamespace,\n\t\t\t\t\t\tmeasurement_type_id: measurement.measurement_type_ids.person,\n\t\t\t\t\t\trelated_entity_id:   $scope.current.assignment.id,\n\t\t\t\t\t\tvalue:               value.$modelValue\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}, measurements );\n\n\t\t\tif ( measurements.length > 0 ) {\n\t\t\t\tmeasurementService.saveMeasurement( {}, measurements, function () {\n\t\t\t\t\tgetMeasurements();\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tgetMeasurements();\n\t\t\t}\n\t\t};\n\n\t\t$scope.editMeasurementDetails = function ( measurement ) {\n\t\t\tvar instance = $modal.open( {\n\t\t\t\ttemplateUrl: 'partials/measurements/details.html',\n\t\t\t\tcontroller:  'MeasurementDetailsCtrl',\n\t\t\t\tkeyboard:    true,\n\t\t\t\tbackdrop:    true,\n\t\t\t\tresolve:     {\n\t\t\t\t\t'measurement': function () {\n\t\t\t\t\t\treturn measurement;\n\t\t\t\t\t},\n\t\t\t\t\t'details':     function () {\n\t\t\t\t\t\t// Return the promise so resolve waits\n\t\t\t\t\t\treturn measurementService.getMeasurement( {\n\t\t\t\t\t\t\tmeasurement_id: measurement.measurement_id,\n\t\t\t\t\t\t\tministry_id:    $scope.current.assignment.ministry_id,\n\t\t\t\t\t\t\tmcc:            $scope.current.mcc,\n\t\t\t\t\t\t\tperiod:         $scope.current.period.format( 'YYYY-MM' )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tinstance.result.then( function () {\n\t\t\t\tgetMeasurements();\n\t\t\t} );\n\t\t};\n\t}\n\n\tangular.module( 'gma.controllers.measurements' ).controller( 'MeasurementsCtrl', MeasurementsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction ReportsCtrl( $scope, $document, measurementService, settings ) {\n\t\t$scope.chart = new google.visualization.LineChart( document.getElementById( 'reports-chart' ) );\n\t\t$scope.table = new google.visualization.Table( document.getElementById( 'reports-table' ) );\n\n\t\t// Debounced method to fetch Measurements at most once every 100 milliseconds\n\t\tvar getMeasurements = _.debounce( function () {\n\t\t\tif ( typeof $scope.current.assignment !== 'undefined' && typeof $scope.current.period !== 'undefined' && typeof $scope.current.mcc !== 'undefined' ) {\n\t\t\t\tdelete $scope.dataTable;\n\t\t\t\t$scope.current.isLoaded = false;\n\t\t\t\t$scope.measurements = measurementService.getMeasurements( {\n\t\t\t\t\tministry_id: $scope.current.assignment.ministry_id,\n\t\t\t\t\tmcc:         $scope.current.mcc,\n\t\t\t\t\tperiod:      $scope.current.period.format( 'YYYY-MM' ),\n\t\t\t\t\thistorical:  true\n\t\t\t\t}, function () {\n\t\t\t\t\t$scope.current.isLoaded = true;\n\n\t\t\t\t\tvar chartData = new google.visualization.DataTable(),\n\t\t\t\t\t\ttableData = new google.visualization.DataTable(),\n\t\t\t\t\t\trows = [];\n\t\t\t\t\tchartData.addColumn( 'string', 'Date' );\n\t\t\t\t\tangular.forEach( $scope.dates, function ( date, index ) {\n\t\t\t\t\t\trows[index] = [date];\n\t\t\t\t\t\tangular.forEach( $scope.measurements, function ( measurement ) {\n\t\t\t\t\t\t\tif ( index === 0 ) {\n\t\t\t\t\t\t\t\tchartData.addColumn( 'number', measurement.name );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trows[index].push( measurement.total[date] );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t\tchartData.addRows( rows );\n\t\t\t\t\t$scope.dataTable = chartData;\n\n\t\t\t\t\ttableData.addColumn( 'string', 'Measurement' );\n\t\t\t\t\tangular.forEach( $scope.measurements, function ( measurement, index ) {\n\t\t\t\t\t\tvar row = [];\n\t\t\t\t\t\tangular.forEach( $scope.dates, function ( date ) {\n\t\t\t\t\t\t\tif ( index === 0 ) tableData.addColumn( 'number', date );\n\t\t\t\t\t\t\trow.push( measurement.total[date] );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( index === 0 ) tableData.addColumn( 'number', 'Total' );\n\t\t\t\t\t\ttableData.addRow( [measurement.name].concat( row, [walterMeanAvg( row )] ) );\n\t\t\t\t\t} );\n\t\t\t\t\t$scope.tableDataTable = tableData;\n\t\t\t\t}, function () {\n\t\t\t\t} );\n\t\t\t}\n\t\t}, 100 );\n\n\t\t$scope.$watch( 'current.assignment.ministry_id', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.mcc', function () {\n\t\t\tgetMeasurements();\n\t\t} );\n\n\t\t$scope.$watch( 'current.period', function ( period ) {\n\t\t\tif ( typeof period === 'undefined' ) return;\n\t\t\tgetMeasurements();\n\n\t\t\tvar now = period.clone(),\n\t\t\t\tdates = [];\n\t\t\tfor ( var i = 0; i < 12; i++ ) {\n\t\t\t\tdates.push( now.clone().format( 'YYYY-MM' ) );\n\t\t\t\tnow.subtract( 1, 'M' );\n\t\t\t}\n\t\t\t$scope.dates = dates.reverse();\n\t\t} );\n\n\t\t$scope.$watch( 'dataTable', function ( data ) {\n\t\t\tif ( typeof data === 'undefined' ) return;\n\t\t\t$scope.chart.draw( data, {\n\t\t\t\tchartArea:   {\n\t\t\t\t\ttop:    20,\n\t\t\t\t\tleft:   50,\n\t\t\t\t\twidth:  '80%',\n\t\t\t\t\theight: '90%'\n\t\t\t\t},\n\t\t\t\tlegend:      {\n\t\t\t\t\talignment: 'start',\n\t\t\t\t\tposition:  'right'\n\t\t\t\t},\n\t\t\t\torientation: 'horizontal'\n\t\t\t} );\n\t\t} );\n\n\t\t$scope.$watch( 'tableDataTable', function ( data ) {\n\t\t\tif ( typeof data === 'undefined' ) return;\n\t\t\t$scope.table.draw( data, {} );\n\t\t} );\n\n\t\tfunction walterMeanAvg( data ) {\n\t\t\t// Drop zeros\n\t\t\tvar values = [],\n\t\t\t\ttotal = 0;\n\t\t\tangular.forEach( data, function ( val ) {\n\t\t\t\tif ( val === 0 ) return;\n\t\t\t\tvalues.push( val );\n\t\t\t} );\n\n\t\t\tif ( values.length === 0 ) return 0;\n\n\t\t\tif ( values.length > 4 ) {\n\t\t\t\t// Sort array\n\t\t\t\tvalues.sort( function ( a, b ) {\n\t\t\t\t\treturn a - b;\n\t\t\t\t} );\n\n\t\t\t\t// Remove first element, lowest\n\t\t\t\tvalues.shift();\n\n\t\t\t\t// Remove last element, highest\n\t\t\t\tvalues.pop();\n\t\t\t}\n\n\t\t\t// Sum the values\n\t\t\tangular.forEach( values, function ( val ) {\n\t\t\t\ttotal = total + val;\n\t\t\t} );\n\n\t\t\t// Return the average\n\t\t\treturn Math.round( (total / values.length) * 100 ) / 100;\n\t\t}\n\t}\n\n\tangular.module( 'gma.controllers.reports' ).controller( 'ReportsCtrl', ReportsCtrl );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction assignmentService( $resource, settings ) {\n\t\treturn $resource( settings.api.measurements( '/assignments/:assignment_id' ), {assignment_id: '@assignment_id'}, {\n\t\t\tgetAssignment:  {method: 'GET'},\n\t\t\tgetAssignments: {method: 'GET', isArray: true},\n\t\t\tsaveAssignment: {method: 'PUT'},\n\t\t\taddTeamMember:  {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'assignmentService', assignmentService );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction churchService( $resource, settings ) {\n\t\treturn $resource( settings.api.measurements( '/churches/:church_id' ), {}, {\n\t\t\tgetChurch:   {method: 'GET'},\n\t\t\tgetChurches: {method: 'GET', isArray: true},\n\t\t\taddChurch:   {method: 'POST'},\n\t\t\tsaveChurch:  {method: 'PUT', params: {church_id: '@id'}}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'churchService', churchService );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction measurementService( $resource, settings ) {\n\t\treturn $resource( settings.api.measurements( '/measurements/:measurement_id' ), {}, {\n\t\t\tgetMeasurement:  {method: 'GET'},\n\t\t\tgetMeasurements: {method: 'GET', isArray: true, params: {source: settings.gmaNamespace}},\n\t\t\tsaveMeasurement: {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'measurementService', measurementService );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction measurementTypeService( $resource, settings ) {\n\t\treturn $resource( settings.api.measurements( '/measurement_types/:measurement_type_id' ), {}, {\n\t\t\tgetMeasurementType:  {method: 'GET'},\n\t\t\tgetMeasurementTypes: {method: 'GET', isArray: true},\n\t\t\tsaveMeasurementType: {method: 'PUT'},\n\t\t\taddMeasurementType:  {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'measurementTypeService', measurementTypeService );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction ministryService( $resource, settings ) {\n\t\treturn $resource( settings.api.measurements( '/ministries/:ministry_id' ), {}, {\n\t\t\tgetMinistry:    {method: 'GET'},\n\t\t\tgetMinistries:  {method: 'GET', isArray: true},\n\t\t\tupdateMinistry: {method: 'PUT', params: {ministry_id: '@ministry_id'}},\n\t\t\tcreateMinistry: {method: 'POST'}\n\t\t} );\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'ministryService', ministryService );\n\n})();\n","(function () {\n\t'use strict';\n\n\tfunction sessionService( $rootScope, $injector, $q, $location, $log, settings ) {\n\t\tvar token,\n\t\t\tqueue = [];\n\n\t\tvar startSession = function ( ticket ) {\n\t\t\tif ( \"false\" === ticket ) {\n\t\t\t\twindow.location = settings.api.login;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn $injector.get( '$http' ).get( settings.api.measurements( '/token' ), {params: {st: ticket}} )\n\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t$rootScope.current.user = response.data.user;\n\t\t\t\t\t$rootScope.current.sessionToken = response.data.session_ticket;\n\t\t\t\t\ttoken = response.data.session_ticket;\n\t\t\t\t\tif ( typeof response.data.assignments === 'object' ) {\n\t\t\t\t\t\t$rootScope.current.assignments = response.data.assignments;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete $rootScope.current.assignments;\n\t\t\t\t\t}\n\n\t\t\t\t\t$rootScope.$broadcast( 'sessionStart', response.data );\n\n\t\t\t\t\treturn response.data;\n\t\t\t\t} );\n\t\t};\n\n\t\treturn {\n\t\t\tstartSession:  function ( ticket ) {\n\t\t\t\tstartSession( ticket );\n\t\t\t},\n\t\t\tlogout:        function () {\n\t\t\t\treturn $injector.get( '$http' ).delete( settings.api.measurements( '/token' ) );\n\t\t\t},\n\t\t\t// Request Interceptor\n\t\t\trequest:       function ( config ) {\n\t\t\t\tif ( config.url.indexOf( settings.api.measurements() ) !== -1 ) {\n\t\t\t\t\t// All API requests must pass along HTTP credentials\n\t\t\t\t\tconfig.withCredentials = true;\n\n\t\t\t\t\t// If we have a toekn, add it to the request\n\t\t\t\t\tif ( typeof token !== 'undefined' ) {\n\t\t\t\t\t\tconfig.headers['Authorization'] = 'Bearer ' + token;\n\t\t\t\t\t}\n\n\t\t\t\t\tconfig.attempts = ( typeof config.attempts === 'number' ) ? config.attempts + 1 : 1;\n\t\t\t\t}\n\t\t\t\treturn config;\n\t\t\t},\n\t\t\t// Error Response Interceptor\n\t\t\tresponseError: function ( response ) {\n\t\t\t\tif ( response.status == 401 && response.config.url.indexOf( settings.api.measurements() ) !== -1 && response.config.attempts < 2 ) {\n\t\t\t\t\t$log.debug( response );\n\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\t$injector.get( '$http' ).get( settings.api.refresh, {withCredentials: true} ).then( function ( loginResponse ) {\n\t\t\t\t\t\tif ( loginResponse.data ) {\n\t\t\t\t\t\t\t//get new token\n\t\t\t\t\t\t\tstartSession( loginResponse.data.service_ticket ).then( function () {\n\t\t\t\t\t\t\t\t//retry request with new token\n\t\t\t\t\t\t\t\t$injector.get( '$http' )( response.config ).then( function ( response ) {\n\t\t\t\t\t\t\t\t\tdeferred.resolve( response );\n\t\t\t\t\t\t\t\t}, function ( response ) {\n\t\t\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function ( response ) {\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t\t//redirect the CAS login\n\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t\treturn $q.reject( response );\n\t\t\t}\n\t\t}\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'sessionService', sessionService );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction trainingService( $http, settings ) {\n\t\tfunction getHighest( array ) {\n\t\t\tvar max = 0;\n\t\t\tif ( !array ) return 0;\n\t\t\tfor ( var i = 0; i < array.length; i++ ) {\n\t\t\t\tif ( array[i].phase > (max || 0) ) {\n\t\t\t\t\tmax = array[i].phase;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn max;\n\t\t}\n\n\t\tfunction getHighestCount( array ) {\n\t\t\tvar max = 0;\n\t\t\tfor ( var i = 0; i < array.length; i++ ) {\n\t\t\t\tif ( array[i].number_completed > (max || 0) ) {\n\t\t\t\t\tmax = array[i].number_completed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn max;\n\t\t}\n\n\t\treturn {\n\t\t\tgetTrainings:             function ( session_ticket, ministry_id, mcc, show_all, show_tree ) {\n\t\t\t\treturn $http\n\t\t\t\t\t.get( settings.api.measurements( '/training' ), {\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tministry_id: ministry_id,\n\t\t\t\t\t\t\tshow_all:    show_all,\n\t\t\t\t\t\t\tshow_tree:   show_tree,\n\t\t\t\t\t\t\tmcc:         mcc\n\t\t\t\t\t\t}\n\t\t\t\t\t} )\n\t\t\t\t\t.then( function ( response ) {\n\n\t\t\t\t\t\tangular.forEach( response.data, function ( training ) {\n\t\t\t\t\t\t\ttraining.current_stage = getHighest( training.gcm_training_completions ) + 1;\n\t\t\t\t\t\t\ttraining.leaders_trained = getHighestCount( training.gcm_training_completions );\n\t\t\t\t\t\t\ttraining.editMode = false;\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tupdateTraining:           function ( session_ticket, training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\treturn $http.put( settings.api.measurements( '/training/' + id ), training )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\taddTraining:              function ( session_ticket, training ) {\n\t\t\t\treturn $http.post( settings.api.measurements( '/training' ), training )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tdeleteTraining:           function ( session_ticket, training ) {\n\t\t\t\tvar id = training.hasOwnProperty( 'Id' ) ? training.Id : training.id;\n\t\t\t\treturn $http.delete( settings.api.measurements( '/training/' + id ) )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\taddTrainingCompletion:    function ( session_ticket, training_completion ) {\n\t\t\t\treturn $http.post( settings.api.measurements( '/training_completion' ), training_completion )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tupdateTrainingCompletion: function ( session_ticket, training_completion ) {\n\t\t\t\tvar id = training_completion.hasOwnProperty( 'Id' ) ? training_completion.Id : training_completion.id;\n\t\t\t\treturn $http.put( settings.api.measurements( '/training_completion/' + id ), training_completion )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn response.data;\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tdeleteTrainingCompletion: function ( session_ticket, training_completion ) {\n\t\t\t\tvar id = training_completion.hasOwnProperty( 'Id' ) ? training_completion.Id : training_completion.id;\n\t\t\t\treturn $http.delete( settings.api.measurements( '/training_completion/' + id ) )\n\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tangular.module( 'gma.services.measurements' ).factory( 'trainingService', trainingService );\n})();\n","(function () {\n\t'use strict';\n\n\tfunction settingsService() {\n\t\tvar config = {},\n\t\t\ttabs = [];\n\n\t\tthis.setConfig = function ( c ) {\n\t\t\tconfig = c;\n\t\t};\n\n\t\tvar versionUrl = function ( path ) {\n\t\t\treturn path.indexOf( '?' ) === -1\n\t\t\t\t? path + '?ver=' + config.version\n\t\t\t\t: path + '&ver=' + config.version;\n\t\t};\n\n\t\tvar appUrl = function ( path, version ) {\n\t\t\tversion = typeof version === 'undefined' ? true : version;\n\t\t\tvar url = apiUrl( config.appUrl, path );\n\t\t\tif ( version ) {\n\t\t\t\treturn versionUrl( url );\n\t\t\t}\n\t\t\treturn url;\n\t\t};\n\n\t\tvar measurementsApi = function ( path ) {\n\t\t\treturn apiUrl( config.api.measurements, path );\n\t\t};\n\n\t\tfunction apiUrl( base, path ) {\n\t\t\tif ( typeof path === 'undefined' ) return base;\n\t\t\treturn ( path.indexOf( '/' ) === 0 )\n\t\t\t\t? base + path\n\t\t\t\t: base + '/' + path;\n\t\t}\n\n\t\tvar mobileApps = function () {\n\t\t\tif ( typeof config.mobileapps === 'undefined' ) return false;\n\t\t\treturn config.mobileapps.length > 0 ? config.mobileapps : false;\n\t\t};\n\n\t\tthis.routes = function () {\n\t\t\tangular.forEach( config.tabs, function ( tab ) {\n\t\t\t\tswitch ( tab ) {\n\t\t\t\t\tcase 'map':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Church',\n\t\t\t\t\t\t\tpath:          '/map',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/map/map.html',\n\t\t\t\t\t\t\tcontroller:    'MapCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['self_assigned', 'member', 'inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'measurements':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Measurements',\n\t\t\t\t\t\t\tpath:          '/measurements',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/measurements/measurements.html',\n\t\t\t\t\t\t\tcontroller:    'MeasurementsCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['self_assigned', 'member', 'inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'reports':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Reports',\n\t\t\t\t\t\t\tpath:          '/reports',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/reports/reports.html',\n\t\t\t\t\t\t\tcontroller:    'ReportsCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['inherited_leader', 'leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'admin':\n\t\t\t\t\t\tthis.push( {\n\t\t\t\t\t\t\tname:          'Admin',\n\t\t\t\t\t\t\tpath:          '/admin',\n\t\t\t\t\t\t\ttemplateUrl:   'partials/admin/admin.html',\n\t\t\t\t\t\t\tcontroller:    'AdminCtrl',\n\t\t\t\t\t\t\trequiredRoles: ['leader', 'inherited_leader']\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}, tabs );\n\t\t\treturn tabs;\n\t\t};\n\n\t\tthis.$get = function () {\n\t\t\treturn {\n\t\t\t\tappUrl:       appUrl,\n\t\t\t\tversionUrl:   versionUrl,\n\t\t\t\tticket:       config.ticket,\n\t\t\t\tapi:          {\n\t\t\t\t\tmeasurements: measurementsApi,\n\t\t\t\t\trefresh:      config.api.refresh,\n\t\t\t\t\tlogout:       config.api.logout,\n\t\t\t\t\tlogin:        config.api.login\n\t\t\t\t},\n\t\t\t\tmobileApps:   ( typeof config.mobileapps !== 'undefined' && config.mobileapps.length > 0  ) ? config.mobileapps : false,\n\t\t\t\tgmaNamespace: config.namespace,\n\t\t\t\ttabs:         tabs\n\t\t\t}\n\t\t};\n\t}\n\n\tangular.module( 'gma.services.settings' ).provider( 'settings', settingsService );\n})();\n"],"sourceRoot":"/source/"}